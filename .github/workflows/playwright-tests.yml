name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
      fail-fast: false

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: insurance_testing
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, mbstring, zip, exif, pcntl, bcmath, soap, intl, gd, curl
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy environment file
      run: |
        cp .env.example .env.testing
        echo "APP_ENV=testing" >> .env.testing
        echo "DB_CONNECTION=mysql" >> .env.testing
        echo "DB_HOST=127.0.0.1" >> .env.testing
        echo "DB_PORT=3306" >> .env.testing
        echo "DB_DATABASE=insurance_testing" >> .env.testing
        echo "DB_USERNAME=test_user" >> .env.testing
        echo "DB_PASSWORD=test_password" >> .env.testing

    - name: Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Install Node.js dependencies
      run: npm ci

    - name: Generate application key
      run: php artisan key:generate --env=testing

    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Build assets
      run: npm run prod

    - name: Setup database
      run: |
        php artisan migrate:fresh --seed --env=testing
        php artisan config:clear --env=testing
        php artisan cache:clear --env=testing

    - name: Start Laravel server
      run: |
        php artisan serve --host=127.0.0.1 --port=8000 --env=testing &
        sleep 5
      env:
        APP_ENV: testing

    - name: Run Playwright setup tests
      run: npx playwright test tests/e2e/playwright/setup.spec.js --project=${{ matrix.browser }}
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Run Playwright admin tests
      run: npx playwright test tests/e2e/playwright/admin/ --project=${{ matrix.browser }}
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Run Playwright customer tests
      run: npx playwright test tests/e2e/playwright/customer/ --project=${{ matrix.browser }}
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Run accessibility tests
      run: npx playwright test tests/e2e/playwright/accessibility/ --project=${{ matrix.browser }}
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Run visual regression tests
      run: npx playwright test tests/e2e/playwright/visual/ --project=${{ matrix.browser }} --update-snapshots
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Run end-to-end workflow tests
      run: npx playwright test tests/e2e/playwright/workflows/ --project=${{ matrix.browser }}
      env:
        APP_URL: http://127.0.0.1:8000

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: tests/e2e/playwright-report/
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: tests/e2e/test-results/
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-${{ matrix.browser }}
        path: tests/e2e/screenshots/
        retention-days: 30

  test-mobile:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'test-mobile')

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: insurance_testing
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, mbstring, zip, exif, pcntl, bcmath, soap, intl, gd, curl
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy environment file
      run: |
        cp .env.example .env.testing
        echo "APP_ENV=testing" >> .env.testing
        echo "DB_CONNECTION=mysql" >> .env.testing
        echo "DB_HOST=127.0.0.1" >> .env.testing
        echo "DB_PORT=3306" >> .env.testing
        echo "DB_DATABASE=insurance_testing" >> .env.testing
        echo "DB_USERNAME=test_user" >> .env.testing
        echo "DB_PASSWORD=test_password" >> .env.testing

    - name: Install dependencies
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Setup application
      run: |
        php artisan key:generate --env=testing
        npm run prod
        php artisan migrate:fresh --seed --env=testing

    - name: Start Laravel server
      run: |
        php artisan serve --host=127.0.0.1 --port=8000 --env=testing &
        sleep 5
      env:
        APP_ENV: testing

    - name: Run mobile tests
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        APP_URL: http://127.0.0.1:8000

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-results
        path: tests/e2e/test-results/
        retention-days: 15

  performance:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'test-performance')

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: insurance_testing
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP and Node.js
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, mbstring, zip, exif, pcntl, bcmath, soap, intl, gd, curl

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies and setup
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        npm ci
        cp .env.example .env.testing
        echo "APP_ENV=testing" >> .env.testing
        echo "DB_CONNECTION=mysql" >> .env.testing
        echo "DB_HOST=127.0.0.1" >> .env.testing
        echo "DB_PORT=3306" >> .env.testing
        echo "DB_DATABASE=insurance_testing" >> .env.testing
        echo "DB_USERNAME=test_user" >> .env.testing
        echo "DB_PASSWORD=test_password" >> .env.testing
        php artisan key:generate --env=testing
        npm run prod
        php artisan migrate:fresh --seed --env=testing

    - name: Install Playwright
      run: npx playwright install chromium

    - name: Start Laravel server
      run: |
        php artisan serve --host=127.0.0.1 --port=8000 --env=testing &
        sleep 5
      env:
        APP_ENV: testing

    - name: Run performance tests
      run: |
        npx playwright test tests/e2e/playwright/setup.spec.js --project=chromium
        # Custom performance tests could go here
        npx playwright test tests/e2e/playwright/admin/dashboard.spec.js --project=chromium --grep="performance"
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: tests/e2e/test-results/
        retention-days: 30

  security:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'security')

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: insurance_testing
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, mbstring, zip, exif, pcntl, bcmath, soap, intl, gd, curl

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install and setup
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        npm ci
        cp .env.example .env.testing
        echo "APP_ENV=testing" >> .env.testing
        php artisan key:generate --env=testing
        npm run prod
        php artisan migrate:fresh --seed --env=testing

    - name: Install Playwright
      run: npx playwright install chromium

    - name: Start Laravel server
      run: |
        php artisan serve --host=127.0.0.1 --port=8000 --env=testing &
        sleep 5
      env:
        APP_ENV: testing

    - name: Run security-focused tests
      run: |
        # Authentication and authorization tests
        npx playwright test tests/e2e/playwright/admin/auth.spec.js --project=chromium
        npx playwright test tests/e2e/playwright/customer/auth.spec.js --project=chromium
        # Form validation and XSS prevention tests would go here
      env:
        APP_URL: http://127.0.0.1:8000

    - name: Upload security test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-test-results
        path: tests/e2e/test-results/
        retention-days: 30

  notify:
    runs-on: ubuntu-latest
    needs: [test, test-mobile, performance, security]
    if: always()
    steps:
      - name: Notify on failure
        if: contains(needs.*.result, 'failure')
        run: |
          echo "❌ Some Playwright tests failed!"
          echo "Check the workflow logs and uploaded artifacts for details."

      - name: Notify on success
        if: contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure')
        run: |
          echo "✅ All Playwright tests passed successfully!"