{
    "metadata": {
        "generated_at": "2025-09-19T15:43:02+02:00",
        "analyzer_version": "2.0.0",
        "analysis_type": "complete_codebase_analysis",
        "project_name": "Laravel Insurance Management System",
        "project_path": "C:\\wamp64\\www\\test\\admin-panel"
    },
    "summary": {
        "total_files": 245,
        "total_classes": 230,
        "total_interfaces": 44,
        "total_traits": 3,
        "total_methods": 1587,
        "total_lines": 28970,
        "file_types": {
            "class": 80,
            "interface": 43,
            "unknown": 1,
            "controller": 33,
            "model": 25,
            "service": 39,
            "repository": 21,
            "trait": 3
        },
        "architecture_patterns": [
            "Repository Pattern",
            "Service Pattern",
            "Dependency Injection"
        ]
    },
    "files": [
        {
            "file_path": "app/Console/Commands/SendRenewalReminders.php",
            "namespace": "App\\Console\\Commands",
            "file_type": "class",
            "classes": [
                [
                    "class SendRenewalReminders extends Command",
                    "SendRenewalReminders",
                    "Command"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\WhatsAppApiTrait",
                "Carbon\\Carbon",
                "Illuminate\\Console\\Command",
                "WhatsAppApiTrait",
                "($dates) {\r\n            $query->whereDate('expired_date', $dates['5_days'])\r\n                ->orWhereDate('expired_date', $dates['10_days'])\r\n                ->orWhereDate('expired_date', $dates['15_days'])\r\n                ->orWhereDate('expired_date', $dates['30_days'])"
            ],
            "line_count": 57,
            "size_bytes": 2069
        },
        {
            "file_path": "app/Console/Kernel.php",
            "namespace": "App\\Console",
            "file_type": "class",
            "classes": [
                [
                    "class Kernel extends ConsoleKernel",
                    "Kernel",
                    "ConsoleKernel"
                ]
            ],
            "methods": [
                "schedule",
                "commands"
            ],
            "method_count": 2,
            "uses": [
                "Illuminate\\Console\\Scheduling\\Schedule",
                "Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel"
            ],
            "line_count": 33,
            "size_bytes": 713
        },
        {
            "file_path": "app/Contracts/Repositories/AddonCoverRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface AddonCoverRepositoryInterface extends BaseRepositoryInterface",
                    "AddonCoverRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\AddonCover"
            ],
            "line_count": 17,
            "size_bytes": 493
        },
        {
            "file_path": "app/Contracts/Repositories/BaseRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface eliminates",
                    "eliminates"
                ],
                [
                    "interface BaseRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getPaginated",
                "create",
                "update",
                "delete",
                "findById",
                "updateStatus",
                "getActive",
                "getAllForExport"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 84,
            "size_bytes": 1924
        },
        {
            "file_path": "app/Contracts/Repositories/BranchRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface BranchRepositoryInterface extends BaseRepositoryInterface",
                    "BranchRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getBranchesWithFilters",
                "getBranchesByStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 65,
            "size_bytes": 1652
        },
        {
            "file_path": "app/Contracts/Repositories/BrokerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface BrokerRepositoryInterface extends BaseRepositoryInterface",
                    "BrokerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\Broker"
            ],
            "line_count": 17,
            "size_bytes": 471
        },
        {
            "file_path": "app/Contracts/Repositories/ClaimRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface ClaimRepositoryInterface extends BaseRepositoryInterface",
                    "ClaimRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getClaimsWithFilters",
                "getClaimsByStatus",
                "getClaimsByInsuranceType",
                "getClaimsByDateRange",
                "getClaimStatistics",
                "searchClaims",
                "getClaimsByCustomer",
                "getClaimsByCustomerInsurance",
                "generateClaimNumber"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 90,
            "size_bytes": 2320
        },
        {
            "file_path": "app/Contracts/Repositories/CustomerInsuranceRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerInsuranceRepositoryInterface extends BaseRepositoryInterface",
                    "CustomerInsuranceRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getByCustomerId",
                "getExpiringPolicies",
                "findWithRelations",
                "getActiveCustomerInsurances"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 35,
            "size_bytes": 1000
        },
        {
            "file_path": "app/Contracts/Repositories/CustomerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerRepositoryInterface extends BaseRepositoryInterface",
                    "CustomerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "findByEmail",
                "findByMobileNumber",
                "getByFamilyGroup",
                "getByType",
                "search",
                "exists",
                "count",
                "getActiveCustomers",
                "getCustomersWithValidMobileNumbers",
                "getCustomersByIds"
            ],
            "method_count": 11,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 77,
            "size_bytes": 1838
        },
        {
            "file_path": "app/Contracts/Repositories/FamilyGroupRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface FamilyGroupRepositoryInterface extends BaseRepositoryInterface",
                    "FamilyGroupRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getFamilyGroupsWithFilters",
                "getFamilyGroupWithMembers",
                "getFamilyGroupsByHead",
                "getFamilyGroupsByCustomer",
                "getAvailableCustomers",
                "getAvailableCustomersForEdit",
                "isCustomerInFamilyGroup",
                "getFamilyMembers",
                "updateFamilyHead",
                "removeCustomerFromFamilyGroup",
                "getFamilyGroupStatistics",
                "searchFamilyGroups",
                "getAllFamilyGroupsWithRelationships"
            ],
            "method_count": 13,
            "uses": [
                "App\\Models\\FamilyGroup",
                "App\\Models\\Customer",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 124,
            "size_bytes": 3396
        },
        {
            "file_path": "app/Contracts/Repositories/FuelTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface FuelTypeRepositoryInterface extends BaseRepositoryInterface",
                    "FuelTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\FuelType"
            ],
            "line_count": 18,
            "size_bytes": 468
        },
        {
            "file_path": "app/Contracts/Repositories/InsuranceCompanyRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface InsuranceCompanyRepositoryInterface extends BaseRepositoryInterface",
                    "InsuranceCompanyRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\InsuranceCompany"
            ],
            "line_count": 17,
            "size_bytes": 523
        },
        {
            "file_path": "app/Contracts/Repositories/MarketingWhatsAppRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface MarketingWhatsAppRepositoryInterface extends BaseRepositoryInterface",
                    "MarketingWhatsAppRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getMarketingMessagesWithFilters",
                "getMarketingMessagesByStatus",
                "getMarketingMessagesByType",
                "getTodayMarketingMessages",
                "getMarketingMessagesByDateRange",
                "getMarketingMessageStatistics",
                "searchMarketingMessages",
                "getMarketingMessagesByPhoneNumber",
                "getFailedMarketingMessages",
                "getAllMarketingMessagesForExport",
                "markMessageAsSent",
                "markMessageAsFailed"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\MarketingWhatsApp",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 114,
            "size_bytes": 3122
        },
        {
            "file_path": "app/Contracts/Repositories/PermissionRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PermissionRepositoryInterface extends BaseRepositoryInterface",
                    "PermissionRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getPermissionsWithFilters",
                "getPermissionWithRoles",
                "getPermissionsWithRolesCount",
                "searchPermissions",
                "getPermissionsByGuard",
                "getPermissionsByModule",
                "getPermissionStatistics",
                "getPermissionsByRole",
                "getUnassignedPermissions"
            ],
            "method_count": 9,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission"
            ],
            "line_count": 90,
            "size_bytes": 2422
        },
        {
            "file_path": "app/Contracts/Repositories/PolicyRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyRepositoryInterface extends BaseRepositoryInterface",
                    "PolicyRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "getByCustomer",
                "getByInsuranceCompany",
                "getExpired",
                "getDueForRenewal",
                "getByFamilyGroup",
                "getByPolicyType",
                "search",
                "getStatistics",
                "exists",
                "getCountByStatus"
            ],
            "method_count": 11,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 70,
            "size_bytes": 1717
        },
        {
            "file_path": "app/Contracts/Repositories/PolicyTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyTypeRepositoryInterface extends BaseRepositoryInterface",
                    "PolicyTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\PolicyType"
            ],
            "line_count": 18,
            "size_bytes": 478
        },
        {
            "file_path": "app/Contracts/Repositories/PremiumTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PremiumTypeRepositoryInterface extends BaseRepositoryInterface",
                    "PremiumTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\PremiumType"
            ],
            "line_count": 18,
            "size_bytes": 483
        },
        {
            "file_path": "app/Contracts/Repositories/QuotationRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationRepositoryInterface extends BaseRepositoryInterface",
                    "QuotationRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "getByCustomer",
                "getByStatus",
                "getRecent",
                "search",
                "getSentQuotations",
                "getPendingQuotations",
                "getCountByStatus",
                "exists"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 60,
            "size_bytes": 1463
        },
        {
            "file_path": "app/Contracts/Repositories/ReferenceUserRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReferenceUserRepositoryInterface extends BaseRepositoryInterface",
                    "ReferenceUserRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 17,
            "size_bytes": 508
        },
        {
            "file_path": "app/Contracts/Repositories/RelationshipManagerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface RelationshipManagerRepositoryInterface extends BaseRepositoryInterface",
                    "RelationshipManagerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 17,
            "size_bytes": 538
        },
        {
            "file_path": "app/Contracts/Repositories/RoleRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface RoleRepositoryInterface extends BaseRepositoryInterface",
                    "RoleRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getRolesWithFilters",
                "getRoleWithPermissions",
                "getRolesWithPermissionsCount",
                "searchRoles",
                "getRolesByGuard",
                "getRoleStatistics",
                "getRolesByModel"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role"
            ],
            "line_count": 74,
            "size_bytes": 1903
        },
        {
            "file_path": "app/Contracts/Repositories/UserRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface UserRepositoryInterface extends BaseRepositoryInterface",
                    "UserRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "findWithRoles",
                "updatePassword"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\User"
            ],
            "line_count": 24,
            "size_bytes": 568
        },
        {
            "file_path": "app/Contracts/Services/AddonCoverServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface AddonCoverServiceInterface",
                    "AddonCoverServiceInterface"
                ]
            ],
            "methods": [
                "getAddonCovers",
                "createAddonCover",
                "updateAddonCover",
                "deleteAddonCover",
                "updateStatus",
                "exportAddonCovers",
                "getActiveAddonCovers",
                "getStoreValidationRules",
                "getUpdateValidationRules"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 28,
            "size_bytes": 942
        },
        {
            "file_path": "app/Contracts/Services/BranchServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface BranchServiceInterface",
                    "BranchServiceInterface"
                ]
            ],
            "methods": [
                "getBranches",
                "createBranch",
                "updateBranch",
                "deleteBranch",
                "updateBranchStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics",
                "getAllBranchesForExport"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 98,
            "size_bytes": 2305
        },
        {
            "file_path": "app/Contracts/Services/BrokerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface BrokerServiceInterface",
                    "BrokerServiceInterface"
                ]
            ],
            "methods": [
                "getBrokers",
                "createBroker",
                "updateBroker",
                "deleteBroker",
                "updateStatus",
                "exportBrokers",
                "getActiveBrokers"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\Broker",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 24,
            "size_bytes": 737
        },
        {
            "file_path": "app/Contracts/Services/ClaimServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ClaimServiceInterface",
                    "ClaimServiceInterface"
                ]
            ],
            "methods": [
                "getClaims",
                "createClaim",
                "updateClaim",
                "updateClaimStatus",
                "deleteClaim",
                "searchPolicies",
                "getClaimStatistics"
            ],
            "method_count": 7,
            "uses": [
                "App\\Http\\Requests\\StoreClaimRequest",
                "App\\Http\\Requests\\UpdateClaimRequest",
                "App\\Models\\Claim",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 75,
            "size_bytes": 1883
        },
        {
            "file_path": "app/Contracts/Services/CustomerInsuranceServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerInsuranceServiceInterface",
                    "CustomerInsuranceServiceInterface"
                ]
            ],
            "methods": [
                "getCustomerInsurances",
                "getFormData",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getRenewalValidationRules",
                "prepareStorageData",
                "createCustomerInsurance",
                "updateCustomerInsurance",
                "deleteCustomerInsurance",
                "updateStatus",
                "renewPolicy",
                "handleFileUpload",
                "sendWhatsAppDocument",
                "sendRenewalReminderWhatsApp",
                "exportCustomerInsurances",
                "getCustomerPolicies",
                "getExpiringPolicies",
                "calculateCommissionBreakdown"
            ],
            "method_count": 18,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 101,
            "size_bytes": 3003
        },
        {
            "file_path": "app/Contracts/Services/CustomerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerServiceInterface",
                    "CustomerServiceInterface"
                ]
            ],
            "methods": [
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "handleCustomerDocuments",
                "sendOnboardingMessage",
                "getActiveCustomersForSelection"
            ],
            "method_count": 8,
            "uses": [
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 52,
            "size_bytes": 1559
        },
        {
            "file_path": "app/Contracts/Services/FamilyGroupServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface FamilyGroupServiceInterface",
                    "FamilyGroupServiceInterface"
                ]
            ],
            "methods": [
                "getFamilyGroups",
                "getFamilyGroupWithMembers",
                "createFamilyGroup",
                "updateFamilyGroup",
                "deleteFamilyGroup",
                "updateFamilyGroupStatus",
                "addFamilyMember",
                "removeFamilyMember",
                "removeFamilyMemberByObject",
                "updateFamilyMember",
                "changeFamilyHead",
                "setupMemberPasswords",
                "sendPasswordNotifications",
                "getAvailableCustomers",
                "cleanupOrphanedRecords",
                "getFamilyGroupStatistics",
                "getAllFamilyGroupsForExport"
            ],
            "method_count": 17,
            "uses": [
                "App\\Models\\FamilyGroup",
                "App\\Models\\FamilyMember",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 158,
            "size_bytes": 4366
        },
        {
            "file_path": "app/Contracts/Services/FuelTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface FuelTypeServiceInterface",
                    "FuelTypeServiceInterface"
                ]
            ],
            "methods": [
                "createFuelType",
                "updateFuelType",
                "deleteFuelType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\FuelType"
            ],
            "line_count": 46,
            "size_bytes": 997
        },
        {
            "file_path": "app/Contracts/Services/InsuranceCompanyServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface InsuranceCompanyServiceInterface",
                    "InsuranceCompanyServiceInterface"
                ]
            ],
            "methods": [
                "getInsuranceCompanies",
                "createInsuranceCompany",
                "updateInsuranceCompany",
                "deleteInsuranceCompany",
                "updateStatus",
                "exportInsuranceCompanies",
                "getActiveInsuranceCompanies"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\InsuranceCompany",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 24,
            "size_bytes": 890
        },
        {
            "file_path": "app/Contracts/Services/MarketingWhatsAppServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface MarketingWhatsAppServiceInterface",
                    "MarketingWhatsAppServiceInterface"
                ]
            ],
            "methods": [
                "getActiveCustomers",
                "getValidCustomersForMarketing",
                "sendMarketingCampaign",
                "previewCustomerList",
                "sendTextMessage",
                "sendImageMessage",
                "getMarketingStatistics",
                "logMarketingAttempt"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 87,
            "size_bytes": 2475
        },
        {
            "file_path": "app/Contracts/Services/PermissionServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PermissionServiceInterface",
                    "PermissionServiceInterface"
                ]
            ],
            "methods": [
                "getPermissions",
                "createPermission",
                "updatePermission",
                "deletePermission",
                "getAllPermissions",
                "getPermissionsByRole",
                "searchPermissions",
                "getPermissionStatistics",
                "syncRolePermissions",
                "getPermissionsGroupedByModule"
            ],
            "method_count": 10,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission"
            ],
            "line_count": 98,
            "size_bytes": 2417
        },
        {
            "file_path": "app/Contracts/Services/PolicyServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyServiceInterface",
                    "PolicyServiceInterface"
                ]
            ],
            "methods": [
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "getCustomerPolicies",
                "getPoliciesDueForRenewal",
                "sendRenewalReminder",
                "getFamilyPolicies",
                "canCustomerViewPolicy",
                "getPolicyStatistics"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 56,
            "size_bytes": 1608
        },
        {
            "file_path": "app/Contracts/Services/PolicyTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyTypeServiceInterface",
                    "PolicyTypeServiceInterface"
                ]
            ],
            "methods": [
                "createPolicyType",
                "updatePolicyType",
                "deletePolicyType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\PolicyType"
            ],
            "line_count": 46,
            "size_bytes": 1039
        },
        {
            "file_path": "app/Contracts/Services/PremiumTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PremiumTypeServiceInterface",
                    "PremiumTypeServiceInterface"
                ]
            ],
            "methods": [
                "createPremiumType",
                "updatePremiumType",
                "deletePremiumType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\PremiumType"
            ],
            "line_count": 46,
            "size_bytes": 1060
        },
        {
            "file_path": "app/Contracts/Services/QuotationServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationServiceInterface",
                    "QuotationServiceInterface"
                ]
            ],
            "methods": [
                "getQuotations",
                "createQuotation",
                "updateQuotationWithCompanies",
                "generateCompanyQuotes",
                "generateQuotesForSelectedCompanies",
                "sendQuotationViaWhatsApp",
                "generatePdf",
                "deleteQuotation",
                "calculatePremium",
                "getQuotationFormData"
            ],
            "method_count": 10,
            "uses": [
                "App\\Http\\Requests\\CreateQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 62,
            "size_bytes": 1695
        },
        {
            "file_path": "app/Contracts/Services/ReferenceUserServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReferenceUserServiceInterface",
                    "ReferenceUserServiceInterface"
                ]
            ],
            "methods": [
                "createReferenceUser",
                "updateReferenceUser",
                "deleteReferenceUser",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 46,
            "size_bytes": 1102
        },
        {
            "file_path": "app/Contracts/Services/RelationshipManagerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface RelationshipManagerServiceInterface",
                    "RelationshipManagerServiceInterface"
                ]
            ],
            "methods": [
                "createRelationshipManager",
                "updateRelationshipManager",
                "deleteRelationshipManager",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 46,
            "size_bytes": 1228
        },
        {
            "file_path": "app/Contracts/Services/ReportServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReportServiceInterface",
                    "ReportServiceInterface"
                ]
            ],
            "methods": [
                "getInitialData",
                "generateCrossSellingReport",
                "generateCustomerInsuranceReport",
                "exportCrossSellingReport",
                "exportCustomerInsuranceReport",
                "saveUserReportColumns",
                "loadUserReportColumns"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Http\\Request",
                "Symfony\\Component\\HttpFoundation\\BinaryFileResponse"
            ],
            "line_count": 44,
            "size_bytes": 1235
        },
        {
            "file_path": "app/Contracts/Services/RoleServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface RoleServiceInterface",
                    "RoleServiceInterface"
                ]
            ],
            "methods": [
                "getRoles",
                "createRole",
                "updateRole",
                "deleteRole",
                "getAllRoles",
                "getRolesByUser",
                "searchRoles",
                "getRoleStatistics",
                "assignPermissionsToRole",
                "removePermissionsFromRole",
                "assignRoleToUser",
                "removeRoleFromUser",
                "getRoleWithPermissions",
                "getUsersCountByRole"
            ],
            "method_count": 14,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role"
            ],
            "line_count": 134,
            "size_bytes": 3077
        },
        {
            "file_path": "app/Contracts/Services/UserServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface UserServiceInterface",
                    "UserServiceInterface"
                ]
            ],
            "methods": [
                "getUsers",
                "createUser",
                "updateUser",
                "deleteUser",
                "updateStatus",
                "assignRoles",
                "exportUsers",
                "getActiveUsers",
                "changePassword",
                "getUserWithRoles",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getPasswordValidationRules",
                "getRoles"
            ],
            "method_count": 14,
            "uses": [
                "App\\Models\\User",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 38,
            "size_bytes": 1204
        },
        {
            "file_path": "app/Events/Audit/CustomerActionLogged.php",
            "namespace": "App\\Events\\Audit",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerActionLogged",
                    "CustomerActionLogged"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isSecurityRelevant",
                "isHighRisk",
                "shouldAlertSecurity",
                "shouldQueue",
                "getQueueName"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 86,
            "size_bytes": 2764
        },
        {
            "file_path": "app/Events/Customer/CustomerEmailVerified.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerEmailVerified",
                    "CustomerEmailVerified"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "shouldQueue"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 40,
            "size_bytes": 1118
        },
        {
            "file_path": "app/Events/Customer/CustomerProfileUpdated.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerProfileUpdated",
                    "CustomerProfileUpdated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "hasSignificantChanges",
                "shouldQueue"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 49,
            "size_bytes": 1480
        },
        {
            "file_path": "app/Events/Customer/CustomerRegistered.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerRegistered",
                    "CustomerRegistered"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "shouldQueue"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 42,
            "size_bytes": 1217
        },
        {
            "file_path": "app/Events/CustomerCreated.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerCreated",
                    "CustomerCreated"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 17,
            "size_bytes": 372
        },
        {
            "file_path": "app/Events/Document/PDFGenerationRequested.php",
            "namespace": "App\\Events\\Document",
            "file_type": "class",
            "classes": [
                [
                    "class PDFGenerationRequested",
                    "PDFGenerationRequested"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isQuotation",
                "isPolicy",
                "isHighPriority",
                "getExpectedFilePath",
                "shouldQueue",
                "getQueueName"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 102,
            "size_bytes": 3058
        },
        {
            "file_path": "app/Events/Insurance/PolicyCreated.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyCreated",
                    "PolicyCreated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValuePolicy",
                "isPremiumPolicy",
                "getDaysToExpiry",
                "shouldQueue"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 72,
            "size_bytes": 2314
        },
        {
            "file_path": "app/Events/Insurance/PolicyExpiringWarning.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyExpiringWarning",
                    "PolicyExpiringWarning"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isUrgent",
                "isHighValue",
                "shouldSendWhatsApp",
                "shouldSendEmail",
                "shouldQueue"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 76,
            "size_bytes": 2431
        },
        {
            "file_path": "app/Events/Insurance/PolicyRenewed.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyRenewed",
                    "PolicyRenewed"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isPremiumIncrease",
                "getCoverageIncrease",
                "getDaysBeforeExpiry",
                "shouldQueue"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 80,
            "size_bytes": 2755
        },
        {
            "file_path": "app/Events/PolicyExpiring.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyExpiring",
                    "PolicyExpiring"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 18,
            "size_bytes": 422
        },
        {
            "file_path": "app/Events/Quotation/QuotationGenerated.php",
            "namespace": "App\\Events\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationGenerated",
                    "QuotationGenerated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValueQuotation",
                "hasMultipleOptions",
                "shouldQueue"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 67,
            "size_bytes": 2243
        },
        {
            "file_path": "app/Events/Quotation/QuotationRequested.php",
            "namespace": "App\\Events\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationRequested",
                    "QuotationRequested"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValue",
                "shouldQueue"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\PolicyType",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 61,
            "size_bytes": 1913
        },
        {
            "file_path": "app/Events/QuotationGenerated.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationGenerated",
                    "QuotationGenerated"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 17,
            "size_bytes": 378
        },
        {
            "file_path": "app/Exceptions/Handler.php",
            "namespace": "App\\Exceptions",
            "file_type": "class",
            "classes": [
                [
                    "class Handler extends ExceptionHandler",
                    "Handler",
                    "ExceptionHandler"
                ]
            ],
            "methods": [
                "register",
                "render"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Auth\\Access\\AuthorizationException",
                "Illuminate\\Database\\QueryException",
                "Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response",
                "Throwable"
            ],
            "line_count": 56,
            "size_bytes": 1267
        },
        {
            "file_path": "app/Exports/AddonCoversExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class AddonCoversExport implements FromCollection\r\n",
                    "AddonCoversExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\AddonCover",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 17,
            "size_bytes": 316
        },
        {
            "file_path": "app/Exports/BranchesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class BranchesExport implements FromCollection, WithHeadings, WithMapping\r\n",
                    "BranchesExport",
                    "",
                    "FromCollection, WithHeadings, WithMapping\r\n"
                ]
            ],
            "methods": [
                "collection",
                "headings",
                "map"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Branch",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMapping"
            ],
            "line_count": 40,
            "size_bytes": 1007
        },
        {
            "file_path": "app/Exports/BrokersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class BrokersExport implements FromCollection\r\n",
                    "BrokersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Broker",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 306
        },
        {
            "file_path": "app/Exports/ClaimsExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class ClaimsExport implements FromQuery, WithHeadings, WithMapping, WithStyles, ShouldAutoSize\r\n",
                    "ClaimsExport",
                    "",
                    "FromQuery, WithHeadings, WithMapping, WithStyles, ShouldAutoSize\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "query",
                "headings",
                "map",
                "styles"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Database\\Eloquent\\Builder",
                "Maatwebsite\\Excel\\Concerns\\FromQuery",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMapping",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "($search) {\r\n                $q->where('claim_number', 'like', \"%{$search}%\")\r\n                  ->orWhere('description', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($search) {\r\n                      $customerQuery->where('name', 'like', \"%{$search}%\")\r\n                                   ->orWhere('email', 'like', \"%{$search}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                "($search) {\r\n                      $insuranceQuery->where('policy_no', 'like', \"%{$search}%\")\r\n                                    ->orWhere('registration_no', 'like', \"%{$search}%\")"
            ],
            "line_count": 134,
            "size_bytes": 4702
        },
        {
            "file_path": "app/Exports/CrossSellingExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CrossSellingExport implements WithMultipleSheets\r\n",
                    "CrossSellingExport",
                    "",
                    "WithMultipleSheets\r\n"
                ],
                [
                    "class CrossSellingSummarySheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "CrossSellingSummarySheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ],
                [
                    "class CrossSellingDataSheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "CrossSellingDataSheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "sheets",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\PremiumType",
                "Illuminate\\Support\\Carbon",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMultipleSheets",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "Maatwebsite\\Excel\\Concerns\\WithEvents",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "PhpOffice\\PhpSpreadsheet\\Style\\Fill",
                "PhpOffice\\PhpSpreadsheet\\Style\\Border",
                "PhpOffice\\PhpSpreadsheet\\Style\\Alignment",
                "($premiumType) {\r\n                return $customer->insurance->contains('premium_type_id', $premiumType->id)",
                "($premiumType) {\r\n                return $customer->insurance->where('premium_type_id', $premiumType->id)->sum('final_premium_with_gst')",
                "($premiumTypes, $oneYearAgo, $hasDateFilter) {\r\n            $customerData = ['customer_name' => $customer->name]",
                "($premiumType) {\r\n                    return $insurance->premiumType->id === $premiumType->id"
            ],
            "line_count": 325,
            "size_bytes": 13581
        },
        {
            "file_path": "app/Exports/CustomerInsurancesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsurancesExport implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles\r\n",
                    "CustomerInsurancesExport",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles\r\n"
                ]
            ],
            "methods": [
                "collection",
                "headings",
                "styles",
                "applyFilter",
                "registerEvents"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet"
            ],
            "line_count": 173,
            "size_bytes": 6455
        },
        {
            "file_path": "app/Exports/CustomerInsurancesExport1.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsurancesExport1 implements WithMultipleSheets\r\n",
                    "CustomerInsurancesExport1",
                    "",
                    "WithMultipleSheets\r\n"
                ],
                [
                    "class InsuranceSummarySheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "InsuranceSummarySheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ],
                [
                    "class InsuranceDataSheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "InsuranceDataSheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "sheets",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Models\\Report",
                "Carbon\\Carbon",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithMultipleSheets",
                "Maatwebsite\\Excel\\Concerns\\WithEvents",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "PhpOffice\\PhpSpreadsheet\\Style\\Fill",
                "PhpOffice\\PhpSpreadsheet\\Style\\Border",
                "PhpOffice\\PhpSpreadsheet\\Style\\Alignment"
            ],
            "line_count": 301,
            "size_bytes": 12776
        },
        {
            "file_path": "app/Exports/CustomersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomersExport implements FromCollection\r\n",
                    "CustomersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Customer",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 312
        },
        {
            "file_path": "app/Exports/FuelTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class FuelTypesExport implements FromCollection\r\n",
                    "FuelTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\FuelType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 312
        },
        {
            "file_path": "app/Exports/InsuranceCompanyExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class InsuranceCompanyExport implements FromCollection\r\n",
                    "InsuranceCompanyExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\InsuranceCompany",
                "App\\Models\\RelationshipManager",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 19,
            "size_bytes": 372
        },
        {
            "file_path": "app/Exports/PolicyTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyTypesExport implements FromCollection\r\n",
                    "PolicyTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\PolicyType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 318
        },
        {
            "file_path": "app/Exports/PremiumTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class PremiumTypesExport implements FromCollection\r\n",
                    "PremiumTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\PremiumType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 321
        },
        {
            "file_path": "app/Exports/ReferenceUsersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class ReferenceUsersExport implements FromCollection\r\n",
                    "ReferenceUsersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\ReferenceUser",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 327
        },
        {
            "file_path": "app/Exports/RelationshipManagersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class RelationshipManagersExport implements FromCollection\r\n",
                    "RelationshipManagersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\RelationshipManager",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 345
        },
        {
            "file_path": "app/Exports/UsersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class UsersExport implements FromCollection\r\n",
                    "UsersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\User",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 300
        },
        {
            "file_path": "app/Helpers/DateHelper.php",
            "namespace": "App\\Helpers",
            "file_type": "class",
            "classes": [
                [
                    "class DateHelper",
                    "DateHelper"
                ]
            ],
            "methods": [
                "toUiFormat",
                "toDatabaseFormat",
                "toUiDateTimeFormat",
                "currentUiDate",
                "currentDatabaseDate",
                "isValidUiFormat",
                "isValidDatabaseFormat"
            ],
            "method_count": 7,
            "uses": [
                "Carbon\\Carbon",
                "InvalidArgumentException"
            ],
            "line_count": 128,
            "size_bytes": 3619
        },
        {
            "file_path": "app/helpers.php",
            "namespace": "",
            "file_type": "unknown",
            "classes": [],
            "methods": [],
            "method_count": 0,
            "uses": [],
            "line_count": 64,
            "size_bytes": 1534
        },
        {
            "file_path": "app/Http/Controllers/AbstractBaseCrudController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "abstract class AbstractBaseCrudController extends Controller",
                    "AbstractBaseCrudController",
                    "Controller"
                ]
            ],
            "methods": [
                "setupPermissionMiddleware",
                "setupCustomPermissionMiddleware",
                "setupAuthMiddleware",
                "setupGuestMiddleware",
                "getSuccessMessage",
                "getErrorMessage",
                "redirectWithSuccess",
                "redirectWithError",
                "redirectWithValidationErrors"
            ],
            "method_count": 9,
            "uses": [],
            "line_count": 144,
            "size_bytes": 5111
        },
        {
            "file_path": "app/Http/Controllers/AddonCoverController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class AddonCoverController extends AbstractBaseCrudController",
                    "AddonCoverController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importAddonCovers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\AddonCoverServiceInterface",
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 181,
            "size_bytes": 5614
        },
        {
            "file_path": "app/Http/Controllers/Auth/ConfirmPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ConfirmPasswordController extends Controller",
                    "ConfirmPasswordController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ],
                [
                    "trait and",
                    "and"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\ConfirmsPasswords",
                "ConfirmsPasswords"
            ],
            "line_count": 41,
            "size_bytes": 1064
        },
        {
            "file_path": "app/Http/Controllers/Auth/CustomerAuthController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerAuthController extends Controller",
                    "CustomerAuthController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "showLoginForm",
                "login",
                "validateLogin",
                "attemptLogin",
                "credentials",
                "sendLoginResponse",
                "sendFailedLoginResponse",
                "redirectPath",
                "logout",
                "dashboard",
                "username",
                "showChangePasswordForm",
                "changePassword",
                "showEmailVerificationNotice",
                "verifyEmail",
                "resendVerification",
                "showPasswordResetForm",
                "sendPasswordResetLink",
                "showPasswordResetFormWithToken",
                "resetPassword",
                "showProfile",
                "showFamilyMemberProfile",
                "showFamilyMemberPasswordForm",
                "updateFamilyMemberPassword",
                "showPolicies",
                "showPolicyDetail",
                "downloadPolicy",
                "showQuotations",
                "showQuotationDetail",
                "downloadQuotation",
                "showClaims",
                "showClaimDetail"
            ],
            "method_count": 33,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Models\\Customer",
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\Foundation\\Auth\\ThrottlesLogins",
                "ThrottlesLogins",
                "($thirtyDaysFromNow) {\r\n                    if (!$policy->expired_date) {\r\n                        return false",
                "($customer) {\r\n                            $query->where('family_group_id', $customer->family_group_id)",
                "the regular password change form for your own account.')",
                "the regular password change form for your own account.')",
                "($customer) {\r\n                            $query->where('family_group_id', $customer->family_group_id)"
            ],
            "line_count": 1250,
            "size_bytes": 50378
        },
        {
            "file_path": "app/Http/Controllers/Auth/ForgotPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ForgotPasswordController extends Controller",
                    "ForgotPasswordController",
                    "Controller"
                ],
                [
                    "trait which",
                    "which"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails",
                "SendsPasswordResetEmails"
            ],
            "line_count": 23,
            "size_bytes": 689
        },
        {
            "file_path": "app/Http/Controllers/Auth/LoginController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class LoginController extends Controller",
                    "LoginController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\AuthenticatesUsers",
                "AuthenticatesUsers"
            ],
            "line_count": 41,
            "size_bytes": 1042
        },
        {
            "file_path": "app/Http/Controllers/Auth/RegisterController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class RegisterController extends Controller",
                    "RegisterController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ]
            ],
            "methods": [
                "__construct",
                "validator",
                "create"
            ],
            "method_count": 3,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "App\\Models\\User",
                "Illuminate\\Foundation\\Auth\\RegistersUsers",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Facades\\Validator",
                "RegistersUsers"
            ],
            "line_count": 74,
            "size_bytes": 2037
        },
        {
            "file_path": "app/Http/Controllers/Auth/ResetPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ResetPasswordController extends Controller",
                    "ResetPasswordController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ],
                [
                    "trait and",
                    "and"
                ]
            ],
            "methods": [
                "rules"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\ResetsPasswords",
                "ResetsPasswords"
            ],
            "line_count": 40,
            "size_bytes": 1085
        },
        {
            "file_path": "app/Http/Controllers/Auth/VerificationController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class VerificationController extends Controller",
                    "VerificationController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\VerifiesEmails",
                "VerifiesEmails"
            ],
            "line_count": 43,
            "size_bytes": 1172
        },
        {
            "file_path": "app/Http/Controllers/BranchController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class BranchController extends AbstractBaseCrudController",
                    "BranchController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "edit",
                "update",
                "updateStatus",
                "export"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\BranchesExport"
            ],
            "line_count": 141,
            "size_bytes": 4060
        },
        {
            "file_path": "app/Http/Controllers/BrokerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class BrokerController extends AbstractBaseCrudController",
                    "BrokerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importBrokers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\BrokerServiceInterface",
                "App\\Http\\Requests\\StoreBrokerRequest",
                "App\\Http\\Requests\\UpdateBrokerRequest",
                "App\\Models\\Broker",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\BrokersExport"
            ],
            "line_count": 156,
            "size_bytes": 4590
        },
        {
            "file_path": "app/Http/Controllers/ClaimController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ClaimController extends AbstractBaseCrudController",
                    "ClaimController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "updateStatus",
                "delete",
                "export",
                "searchPolicies",
                "getStatistics",
                "sendDocumentListWhatsApp",
                "sendPendingDocumentsWhatsApp",
                "sendClaimNumberWhatsApp",
                "getWhatsAppPreview",
                "updateDocumentStatus",
                "addStage",
                "updateClaimNumber",
                "updateLiabilityDetails"
            ],
            "method_count": 20,
            "uses": [
                "App\\Http\\Requests\\StoreClaimRequest",
                "App\\Http\\Requests\\UpdateClaimRequest",
                "App\\Models\\Claim",
                "App\\Services\\ClaimService",
                "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\ClaimsExport",
                "web guard for admin\n        $this->setupCustomPermissionMiddleware([\n            ['permission' => 'claim-list|claim-create|claim-edit|claim-delete', 'only' => ['index']],\n            ['permission' => 'claim-create', 'only' => ['create', 'store', 'updateStatus']],\n            ['permission' => 'claim-edit', 'only' => ['edit', 'update']],\n            ['permission' => 'claim-delete', 'only' => ['delete']]\n        ])"
            ],
            "line_count": 505,
            "size_bytes": 17189
        },
        {
            "file_path": "app/Http/Controllers/CommonController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CommonController extends Controller",
                    "CommonController",
                    "Controller"
                ]
            ],
            "methods": [
                "refreshCaptchaImage",
                "deleteCommon",
                "activeInactiveCommon",
                "getImage",
                "getImage1"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Http\\Request",
                "Mail"
            ],
            "line_count": 70,
            "size_bytes": 2645
        },
        {
            "file_path": "app/Http/Controllers/Controller.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class Controller extends BaseController",
                    "Controller",
                    "BaseController"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests",
                "Illuminate\\Foundation\\Bus\\DispatchesJobs",
                "Illuminate\\Foundation\\Validation\\ValidatesRequests",
                "Illuminate\\Routing\\Controller as BaseController",
                "AuthorizesRequests, DispatchesJobs, ValidatesRequests"
            ],
            "line_count": 14,
            "size_bytes": 374
        },
        {
            "file_path": "app/Http/Controllers/CustomerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerController extends AbstractBaseCrudController",
                    "CustomerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importCustomers",
                "export",
                "resendOnBoardingWA"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Services\\CustomerServiceInterface",
                "App\\Exports\\CustomersExport",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 208,
            "size_bytes": 6610
        },
        {
            "file_path": "app/Http/Controllers/CustomerInsuranceController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerInsuranceController extends AbstractBaseCrudController",
                    "CustomerInsuranceController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "sendWADocument",
                "sendRenewalReminderWA",
                "update",
                "delete",
                "importCustomerInsurances",
                "export",
                "renew",
                "storeRenew"
            ],
            "method_count": 14,
            "uses": [
                "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "WhatsAppApiTrait"
            ],
            "line_count": 275,
            "size_bytes": 10385
        },
        {
            "file_path": "app/Http/Controllers/FamilyGroupController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class FamilyGroupController extends AbstractBaseCrudController",
                    "FamilyGroupController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy",
                "updateStatus",
                "export",
                "removeMember"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Models\\FamilyGroup",
                "App\\Models\\FamilyMember",
                "App\\Models\\Customer",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\Support\\Facades\\DB",
                "($familyGroups) {\r\n                $file = fopen('php://output', 'w')"
            ],
            "line_count": 308,
            "size_bytes": 11313
        },
        {
            "file_path": "app/Http/Controllers/FuelTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class FuelTypeController extends AbstractBaseCrudController",
                    "FuelTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importFuelTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Exports\\FuelTypesExport",
                "App\\Models\\FuelType",
                "App\\Services\\FuelTypeService",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 175,
            "size_bytes": 5160
        },
        {
            "file_path": "app/Http/Controllers/HealthController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class HealthController extends Controller",
                    "HealthController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "health",
                "detailed",
                "metrics",
                "liveness",
                "readiness",
                "performance",
                "resources",
                "logs",
                "getSystemUptime"
            ],
            "method_count": 10,
            "uses": [
                "App\\Services\\HealthCheckService",
                "App\\Services\\LoggingService",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 216,
            "size_bytes": 6814
        },
        {
            "file_path": "app/Http/Controllers/HomeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class HomeController extends AbstractBaseCrudController",
                    "HomeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "prepareDashboardData",
                "getCustomerStatistics",
                "getFinancialStatistics",
                "getMonthlyFinancialData",
                "getRenewalStatistics",
                "getExpiringInsurancesCount",
                "getFinancialYearChartData",
                "getFinancialYearDates",
                "groupDataByMonth",
                "getCompressionData",
                "getSumColumns",
                "getFinancialDataForPeriod",
                "getFinancialDataForDate",
                "getQuarterlyData",
                "getQuarterDates",
                "getProfile",
                "updateProfile",
                "updateUserProfile",
                "changePassword",
                "updateUserPassword"
            ],
            "method_count": 22,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Models\\User",
                "App\\Rules\\MatchOldPassword",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Carbon",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Hash"
            ],
            "line_count": 436,
            "size_bytes": 14770
        },
        {
            "file_path": "app/Http/Controllers/InsuranceCompanyController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class InsuranceCompanyController extends AbstractBaseCrudController",
                    "InsuranceCompanyController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importInsuranceCompanys",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                "App\\Models\\InsuranceCompany",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 161,
            "size_bytes": 5242
        },
        {
            "file_path": "app/Http/Controllers/MarketingWhatsAppController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class MarketingWhatsAppController extends AbstractBaseCrudController",
                    "MarketingWhatsAppController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "send",
                "preview"
            ],
            "method_count": 4,
            "uses": [
                "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 103,
            "size_bytes": 3876
        },
        {
            "file_path": "app/Http/Controllers/PermissionsController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PermissionsController extends AbstractBaseCrudController",
                    "PermissionsController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB"
            ],
            "line_count": 182,
            "size_bytes": 5643
        },
        {
            "file_path": "app/Http/Controllers/PolicyTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PolicyTypeController extends AbstractBaseCrudController",
                    "PolicyTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importPolicyTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\PolicyType",
                "App\\Services\\PolicyTypeService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\PolicyTypesExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 177,
            "size_bytes": 5318
        },
        {
            "file_path": "app/Http/Controllers/PremiumTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PremiumTypeController extends AbstractBaseCrudController",
                    "PremiumTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importPremiumTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\PremiumType",
                "App\\Services\\PremiumTypeService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\PremiumTypesExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 186,
            "size_bytes": 5908
        },
        {
            "file_path": "app/Http/Controllers/QuotationController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class QuotationController extends AbstractBaseCrudController",
                    "QuotationController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "generateQuotes",
                "sendToWhatsApp",
                "downloadPdf",
                "getQuoteFormHtml",
                "delete"
            ],
            "method_count": 12,
            "uses": [
                "App\\Contracts\\Services\\QuotationServiceInterface",
                "App\\Http\\Requests\\CreateQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\View\\View"
            ],
            "line_count": 162,
            "size_bytes": 6022
        },
        {
            "file_path": "app/Http/Controllers/ReferenceUsersController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ReferenceUsersController extends AbstractBaseCrudController",
                    "ReferenceUsersController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importReferenceUsers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "Illuminate\\Http\\Request",
                "App\\Models\\ReferenceUser",
                "App\\Services\\ReferenceUserService",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\ReferenceUsersExport",
                "Illuminate\\Support\\Facades\\Validator",
                "Throwable"
            ],
            "line_count": 184,
            "size_bytes": 5636
        },
        {
            "file_path": "app/Http/Controllers/RelationshipManagerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class RelationshipManagerController extends AbstractBaseCrudController",
                    "RelationshipManagerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importRelationshipManagers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\RelationshipManager",
                "App\\Services\\RelationshipManagerService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\RelationshipManagersExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 178,
            "size_bytes": 6156
        },
        {
            "file_path": "app/Http/Controllers/ReportController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ReportController extends AbstractBaseCrudController",
                    "ReportController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "export",
                "saveColumns",
                "loadColumns"
            ],
            "method_count": 5,
            "uses": [
                "App\\Contracts\\Services\\ReportServiceInterface",
                "App\\Models\\Report",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 100,
            "size_bytes": 4002
        },
        {
            "file_path": "app/Http/Controllers/RolesController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class RolesController extends AbstractBaseCrudController",
                    "RolesController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB"
            ],
            "line_count": 204,
            "size_bytes": 6080
        },
        {
            "file_path": "app/Http/Controllers/UserController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class UserController extends AbstractBaseCrudController",
                    "UserController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importUsers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\User",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Contracts\\Services\\UserServiceInterface"
            ],
            "line_count": 217,
            "size_bytes": 6702
        },
        {
            "file_path": "app/Http/Kernel.php",
            "namespace": "App\\Http",
            "file_type": "class",
            "classes": [
                [
                    "class Kernel extends HttpKernel",
                    "Kernel",
                    "HttpKernel"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Kernel as HttpKernel"
            ],
            "line_count": 77,
            "size_bytes": 3286
        },
        {
            "file_path": "app/Http/Middleware/Authenticate.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class Authenticate extends Middleware",
                    "Authenticate",
                    "Middleware"
                ]
            ],
            "methods": [
                "redirectTo"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Auth\\Middleware\\Authenticate as Middleware"
            ],
            "line_count": 27,
            "size_bytes": 665
        },
        {
            "file_path": "app/Http/Middleware/CustomerAuth.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerAuth",
                    "CustomerAuth"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 49,
            "size_bytes": 1746
        },
        {
            "file_path": "app/Http/Middleware/CustomerSessionTimeout.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerSessionTimeout",
                    "CustomerSessionTimeout"
                ]
            ],
            "methods": [
                "handle",
                "shouldSkipTimeoutCheck"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerAuditLog",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 190,
            "size_bytes": 7671
        },
        {
            "file_path": "app/Http/Middleware/EncryptCookies.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class EncryptCookies extends Middleware",
                    "EncryptCookies",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Cookie\\Middleware\\EncryptCookies as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 324
        },
        {
            "file_path": "app/Http/Middleware/PreventRequestsDuringMaintenance.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class PreventRequestsDuringMaintenance extends Middleware",
                    "PreventRequestsDuringMaintenance",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 383
        },
        {
            "file_path": "app/Http/Middleware/RedirectIfAuthenticated.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class RedirectIfAuthenticated",
                    "RedirectIfAuthenticated"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Providers\\RouteServiceProvider",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth"
            ],
            "line_count": 38,
            "size_bytes": 1149
        },
        {
            "file_path": "app/Http/Middleware/SecureSession.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class SecureSession",
                    "SecureSession"
                ]
            ],
            "methods": [
                "handle",
                "enforceSecureSession",
                "checkSessionTimeout",
                "validateSessionIntegrity",
                "setSecureHeaders",
                "updateLastActivity"
            ],
            "method_count": 6,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 153,
            "size_bytes": 5408
        },
        {
            "file_path": "app/Http/Middleware/SecurityHeadersMiddleware.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class SecurityHeadersMiddleware",
                    "SecurityHeadersMiddleware"
                ]
            ],
            "methods": [
                "__construct",
                "handle",
                "shouldSkipSecurityHeaders"
            ],
            "method_count": 3,
            "uses": [
                "App\\Services\\ContentSecurityPolicyService",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\View",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 77,
            "size_bytes": 2358
        },
        {
            "file_path": "app/Http/Middleware/TrimStrings.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrimStrings extends Middleware",
                    "TrimStrings",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings as Middleware"
            ],
            "line_count": 20,
            "size_bytes": 400
        },
        {
            "file_path": "app/Http/Middleware/TrustHosts.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrustHosts extends Middleware",
                    "TrustHosts",
                    "Middleware"
                ]
            ],
            "methods": [
                "hosts"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Middleware\\TrustHosts as Middleware"
            ],
            "line_count": 21,
            "size_bytes": 392
        },
        {
            "file_path": "app/Http/Middleware/TrustProxies.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrustProxies extends Middleware",
                    "TrustProxies",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Http\\Middleware\\TrustProxies as Middleware",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 29,
            "size_bytes": 677
        },
        {
            "file_path": "app/Http/Middleware/VerifyCsrfToken.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class VerifyCsrfToken extends Middleware",
                    "VerifyCsrfToken",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 337
        },
        {
            "file_path": "app/Http/Middleware/VerifyFamilyAccess.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class VerifyFamilyAccess",
                    "VerifyFamilyAccess"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 84,
            "size_bytes": 3478
        },
        {
            "file_path": "app/Http/Requests/CreateQuotationRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class CreateQuotationRequest extends FormRequest",
                    "CreateQuotationRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 113,
            "size_bytes": 6331
        },
        {
            "file_path": "app/Http/Requests/StoreBrokerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreBrokerRequest extends FormRequest",
                    "StoreBrokerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 44,
            "size_bytes": 1309
        },
        {
            "file_path": "app/Http/Requests/StoreClaimRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreClaimRequest extends FormRequest",
                    "StoreClaimRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages",
                "attributes"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 94,
            "size_bytes": 3274
        },
        {
            "file_path": "app/Http/Requests/StoreCustomerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreCustomerRequest extends FormRequest",
                    "StoreCustomerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 96,
            "size_bytes": 3845
        },
        {
            "file_path": "app/Http/Requests/UpdateBrokerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateBrokerRequest extends FormRequest",
                    "UpdateBrokerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 44,
            "size_bytes": 1310
        },
        {
            "file_path": "app/Http/Requests/UpdateClaimRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateClaimRequest extends FormRequest",
                    "UpdateClaimRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages",
                "attributes"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 94,
            "size_bytes": 3275
        },
        {
            "file_path": "app/Http/Requests/UpdateCustomerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateCustomerRequest extends FormRequest",
                    "UpdateCustomerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 98,
            "size_bytes": 3925
        },
        {
            "file_path": "app/Http/Requests/UpdateQuotationRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateQuotationRequest extends FormRequest",
                    "UpdateQuotationRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 130,
            "size_bytes": 7282
        },
        {
            "file_path": "app/Http/Resources/BrokerResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class BrokerResource extends JsonResource",
                    "BrokerResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 44,
            "size_bytes": 1897
        },
        {
            "file_path": "app/Http/Resources/CustomerInsuranceResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsuranceResource extends JsonResource",
                    "CustomerInsuranceResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 101,
            "size_bytes": 4705
        },
        {
            "file_path": "app/Http/Resources/CustomerResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerResource extends JsonResource",
                    "CustomerResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 29,
            "size_bytes": 1087
        },
        {
            "file_path": "app/Http/Resources/InsuranceCompanyResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class InsuranceCompanyResource extends JsonResource",
                    "InsuranceCompanyResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 39,
            "size_bytes": 1488
        },
        {
            "file_path": "app/Http/Resources/QuotationCompanyResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationCompanyResource extends JsonResource",
                    "QuotationCompanyResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 43,
            "size_bytes": 1870
        },
        {
            "file_path": "app/Http/Resources/QuotationResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationResource extends JsonResource",
                    "QuotationResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 66,
            "size_bytes": 2625
        },
        {
            "file_path": "app/Listeners/Customer/CreateCustomerAuditLog.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CreateCustomerAuditLog implements ShouldQueue\r\n",
                    "CreateCustomerAuditLog",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "prepareAuditData",
                "failed"
            ],
            "method_count": 3,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Customer\\CustomerProfileUpdated",
                "App\\Events\\Customer\\CustomerEmailVerified",
                "App\\Events\\Quotation\\QuotationRequested",
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 115,
            "size_bytes": 4587
        },
        {
            "file_path": "app/Listeners/Customer/NotifyAdminOfRegistration.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class NotifyAdminOfRegistration implements ShouldQueue\r\n",
                    "NotifyAdminOfRegistration",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Communication\\EmailQueued",
                "App\\Models\\User",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 55,
            "size_bytes": 1980
        },
        {
            "file_path": "app/Listeners/Customer/SendWelcomeEmail.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class SendWelcomeEmail implements ShouldQueue\r\n",
                    "SendWelcomeEmail",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Communication\\EmailQueued",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 50,
            "size_bytes": 1655
        },
        {
            "file_path": "app/Listeners/Insurance/SendPolicyRenewalReminder.php",
            "namespace": "App\\Listeners\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class SendPolicyRenewalReminder implements ShouldQueue\r\n",
                    "SendPolicyRenewalReminder",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "sendEmailReminder",
                "sendWhatsAppReminder",
                "getEmailSubject",
                "getEmailMessage",
                "getWhatsAppMessage",
                "failed"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Support\\Facades\\Mail",
                "App\\Events\\Insurance\\PolicyExpiringWarning",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue",
                "($customer, $subject) {\r\n                $mail->to($customer->email)\r\n                     ->subject($subject)"
            ],
            "line_count": 116,
            "size_bytes": 4460
        },
        {
            "file_path": "app/Listeners/Quotation/GenerateQuotationPDF.php",
            "namespace": "App\\Listeners\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class GenerateQuotationPDF implements ShouldQueue\r\n",
                    "GenerateQuotationPDF",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Document\\PDFGenerationRequested",
                "App\\Events\\Quotation\\QuotationGenerated",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 55,
            "size_bytes": 1855
        },
        {
            "file_path": "app/Listeners/Quotation/SendQuotationWhatsApp.php",
            "namespace": "App\\Listeners\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class SendQuotationWhatsApp implements ShouldQueue\r\n",
                    "SendQuotationWhatsApp",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "prepareWhatsAppMessage",
                "failed"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Support\\Facades\\Mail",
                "App\\Events\\Quotation\\QuotationGenerated",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 61,
            "size_bytes": 2291
        },
        {
            "file_path": "app/Listeners/SendPolicyReminderNotification.php",
            "namespace": "App\\Listeners",
            "file_type": "class",
            "classes": [
                [
                    "class SendPolicyReminderNotification implements ShouldQueue\r\n",
                    "SendPolicyReminderNotification",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Events\\PolicyExpiring",
                "App\\Mail\\PolicyExpiryReminderMail",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Support\\Facades\\Mail",
                "WhatsAppApiTrait"
            ],
            "line_count": 31,
            "size_bytes": 1009
        },
        {
            "file_path": "app/Listeners/SendWelcomeEmail.php",
            "namespace": "App\\Listeners",
            "file_type": "class",
            "classes": [
                [
                    "class SendWelcomeEmail implements ShouldQueue\r\n",
                    "SendWelcomeEmail",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Events\\CustomerCreated",
                "App\\Mail\\CustomerWelcomeMail",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Support\\Facades\\Mail"
            ],
            "line_count": 18,
            "size_bytes": 461
        },
        {
            "file_path": "app/Logging/BusinessLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class BusinessLogFormatter extends JsonFormatter",
                    "BusinessLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 46,
            "size_bytes": 1783
        },
        {
            "file_path": "app/Logging/ErrorLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class ErrorLogFormatter extends JsonFormatter",
                    "ErrorLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 50,
            "size_bytes": 1779
        },
        {
            "file_path": "app/Logging/PerformanceLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class PerformanceLogFormatter extends JsonFormatter",
                    "PerformanceLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 40,
            "size_bytes": 1228
        },
        {
            "file_path": "app/Logging/SecurityLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class SecurityLogFormatter extends JsonFormatter",
                    "SecurityLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 45,
            "size_bytes": 1663
        },
        {
            "file_path": "app/Logging/StructuredLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class StructuredLogFormatter",
                    "StructuredLogFormatter"
                ]
            ],
            "methods": [
                "__invoke"
            ],
            "method_count": 1,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger"
            ],
            "line_count": 19,
            "size_bytes": 424
        },
        {
            "file_path": "app/Mail/ClaimNotificationMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class ClaimNotificationMail extends Mailable implements ShouldQueue\n",
                    "ClaimNotificationMail",
                    "Mailable",
                    "ShouldQueue\n"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments",
                "getSubject"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 91,
            "size_bytes": 2516
        },
        {
            "file_path": "app/Mail/CustomerEmailVerificationMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerEmailVerificationMail extends Mailable",
                    "CustomerEmailVerificationMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 68,
            "size_bytes": 1629
        },
        {
            "file_path": "app/Mail/CustomerPasswordResetMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerPasswordResetMail extends Mailable",
                    "CustomerPasswordResetMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 68,
            "size_bytes": 1658
        },
        {
            "file_path": "app/Mail/FamilyLoginCredentialsMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class FamilyLoginCredentialsMail extends Mailable",
                    "FamilyLoginCredentialsMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\FamilyGroup",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 78,
            "size_bytes": 2066
        },
        {
            "file_path": "app/Models/AddonCover.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class AddonCover extends Authenticatable",
                    "AddonCover",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "booted",
                "handleSmartOrdering",
                "getNextAvailableOrder",
                "getOrdered",
                "getActivitylogOptions"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 133,
            "size_bytes": 4415
        },
        {
            "file_path": "app/Models/Branch.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Branch extends Authenticatable",
                    "Branch",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 3985
        },
        {
            "file_path": "app/Models/Broker.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Broker extends Authenticatable",
                    "Broker",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 85,
            "size_bytes": 3992
        },
        {
            "file_path": "app/Models/Claim.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Claim extends Model",
                    "Claim",
                    "Model"
                ]
            ],
            "methods": [
                "customer",
                "customerInsurance",
                "stages",
                "currentStage",
                "documents",
                "liabilityDetail",
                "generateClaimNumber",
                "createDefaultDocuments",
                "createInitialStage",
                "getActivitylogOptions",
                "isActive",
                "getIncidentDateFormattedAttribute",
                "setIncidentDateAttribute",
                "getDocumentCompletionPercentage",
                "getRequiredDocumentCompletionPercentage",
                "getWhatsAppNumber",
                "getHealthInsuranceDocumentListMessage",
                "getVehicleInsuranceDocumentListMessage",
                "getPendingDocumentsMessage",
                "getClaimNumberNotificationMessage",
                "sendDocumentListWhatsApp",
                "sendPendingDocumentsWhatsApp",
                "sendClaimNumberWhatsApp",
                "sendStageUpdateWhatsApp",
                "sendEmailNotification",
                "sendClaimCreatedNotification",
                "sendStageUpdateNotification",
                "sendClaimNumberAssignedNotification",
                "sendDocumentRequestNotification",
                "sendClaimClosureNotification"
            ],
            "method_count": 30,
            "uses": [
                "App\\Mail\\ClaimNotificationMail",
                "App\\Traits\\TableRecordObserver",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Illuminate\\Database\\Eloquent\\Relations\\HasOne",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Support\\Facades\\Mail",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity, WhatsAppApiTrait"
            ],
            "line_count": 609,
            "size_bytes": 20948
        },
        {
            "file_path": "app/Models/ClaimDocument.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimDocument extends Model",
                    "ClaimDocument",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "markAsSubmitted",
                "markAsNotSubmitted",
                "getActivitylogOptions",
                "getSubmittedDateFormattedAttribute",
                "getStatusBadgeClass",
                "getStatusText",
                "hasFile",
                "getDocumentUrl"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 149,
            "size_bytes": 3937
        },
        {
            "file_path": "app/Models/ClaimLiabilityDetail.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimLiabilityDetail extends Model",
                    "ClaimLiabilityDetail",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "isCashless",
                "isReimbursement",
                "getFacilityName",
                "getFacilityAddress",
                "getFormattedEstimatedAmount",
                "getFormattedApprovedAmount",
                "getFormattedFinalAmount",
                "getActivitylogOptions"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 144,
            "size_bytes": 3944
        },
        {
            "file_path": "app/Models/ClaimStage.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimStage extends Model",
                    "ClaimStage",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "setAsCurrent",
                "getActivitylogOptions",
                "getStageDateFormattedAttribute",
                "setStageDateAttribute"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 107,
            "size_bytes": 2956
        },
        {
            "file_path": "app/Models/CommissionType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CommissionType extends Model",
                    "CommissionType",
                    "Model"
                ]
            ],
            "methods": [
                "customerInsurances",
                "scopeActive",
                "scopeOrdered"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes",
                "this commission type\r\n     */\r\n    public function customerInsurances()\r\n    {\r\n        return $this->hasMany(CustomerInsurance::class, 'commission_type_id')"
            ],
            "line_count": 53,
            "size_bytes": 1152
        },
        {
            "file_path": "app/Models/Customer.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Customer extends Authenticatable",
                    "Customer",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "boot",
                "insurance",
                "quotations",
                "claims",
                "familyGroup",
                "customerType",
                "familyMember",
                "familyMembers",
                "familyInsurance",
                "hasFamily",
                "isFamilyHead",
                "getViewableInsurance",
                "isInSameFamilyAs",
                "getPrivacySafeData",
                "maskEmail",
                "maskMobile",
                "canViewSensitiveDataOf",
                "auditLogs",
                "getActivitylogOptions",
                "isActive",
                "isRetailCustomer",
                "isCorporateCustomer",
                "panCardPath",
                "aadharCardPath",
                "gstPath",
                "generateDefaultPassword",
                "setDefaultPassword",
                "setCustomPassword",
                "changePassword",
                "needsPasswordChange",
                "hasVerifiedEmail",
                "generateEmailVerificationToken",
                "verifyEmail",
                "generatePasswordResetToken",
                "verifyPasswordResetToken",
                "clearPasswordResetToken",
                "getMaskedPanNumber",
                "validateFamilyGroupId",
                "getDateOfBirthFormattedAttribute",
                "setDateOfBirthAttribute",
                "getWeddingAnniversaryDateFormattedAttribute",
                "setWeddingAnniversaryDateAttribute",
                "getEngagementAnniversaryDateFormattedAttribute",
                "setEngagementAnniversaryDateAttribute"
            ],
            "method_count": 44,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Models\\Quotation",
                "App\\Models\\Claim",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Database\\Eloquent\\Casts\\Attribute",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasOne",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Str",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, LogsActivity",
                "($familyGroupId) {\r\n                $query->where('family_group_id', '=', $familyGroupId)",
                "($familyGroupId) {\r\n                $query->where('family_group_id', '=', $familyGroupId)"
            ],
            "line_count": 686,
            "size_bytes": 23383
        },
        {
            "file_path": "app/Models/CustomerAuditLog.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerAuditLog extends Model",
                    "CustomerAuditLog",
                    "Model"
                ]
            ],
            "methods": [
                "customer",
                "logAction",
                "logPolicyAction",
                "logFailure"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "HasFactory"
            ],
            "line_count": 104,
            "size_bytes": 3058
        },
        {
            "file_path": "app/Models/CustomerInsurance.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerInsurance extends Model",
                    "CustomerInsurance",
                    "Model"
                ]
            ],
            "methods": [
                "branch",
                "broker",
                "relationshipManager",
                "customer",
                "insuranceCompany",
                "premiumType",
                "policyType",
                "fuelType",
                "commissionType",
                "claims",
                "getActivitylogOptions",
                "getIssueDateFormattedAttribute",
                "setIssueDateAttribute",
                "getStartDateFormattedAttribute",
                "setStartDateAttribute",
                "getExpiredDateFormattedAttribute",
                "setExpiredDateAttribute",
                "getTpExpiryDateFormattedAttribute",
                "setTpExpiryDateAttribute",
                "getMaturityDateFormattedAttribute",
                "setMaturityDateAttribute"
            ],
            "method_count": 21,
            "uses": [
                "App\\Models\\Branch",
                "App\\Models\\Broker",
                "App\\Models\\Customer",
                "App\\Models\\Claim",
                "App\\Models\\FuelType",
                "App\\Models\\PolicyType",
                "App\\Models\\PremiumType",
                "App\\Models\\InsuranceCompany",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Models\\RelationshipManager",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "HasFactory, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 319,
            "size_bytes": 14917
        },
        {
            "file_path": "app/Models/CustomerType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerType extends Model",
                    "CustomerType",
                    "Model"
                ]
            ],
            "methods": [
                "customers",
                "scopeActive",
                "scopeOrdered"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes"
            ],
            "line_count": 53,
            "size_bytes": 1111
        },
        {
            "file_path": "app/Models/FamilyGroup.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FamilyGroup extends Model",
                    "FamilyGroup",
                    "Model"
                ]
            ],
            "methods": [
                "familyHead",
                "familyMembers",
                "members",
                "customers",
                "isActive",
                "getActivitylogOptions"
            ],
            "method_count": 6,
            "uses": [
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "HasFactory, LogsActivity"
            ],
            "line_count": 76,
            "size_bytes": 1727
        },
        {
            "file_path": "app/Models/FamilyMember.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FamilyMember extends Model",
                    "FamilyMember",
                    "Model"
                ]
            ],
            "methods": [
                "familyGroup",
                "customer",
                "isFamilyHead",
                "isActive",
                "getActivitylogOptions"
            ],
            "method_count": 5,
            "uses": [
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "HasFactory, LogsActivity"
            ],
            "line_count": 70,
            "size_bytes": 1565
        },
        {
            "file_path": "app/Models/FuelType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FuelType extends Authenticatable",
                    "FuelType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 78,
            "size_bytes": 3740
        },
        {
            "file_path": "app/Models/InsuranceCompany.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class InsuranceCompany extends Authenticatable",
                    "InsuranceCompany",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 90,
            "size_bytes": 4436
        },
        {
            "file_path": "app/Models/PolicyType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class PolicyType extends Authenticatable",
                    "PolicyType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 79,
            "size_bytes": 3783
        },
        {
            "file_path": "app/Models/PremiumType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class PremiumType extends Authenticatable",
                    "PremiumType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 4146
        },
        {
            "file_path": "app/Models/Quotation.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Quotation extends Model",
                    "Quotation",
                    "Model"
                ]
            ],
            "methods": [
                "boot",
                "customer",
                "quotationCompanies",
                "quotationStatus",
                "recommendedQuote",
                "bestQuote",
                "getActivitylogOptions",
                "isVehicleInsurance",
                "getQuoteReference"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "HasFactory, TableRecordObserver, LogsActivity"
            ],
            "line_count": 116,
            "size_bytes": 3432
        },
        {
            "file_path": "app/Models/QuotationCompany.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class QuotationCompany extends Model",
                    "QuotationCompany",
                    "Model"
                ]
            ],
            "methods": [
                "quotation",
                "insuranceCompany",
                "getActivitylogOptions",
                "calculateSavings",
                "getFormattedPremium"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "HasFactory, TableRecordObserver, LogsActivity"
            ],
            "line_count": 102,
            "size_bytes": 2935
        },
        {
            "file_path": "app/Models/QuotationStatus.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class QuotationStatus extends Model",
                    "QuotationStatus",
                    "Model"
                ]
            ],
            "methods": [
                "quotations",
                "scopeActive",
                "scopeFinal",
                "scopeNonFinal",
                "scopeOrdered",
                "getColorAttribute"
            ],
            "method_count": 6,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes"
            ],
            "line_count": 80,
            "size_bytes": 1743
        },
        {
            "file_path": "app/Models/ReferenceUser.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ReferenceUser extends Authenticatable",
                    "ReferenceUser",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 4149
        },
        {
            "file_path": "app/Models/RelationshipManager.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class RelationshipManager extends Authenticatable",
                    "RelationshipManager",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 90,
            "size_bytes": 4502
        },
        {
            "file_path": "app/Models/Report.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Report extends Authenticatable",
                    "Report",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "getActivitylogOptions",
                "user",
                "getInsuranceReport"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "Illuminate\\Support\\Carbon",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasRoles, SoftDeletes, TableRecordObserver, LogsActivity",
                "($filters) {\r\n                $startDate = \\App\\Helpers\\DateHelper::isValidDatabaseFormat($filters['record_creation_start_date']) \r\n                    ? $filters['record_creation_start_date'] \r\n                    : formatDateForDatabase($filters['record_creation_start_date'])",
                "($filters) {\r\n                $endDate = \\App\\Helpers\\DateHelper::isValidDatabaseFormat($filters['record_creation_end_date']) \r\n                    ? $filters['record_creation_end_date'] \r\n                    : formatDateForDatabase($filters['record_creation_end_date'])",
                "($filters) {\r\n                try {\r\n                    $startDate = Carbon::createFromFormat('d/m/Y', $filters['issue_start_date'])->format('Y-m-d')",
                "($filters) {\r\n                try {\r\n                    $endDate = Carbon::createFromFormat('d/m/Y', $filters['issue_end_date'])->format('Y-m-d')",
                "($filters) {\r\n                return $query->whereHas('broker', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['broker_id'])",
                "($filters) {\r\n                return $query->whereHas('relationshipManager', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['relationship_manager_id'])",
                "($filters) {\r\n                return $query->whereHas('insuranceCompany', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['insurance_company_id'])",
                "($filters) {\r\n                return $query->whereHas('policyType', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['policy_type_id'])",
                "($filters) {\r\n                return $query->whereHas('fuelType', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['fuel_type_id'])",
                "($filters) {\r\n                return $query->whereHas('premiumType', function ($query) use ($filters) {\r\n                    if (is_array($filters['premium_type_id'])) {\r\n                        $query->whereIn('id', $filters['premium_type_id'])",
                "($filters) {\r\n                return $query->whereHas('customer', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['customer_id'])",
                "($filters) {\r\n                // Due dates can be in m/Y or mm/Y format, handle both\r\n                try {\r\n                    $dateStr = $filters['due_start_date']",
                "($filters) {\r\n                // Due dates can be in m/Y or mm/Y format, handle both\r\n                try {\r\n                    $dateStr = $filters['due_end_date']",
                "($filters) {\r\n                if ($filters['status'] === 'active') {\r\n                    return $query->where('status', 1)",
                "($filters) {\r\n                return $query->where('final_premium_with_gst', '>=', $filters['premium_amount_min'])",
                "($filters) {\r\n                return $query->where('final_premium_with_gst', '<=', $filters['premium_amount_max'])"
            ],
            "line_count": 225,
            "size_bytes": 11216
        },
        {
            "file_path": "app/Models/User.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class User extends Authenticatable",
                    "User",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "getFullNameAttribute",
                "getActivitylogOptions",
                "reports"
            ],
            "method_count": 3,
            "uses": [
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 137,
            "size_bytes": 5577
        },
        {
            "file_path": "app/Modules/Customer/Contracts/CustomerServiceInterface.php",
            "namespace": "App\\Modules\\Customer\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerServiceInterface",
                    "CustomerServiceInterface"
                ]
            ],
            "methods": [
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "getActiveCustomersForSelection",
                "getCustomersByFamily",
                "getCustomersByType",
                "searchCustomers",
                "getCustomerStatistics",
                "customerExists",
                "findByEmail",
                "findByMobileNumber",
                "sendOnboardingMessage"
            ],
            "method_count": 14,
            "uses": [
                "App\\Models\\Customer",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 41,
            "size_bytes": 1407
        },
        {
            "file_path": "app/Modules/Customer/Http/Controllers/Api/CustomerApiController.php",
            "namespace": "App\\Modules\\Customer\\Http\\Controllers\\Api",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerApiController extends Controller",
                    "CustomerApiController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "store",
                "show",
                "update",
                "destroy",
                "updateStatus",
                "search",
                "getByType",
                "getByFamily",
                "getStatistics",
                "sendOnboardingMessage",
                "getActiveForSelection"
            ],
            "method_count": 13,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Response"
            ],
            "line_count": 350,
            "size_bytes": 12761
        },
        {
            "file_path": "app/Modules/Customer/Services/CustomerService.php",
            "namespace": "App\\Modules\\Customer\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class CustomerService implements CustomerServiceInterface\r\n",
                    "CustomerService",
                    "",
                    "CustomerServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "getActiveCustomersForSelection",
                "getCustomersByFamily",
                "getCustomersByType",
                "searchCustomers",
                "getCustomerStatistics",
                "customerExists",
                "findByEmail",
                "findByMobileNumber",
                "sendOnboardingMessage",
                "handleCustomerDocuments",
                "generateOnboardingMessage"
            ],
            "method_count": 17,
            "uses": [
                "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Customer\\CustomerProfileUpdated",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "App\\Services\\FileUploadService",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Validator",
                "WhatsAppApiTrait"
            ],
            "line_count": 300,
            "size_bytes": 10035
        },
        {
            "file_path": "app/Modules/ModuleServiceProvider.php",
            "namespace": "App\\Modules",
            "file_type": "service",
            "classes": [
                [
                    "class ModuleServiceProvider extends ServiceProvider",
                    "ModuleServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "register",
                "boot",
                "registerModuleServices",
                "registerModuleRepositories",
                "registerModuleEvents",
                "loadModuleRoutes",
                "loadModuleMigrations",
                "registerModuleEventListeners",
                "registerCustomerModuleEvents",
                "registerQuotationModuleEvents",
                "registerNotificationModuleEvents"
            ],
            "method_count": 11,
            "uses": [
                "Illuminate\\Support\\ServiceProvider",
                "Illuminate\\Support\\Facades\\Route",
                "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                "App\\Modules\\Customer\\Services\\CustomerService",
                "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                "App\\Modules\\Quotation\\Services\\QuotationService",
                "App\\Modules\\Notification\\Contracts\\NotificationServiceInterface",
                "App\\Modules\\Notification\\Services\\NotificationService",
                "App\\Modules\\Policy\\Contracts\\PolicyServiceInterface",
                "App\\Modules\\Policy\\Services\\PolicyService",
                "the existing global repositories\r\n    }\r\n\r\n    /**\r\n     * Register module event system\r\n     */\r\n    private function registerModuleEvents(): void\r\n    {\r\n        // Cross-module event handlers will be registered here\r\n        $this->registerCustomerModuleEvents()"
            ],
            "line_count": 184,
            "size_bytes": 6094
        },
        {
            "file_path": "app/Modules/Policy/Contracts/PolicyServiceInterface.php",
            "namespace": "App\\Modules\\Policy\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyServiceInterface",
                    "PolicyServiceInterface"
                ]
            ],
            "methods": [
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "renewPolicy",
                "cancelPolicy",
                "getPolicyById",
                "getActivePolicies",
                "getExpiringPolicies",
                "calculatePremium",
                "calculateCommission",
                "getPolicyStatistics",
                "searchPolicies",
                "getCustomerPolicies"
            ],
            "method_count": 13,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 37,
            "size_bytes": 1237
        },
        {
            "file_path": "app/Modules/Policy/Services/PolicyService.php",
            "namespace": "App\\Modules\\Policy\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PolicyService implements PolicyServiceInterface\r\n",
                    "PolicyService",
                    "",
                    "PolicyServiceInterface\r\n"
                ]
            ],
            "methods": [
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "renewPolicy",
                "cancelPolicy",
                "getPolicyById",
                "getActivePolicies",
                "getExpiringPolicies",
                "calculatePremium",
                "calculateCommission",
                "getPolicyStatistics",
                "searchPolicies",
                "getCustomerPolicies",
                "generatePolicyNumber",
                "generateRenewalPolicyNumber"
            ],
            "method_count": 15,
            "uses": [
                "App\\Modules\\Policy\\Contracts\\PolicyServiceInterface",
                "App\\Models\\CustomerInsurance",
                "App\\Events\\Insurance\\PolicyCreated",
                "App\\Events\\Insurance\\PolicyRenewed",
                "App\\Events\\Insurance\\PolicyExpiringWarning",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Log",
                "Carbon\\Carbon",
                "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('email', 'like', \"%{$search}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                "($query) {\r\n                $q->where('name', 'like', \"%{$query}%\")\r\n                  ->orWhere('email', 'like', \"%{$query}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$query}%\")"
            ],
            "line_count": 382,
            "size_bytes": 13886
        },
        {
            "file_path": "app/Modules/Quotation/Contracts/QuotationServiceInterface.php",
            "namespace": "App\\Modules\\Quotation\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationServiceInterface",
                    "QuotationServiceInterface"
                ]
            ],
            "methods": [
                "getQuotations",
                "createQuotation",
                "updateQuotation",
                "deleteQuotation",
                "generateCompanyQuotes",
                "getQuotationStatistics",
                "findById",
                "getActiveQuotations"
            ],
            "method_count": 8,
            "uses": [
                "App\\Models\\Quotation",
                "App\\Http\\Requests\\StoreQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 28,
            "size_bytes": 936
        },
        {
            "file_path": "app/Modules/Quotation/Http/Controllers/Api/QuotationApiController.php",
            "namespace": "App\\Modules\\Quotation\\Http\\Controllers\\Api",
            "file_type": "controller",
            "classes": [
                [
                    "class QuotationApiController extends Controller",
                    "QuotationApiController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "store",
                "show",
                "update",
                "destroy",
                "generateCompanyQuotes",
                "getCompanyQuotes",
                "updateCompanyQuotes",
                "generatePdf",
                "sendViaWhatsApp",
                "calculatePremium",
                "getStatistics",
                "getActiveQuotations",
                "getFormData"
            ],
            "method_count": 15,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                "App\\Http\\Requests\\StoreQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "App\\Models\\Customer",
                "App\\Models\\InsuranceCompany",
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Response"
            ],
            "line_count": 441,
            "size_bytes": 16968
        },
        {
            "file_path": "app/Modules/Quotation/Services/QuotationService.php",
            "namespace": "App\\Modules\\Quotation\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class QuotationService implements QuotationServiceInterface\r\n",
                    "QuotationService",
                    "",
                    "QuotationServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getQuotations",
                "createQuotation",
                "updateQuotation",
                "deleteQuotation",
                "generateCompanyQuotes",
                "getQuotationStatistics",
                "findById",
                "getActiveQuotations",
                "calculateTotalIdv",
                "generateCompanyQuote",
                "calculateBasePremium",
                "calculateAddonPremiums",
                "calculateAddonPremium",
                "setRecommendations",
                "createManualCompanyQuotes",
                "createManualCompanyQuote",
                "setRankings",
                "generateQuoteNumber",
                "getCompanyRatingFactor",
                "getBasicOdRate",
                "getAddonRates",
                "calculateRoadsideAssistance",
                "getCompanyBenefits",
                "getCompanyExclusions"
            ],
            "method_count": 25,
            "uses": [
                "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                "App\\Events\\Quotation\\QuotationRequested",
                "App\\Events\\Quotation\\QuotationGenerated",
                "App\\Models\\Customer",
                "App\\Models\\InsuranceCompany",
                "App\\Models\\Quotation",
                "App\\Models\\QuotationCompany",
                "App\\Models\\PolicyType",
                "App\\Services\\PdfGenerationService",
                "App\\Traits\\WhatsAppApiTrait",
                "App\\Http\\Requests\\StoreQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "WhatsAppApiTrait",
                "for commercial purposes.\""
            ],
            "line_count": 397,
            "size_bytes": 14531
        },
        {
            "file_path": "app/Policies/CustomerPolicy.php",
            "namespace": "App\\Policies",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerPolicy",
                    "CustomerPolicy"
                ]
            ],
            "methods": [
                "viewAny",
                "view",
                "viewPolicy",
                "downloadPolicy",
                "viewFamilyData",
                "viewAllFamilyPolicies",
                "changePassword",
                "create",
                "update",
                "delete",
                "restore",
                "forceDelete"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Models\\User",
                "Illuminate\\Auth\\Access\\Response"
            ],
            "line_count": 110,
            "size_bytes": 2811
        },
        {
            "file_path": "app/Providers/AppServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class AppServiceProvider extends ServiceProvider",
                    "AppServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "register",
                "boot"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\{Customer, CustomerInsurance, Broker, InsuranceCompany}",
                "App\\Observers\\CacheInvalidationObserver",
                "Illuminate\\Pagination\\Paginator",
                "Illuminate\\Support\\Facades\\{Schema, URL}",
                "Illuminate\\Support\\ServiceProvider"
            ],
            "line_count": 39,
            "size_bytes": 909
        },
        {
            "file_path": "app/Providers/AuthServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class AuthServiceProvider extends ServiceProvider",
                    "AuthServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "boot"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider",
                "Illuminate\\Support\\Facades\\Gate"
            ],
            "line_count": 30,
            "size_bytes": 584
        },
        {
            "file_path": "app/Providers/BroadcastServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class BroadcastServiceProvider extends ServiceProvider",
                    "BroadcastServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "boot"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Support\\Facades\\Broadcast",
                "Illuminate\\Support\\ServiceProvider"
            ],
            "line_count": 22,
            "size_bytes": 401
        },
        {
            "file_path": "app/Providers/EventServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class EventServiceProvider extends ServiceProvider",
                    "EventServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "boot"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Auth\\Events\\Registered",
                "Illuminate\\Auth\\Listeners\\SendEmailVerificationNotification",
                "Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider as ServiceProvider",
                "Illuminate\\Support\\Facades\\Event"
            ],
            "line_count": 90,
            "size_bytes": 2956
        },
        {
            "file_path": "app/Providers/HelpersServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class HelpersServiceProvider extends ServiceProvider",
                    "HelpersServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "register",
                "boot"
            ],
            "method_count": 2,
            "uses": [
                "Illuminate\\Support\\ServiceProvider"
            ],
            "line_count": 28,
            "size_bytes": 436
        },
        {
            "file_path": "app/Providers/RepositoryServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "repository",
            "classes": [
                [
                    "class RepositoryServiceProvider extends ServiceProvider",
                    "RepositoryServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "register",
                "boot"
            ],
            "method_count": 2,
            "uses": [
                "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                "App\\Contracts\\Repositories\\FuelTypeRepositoryInterface",
                "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                "App\\Contracts\\Repositories\\MarketingWhatsAppRepositoryInterface",
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                "App\\Contracts\\Repositories\\PolicyTypeRepositoryInterface",
                "App\\Contracts\\Repositories\\PremiumTypeRepositoryInterface",
                "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                "App\\Contracts\\Repositories\\ReferenceUserRepositoryInterface",
                "App\\Contracts\\Repositories\\RelationshipManagerRepositoryInterface",
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "App\\Contracts\\Repositories\\UserRepositoryInterface",
                "App\\Contracts\\Services\\AddonCoverServiceInterface",
                "App\\Contracts\\Services\\BrokerServiceInterface",
                "App\\Contracts\\Services\\ClaimServiceInterface",
                "App\\Contracts\\Services\\CustomerServiceInterface",
                "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                "App\\Contracts\\Services\\FuelTypeServiceInterface",
                "App\\Contracts\\Services\\BranchServiceInterface",
                "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                "App\\Contracts\\Services\\PermissionServiceInterface",
                "App\\Contracts\\Services\\PolicyServiceInterface",
                "App\\Contracts\\Services\\PolicyTypeServiceInterface",
                "App\\Contracts\\Services\\PremiumTypeServiceInterface",
                "App\\Contracts\\Services\\QuotationServiceInterface",
                "App\\Contracts\\Services\\ReferenceUserServiceInterface",
                "App\\Contracts\\Services\\RelationshipManagerServiceInterface",
                "App\\Contracts\\Services\\ReportServiceInterface",
                "App\\Contracts\\Services\\RoleServiceInterface",
                "App\\Contracts\\Services\\UserServiceInterface",
                "App\\Repositories\\AddonCoverRepository",
                "App\\Repositories\\BranchRepository",
                "App\\Repositories\\BrokerRepository",
                "App\\Repositories\\ClaimRepository",
                "App\\Repositories\\CustomerRepository",
                "App\\Repositories\\CustomerInsuranceRepository",
                "App\\Repositories\\FamilyGroupRepository",
                "App\\Repositories\\FuelTypeRepository",
                "App\\Repositories\\InsuranceCompanyRepository",
                "App\\Repositories\\MarketingWhatsAppRepository",
                "App\\Repositories\\PermissionRepository",
                "App\\Repositories\\PolicyRepository",
                "App\\Repositories\\PolicyTypeRepository",
                "App\\Repositories\\PremiumTypeRepository",
                "App\\Repositories\\QuotationRepository",
                "App\\Repositories\\ReferenceUserRepository",
                "App\\Repositories\\RelationshipManagerRepository",
                "App\\Repositories\\RoleRepository",
                "App\\Repositories\\UserRepository",
                "App\\Services\\AddonCoverService",
                "App\\Services\\BrokerService",
                "App\\Services\\ClaimService",
                "App\\Services\\CustomerService",
                "App\\Services\\CustomerInsuranceService",
                "App\\Services\\FamilyGroupService",
                "App\\Services\\BranchService",
                "App\\Services\\FuelTypeService",
                "App\\Services\\InsuranceCompanyService",
                "App\\Services\\MarketingWhatsAppService",
                "App\\Services\\PermissionService",
                "App\\Services\\PolicyService",
                "App\\Services\\PolicyTypeService",
                "App\\Services\\PremiumTypeService",
                "App\\Services\\QuotationService",
                "App\\Services\\ReferenceUserService",
                "App\\Services\\RelationshipManagerService",
                "App\\Services\\ReportService",
                "App\\Services\\RoleService",
                "App\\Services\\UserService",
                "Illuminate\\Support\\ServiceProvider"
            ],
            "line_count": 143,
            "size_bytes": 7832
        },
        {
            "file_path": "app/Providers/RouteServiceProvider.php",
            "namespace": "App\\Providers",
            "file_type": "service",
            "classes": [
                [
                    "class RouteServiceProvider extends ServiceProvider",
                    "RouteServiceProvider",
                    "ServiceProvider"
                ]
            ],
            "methods": [
                "boot",
                "configureRateLimiting"
            ],
            "method_count": 2,
            "uses": [
                "Illuminate\\Cache\\RateLimiting\\Limit",
                "Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider as ServiceProvider",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\RateLimiter",
                "Illuminate\\Support\\Facades\\Route"
            ],
            "line_count": 70,
            "size_bytes": 2013
        },
        {
            "file_path": "app/Repositories/AbstractBaseRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "abstract class AbstractBaseRepository implements BaseRepositoryInterface\r\n",
                    "AbstractBaseRepository",
                    "",
                    "BaseRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getPaginated",
                "create",
                "update",
                "delete",
                "findById",
                "updateStatus",
                "getActive",
                "getAllForExport"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\BaseRepositoryInterface",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "($search) {\r\n                foreach ($this->searchableFields as $field) {\r\n                    $q->orWhere($field, 'LIKE', '%' . $search . '%')"
            ],
            "line_count": 135,
            "size_bytes": 3181
        },
        {
            "file_path": "app/Repositories/AddonCoverRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class AddonCoverRepository extends AbstractBaseRepository implements AddonCoverRepositoryInterface\r\n",
                    "AddonCoverRepository",
                    "AbstractBaseRepository",
                    "AddonCoverRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                "App\\Models\\AddonCover"
            ],
            "line_count": 33,
            "size_bytes": 922
        },
        {
            "file_path": "app/Repositories/BranchRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class BranchRepository extends AbstractBaseRepository implements BranchRepositoryInterface\r\n",
                    "BranchRepository",
                    "AbstractBaseRepository",
                    "BranchRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getBranchesWithFilters",
                "getBranchesByStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics"
            ],
            "method_count": 6,
            "uses": [
                "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('email', 'like', \"%{$search}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                "($searchTerm) {\r\n                $query->where('name', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhere('email', 'like', \"%{$searchTerm}%\")"
            ],
            "line_count": 126,
            "size_bytes": 3752
        },
        {
            "file_path": "app/Repositories/BrokerRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class BrokerRepository extends AbstractBaseRepository implements BrokerRepositoryInterface\r\n",
                    "BrokerRepository",
                    "AbstractBaseRepository",
                    "BrokerRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                "App\\Models\\Broker"
            ],
            "line_count": 33,
            "size_bytes": 910
        },
        {
            "file_path": "app/Repositories/ClaimRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class ClaimRepository extends AbstractBaseRepository implements ClaimRepositoryInterface\r\n",
                    "ClaimRepository",
                    "AbstractBaseRepository",
                    "ClaimRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getClaimsWithFilters",
                "getClaimsByStatus",
                "getClaimsByInsuranceType",
                "getClaimsByDateRange",
                "getClaimStatistics",
                "searchClaims",
                "getClaimsByCustomer",
                "getClaimsByCustomerInsurance",
                "generateClaimNumber"
            ],
            "method_count": 9,
            "uses": [
                "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                "App\\Models\\Claim",
                "Illuminate\\Database\\Eloquent\\Builder",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "($search) {\r\n                $q->where('claim_number', 'like', \"%{$search}%\")\r\n                  ->orWhere('description', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($search) {\r\n                      $customerQuery->where('name', 'like', \"%{$search}%\")\r\n                                   ->orWhere('email', 'like', \"%{$search}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                "($search) {\r\n                      $insuranceQuery->where('policy_no', 'like', \"%{$search}%\")\r\n                                    ->orWhere('registration_no', 'like', \"%{$search}%\")",
                "($searchTerm) {\r\n                $query->where('claim_number', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhere('description', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhereHas('customer', function (Builder $customerQuery) use ($searchTerm) {\r\n                          $customerQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                       ->orWhere('email', 'like', \"%{$searchTerm}%\")\r\n                                       ->orWhere('mobile_number', 'like', \"%{$searchTerm}%\")"
            ],
            "line_count": 213,
            "size_bytes": 7654
        },
        {
            "file_path": "app/Repositories/CustomerInsuranceRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class CustomerInsuranceRepository extends AbstractBaseRepository implements CustomerInsuranceRepositoryInterface\r\n",
                    "CustomerInsuranceRepository",
                    "AbstractBaseRepository",
                    "CustomerInsuranceRepositoryInterface\r\n"
                ]
            ],
            "methods": [
                "getPaginated",
                "findWithRelations",
                "getByCustomerId",
                "getAllForExport",
                "getExpiringPolicies",
                "getActiveCustomerInsurances"
            ],
            "method_count": 6,
            "uses": [
                "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Carbon\\Carbon",
                "($search) {\r\n                $q->where('customers.name', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customer_insurances.policy_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customer_insurances.registration_no', 'LIKE', '%' . $search . '%')"
            ],
            "line_count": 121,
            "size_bytes": 4617
        },
        {
            "file_path": "app/Repositories/CustomerRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class CustomerRepository extends AbstractBaseRepository implements CustomerRepositoryInterface\r\n",
                    "CustomerRepository",
                    "AbstractBaseRepository",
                    "CustomerRepositoryInterface\r\n"
                ],
                [
                    "interface signature",
                    "signature"
                ],
                [
                    "interface signature",
                    "signature"
                ]
            ],
            "methods": [
                "getAll",
                "getPaginated",
                "findByEmail",
                "findByMobileNumber",
                "update",
                "delete",
                "getByFamilyGroup",
                "getByType",
                "search",
                "exists",
                "count",
                "getActiveCustomers",
                "getCustomersWithValidMobileNumbers",
                "getCustomersByIds"
            ],
            "method_count": 14,
            "uses": [
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Models\\Customer",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "($searchTerm) {\r\n                $q->where('name', 'LIKE', $searchTerm)\r\n                  ->orWhere('email', 'LIKE', $searchTerm)\r\n                  ->orWhere('mobile_number', 'LIKE', $searchTerm)"
            ],
            "line_count": 172,
            "size_bytes": 5178
        },
        {
            "file_path": "app/Repositories/FamilyGroupRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class FamilyGroupRepository extends AbstractBaseRepository implements FamilyGroupRepositoryInterface\r\n",
                    "FamilyGroupRepository",
                    "AbstractBaseRepository",
                    "FamilyGroupRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getFamilyGroupsWithFilters",
                "getFamilyGroupWithMembers",
                "getFamilyGroupsByHead",
                "getFamilyGroupsByCustomer",
                "getAvailableCustomers",
                "getAvailableCustomersForEdit",
                "isCustomerInFamilyGroup",
                "getFamilyMembers",
                "updateFamilyHead",
                "removeCustomerFromFamilyGroup",
                "getFamilyGroupStatistics",
                "searchFamilyGroups",
                "getAllFamilyGroupsWithRelationships"
            ],
            "method_count": 13,
            "uses": [
                "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                "App\\Models\\FamilyGroup",
                "App\\Models\\Customer",
                "App\\Models\\FamilyMember",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('familyHead', function ($subQ) use ($search) {\r\n                      $subQ->where('name', 'like', \"%{$search}%\")\r\n                           ->orWhere('email', 'like', \"%{$search}%\")",
                "($customerId) {\r\n                $query->where('customer_id', $customerId)",
                "($familyGroupId) {\r\n                $query->whereNull('family_group_id')\r\n                      ->orWhere('family_group_id', $familyGroupId)",
                "($familyGroupId) {\r\n                $query->where('family_group_id', '!=', $familyGroupId)",
                "($searchTerm) {\r\n                $query->where('name', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhereHas('familyHead', function ($subQuery) use ($searchTerm) {\r\n                          $subQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('email', 'like', \"%{$searchTerm}%\")"
            ],
            "line_count": 250,
            "size_bytes": 8523
        },
        {
            "file_path": "app/Repositories/FuelTypeRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class FuelTypeRepository extends AbstractBaseRepository implements FuelTypeRepositoryInterface\n",
                    "FuelTypeRepository",
                    "AbstractBaseRepository",
                    "FuelTypeRepositoryInterface\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\FuelTypeRepositoryInterface",
                "App\\Models\\FuelType"
            ],
            "line_count": 34,
            "size_bytes": 849
        },
        {
            "file_path": "app/Repositories/InsuranceCompanyRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class InsuranceCompanyRepository extends AbstractBaseRepository implements InsuranceCompanyRepositoryInterface\r\n",
                    "InsuranceCompanyRepository",
                    "AbstractBaseRepository",
                    "InsuranceCompanyRepositoryInterface\r\n"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                "App\\Models\\InsuranceCompany"
            ],
            "line_count": 18,
            "size_bytes": 600
        },
        {
            "file_path": "app/Repositories/MarketingWhatsAppRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class MarketingWhatsAppRepository extends AbstractBaseRepository implements MarketingWhatsAppRepositoryInterface\r\n",
                    "MarketingWhatsAppRepository",
                    "AbstractBaseRepository",
                    "MarketingWhatsAppRepositoryInterface\r\n"
                ]
            ],
            "methods": [
                "getMarketingMessagesWithFilters",
                "getMarketingMessagesByStatus",
                "getMarketingMessagesByType",
                "getTodayMarketingMessages",
                "getMarketingMessagesByDateRange",
                "getMarketingMessageStatistics",
                "searchMarketingMessages",
                "getMarketingMessagesByPhoneNumber",
                "getFailedMarketingMessages",
                "getAllMarketingMessagesForExport",
                "markMessageAsSent",
                "markMessageAsFailed"
            ],
            "method_count": 12,
            "uses": [
                "App\\Contracts\\Repositories\\MarketingWhatsAppRepositoryInterface",
                "App\\Models\\MarketingWhatsApp",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "($search) {\r\n                foreach ($this->searchableFields as $field) {\r\n                    $q->orWhere($field, 'like', \"%{$search}%\")",
                "($searchTerm) {\r\n            foreach ($this->searchableFields as $field) {\r\n                $q->orWhere($field, 'like', \"%{$searchTerm}%\")"
            ],
            "line_count": 176,
            "size_bytes": 6125
        },
        {
            "file_path": "app/Repositories/PermissionRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class PermissionRepository extends AbstractBaseRepository implements PermissionRepositoryInterface\r\n",
                    "PermissionRepository",
                    "AbstractBaseRepository",
                    "PermissionRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getPermissionsWithFilters",
                "getPermissionWithRoles",
                "getPermissionsWithRolesCount",
                "searchPermissions",
                "getPermissionsByGuard",
                "getPermissionsByModule",
                "getPermissionStatistics",
                "getPermissionsByRole",
                "getUnassignedPermissions"
            ],
            "method_count": 9,
            "uses": [
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission",
                "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('guard_name', 'like', \"%{$search}%\")",
                "($roleId) {\r\n            $query->where('id', $roleId)",
                "($roleId) {\r\n                $query->where('id', $roleId)"
            ],
            "line_count": 166,
            "size_bytes": 5079
        },
        {
            "file_path": "app/Repositories/PolicyRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class PolicyRepository extends AbstractBaseRepository implements PolicyRepositoryInterface\r\n",
                    "PolicyRepository",
                    "AbstractBaseRepository",
                    "PolicyRepositoryInterface\r\n"
                ],
                [
                    "interface signature",
                    "signature"
                ],
                [
                    "interface signature",
                    "signature"
                ]
            ],
            "methods": [
                "getAll",
                "getPaginated",
                "findById",
                "update",
                "delete",
                "getByCustomer",
                "getByInsuranceCompany",
                "getActive",
                "getExpired",
                "getDueForRenewal",
                "getByFamilyGroup",
                "getByPolicyType",
                "search",
                "getStatistics",
                "exists",
                "getCountByStatus"
            ],
            "method_count": 16,
            "uses": [
                "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Carbon",
                "($searchTerm) {\r\n                $q->where('policy_number', 'LIKE', $searchTerm)\r\n                  ->orWhereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                      $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                   ->orWhere('mobile_number', 'LIKE', $searchTerm)",
                "($familyGroupId) {\r\n                                    $query->where('family_group_id', $familyGroupId)",
                "($searchTerm) {\r\n                                    $q->where('policy_number', 'LIKE', $searchTerm)\r\n                                      ->orWhereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                                          $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                                       ->orWhere('mobile_number', 'LIKE', $searchTerm)"
            ],
            "line_count": 233,
            "size_bytes": 8927
        },
        {
            "file_path": "app/Repositories/PolicyTypeRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class PolicyTypeRepository extends AbstractBaseRepository implements PolicyTypeRepositoryInterface\n",
                    "PolicyTypeRepository",
                    "AbstractBaseRepository",
                    "PolicyTypeRepositoryInterface\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\PolicyTypeRepositoryInterface",
                "App\\Models\\PolicyType"
            ],
            "line_count": 34,
            "size_bytes": 869
        },
        {
            "file_path": "app/Repositories/PremiumTypeRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class PremiumTypeRepository extends AbstractBaseRepository implements PremiumTypeRepositoryInterface\n",
                    "PremiumTypeRepository",
                    "AbstractBaseRepository",
                    "PremiumTypeRepositoryInterface\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\PremiumTypeRepositoryInterface",
                "App\\Models\\PremiumType"
            ],
            "line_count": 34,
            "size_bytes": 879
        },
        {
            "file_path": "app/Repositories/QuotationRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class QuotationRepository extends AbstractBaseRepository implements QuotationRepositoryInterface\r\n",
                    "QuotationRepository",
                    "AbstractBaseRepository",
                    "QuotationRepositoryInterface\r\n"
                ],
                [
                    "interface signature",
                    "signature"
                ],
                [
                    "interface signature",
                    "signature"
                ]
            ],
            "methods": [
                "getAll",
                "getPaginated",
                "findById",
                "update",
                "delete",
                "getByCustomer",
                "getByStatus",
                "getRecent",
                "search",
                "getSentQuotations",
                "getPendingQuotations",
                "getCountByStatus",
                "exists"
            ],
            "method_count": 13,
            "uses": [
                "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                "App\\Models\\Quotation",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "($searchTerm) {\r\n                $q->whereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                    $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                 ->orWhere('mobile_number', 'LIKE', $searchTerm)",
                "($searchTerm) {\r\n                           $q->whereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                               $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                            ->orWhere('mobile_number', 'LIKE', $searchTerm)"
            ],
            "line_count": 174,
            "size_bytes": 6015
        },
        {
            "file_path": "app/Repositories/ReferenceUserRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class ReferenceUserRepository extends AbstractBaseRepository implements ReferenceUserRepositoryInterface\r\n",
                    "ReferenceUserRepository",
                    "AbstractBaseRepository",
                    "ReferenceUserRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\ReferenceUserRepositoryInterface",
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 33,
            "size_bytes": 983
        },
        {
            "file_path": "app/Repositories/RelationshipManagerRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class RelationshipManagerRepository extends AbstractBaseRepository implements RelationshipManagerRepositoryInterface\r\n",
                    "RelationshipManagerRepository",
                    "AbstractBaseRepository",
                    "RelationshipManagerRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Contracts\\Repositories\\RelationshipManagerRepositoryInterface",
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 33,
            "size_bytes": 1043
        },
        {
            "file_path": "app/Repositories/RoleRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class RoleRepository extends AbstractBaseRepository implements RoleRepositoryInterface\r\n",
                    "RoleRepository",
                    "AbstractBaseRepository",
                    "RoleRepositoryInterface\r\n"
                ],
                [
                    "class name",
                    "name"
                ]
            ],
            "methods": [
                "getRolesWithFilters",
                "getRoleWithPermissions",
                "getRolesWithPermissionsCount",
                "searchRoles",
                "getRolesByGuard",
                "getRoleStatistics",
                "getRolesByModel"
            ],
            "method_count": 7,
            "uses": [
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role",
                "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('guard_name', 'like', \"%{$search}%\")",
                "($modelType, $modelId) {\r\n            $query->where('model_type', $modelType)\r\n                  ->where('model_id', $modelId)"
            ],
            "line_count": 130,
            "size_bytes": 3810
        },
        {
            "file_path": "app/Repositories/UserRepository.php",
            "namespace": "App\\Repositories",
            "file_type": "repository",
            "classes": [
                [
                    "class UserRepository extends AbstractBaseRepository implements UserRepositoryInterface\r\n",
                    "UserRepository",
                    "AbstractBaseRepository",
                    "UserRepositoryInterface\r\n"
                ]
            ],
            "methods": [
                "findWithRoles",
                "updatePassword",
                "getAllForExport"
            ],
            "method_count": 3,
            "uses": [
                "App\\Contracts\\Repositories\\UserRepositoryInterface",
                "App\\Models\\User"
            ],
            "line_count": 42,
            "size_bytes": 1055
        },
        {
            "file_path": "app/Rules/MatchOldPassword.php",
            "namespace": "App\\Rules",
            "file_type": "class",
            "classes": [
                [
                    "class MatchOldPassword implements Rule\r\n",
                    "MatchOldPassword",
                    "",
                    "Rule\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "passes",
                "message"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Contracts\\Validation\\Rule"
            ],
            "line_count": 42,
            "size_bytes": 800
        },
        {
            "file_path": "app/Services/AddonCoverService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class AddonCoverService extends BaseService implements AddonCoverServiceInterface\r\n",
                    "AddonCoverService",
                    "BaseService",
                    "AddonCoverServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getAddonCovers",
                "createAddonCover",
                "updateAddonCover",
                "deleteAddonCover",
                "updateStatus",
                "exportAddonCovers",
                "getActiveAddonCovers",
                "getStoreValidationRules",
                "getUpdateValidationRules"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\AddonCoverServiceInterface",
                "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                "App\\Exports\\AddonCoverExport",
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 88,
            "size_bytes": 2782
        },
        {
            "file_path": "app/Services/BaseService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "abstract class BaseService",
                    "BaseService"
                ]
            ],
            "methods": [
                "executeInTransaction",
                "createInTransaction",
                "updateInTransaction",
                "deleteInTransaction",
                "executeMultipleInTransaction"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Support\\Facades\\DB",
                "($callbacks) {\r\n            $results = []"
            ],
            "line_count": 100,
            "size_bytes": 3213
        },
        {
            "file_path": "app/Services/BranchService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class BranchService extends BaseService implements BranchServiceInterface\r\n",
                    "BranchService",
                    "BaseService",
                    "BranchServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getBranches",
                "createBranch",
                "updateBranch",
                "deleteBranch",
                "updateBranchStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics",
                "getAllBranchesForExport"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                "App\\Contracts\\Services\\BranchServiceInterface",
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "($data) {\r\n            return $this->branchRepository->create($data)",
                "($branch, $data) {\r\n            return $this->branchRepository->update($branch, $data)",
                "($branch) {\r\n            return $this->branchRepository->delete($branch)",
                "($branchId, $status) {\r\n            $branch = $this->branchRepository->findById($branchId)"
            ],
            "line_count": 79,
            "size_bytes": 2521
        },
        {
            "file_path": "app/Services/BrokerService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class BrokerService extends BaseService implements BrokerServiceInterface\r\n",
                    "BrokerService",
                    "BaseService",
                    "BrokerServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getBrokers",
                "createBroker",
                "updateBroker",
                "deleteBroker",
                "updateStatus",
                "exportBrokers",
                "getActiveBrokers"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Services\\BrokerServiceInterface",
                "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                "App\\Exports\\BrokerExport",
                "App\\Models\\Broker",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 68,
            "size_bytes": 1968
        },
        {
            "file_path": "app/Services/CacheService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class CacheService",
                    "CacheService"
                ]
            ],
            "methods": [
                "getInsuranceCompanies",
                "getBrokers",
                "getPolicyTypes",
                "getPremiumTypes",
                "getFuelTypes",
                "getActiveUsers",
                "invalidateInsuranceCompanies",
                "invalidateBrokers",
                "invalidatePolicyTypes",
                "invalidatePremiumTypes",
                "invalidateFuelTypes",
                "invalidateUsers",
                "invalidateAll",
                "clearApplicationCache",
                "warmupCache",
                "cacheCustomerStatistics",
                "invalidateCustomerStatistics",
                "cacheQuery",
                "cacheReport",
                "invalidateQueryPattern",
                "invalidateReportPattern",
                "getCacheStatistics",
                "warmupCriticalCaches",
                "cacheRecentCustomers",
                "cacheExpiringPolicies",
                "generateQueryKey",
                "generateReportKey",
                "getKeysByPattern",
                "clearPerformanceCaches",
                "invalidateModelCache"
            ],
            "method_count": 30,
            "uses": [
                "Illuminate\\Support\\Facades\\Cache"
            ],
            "line_count": 346,
            "size_bytes": 11797
        },
        {
            "file_path": "app/Services/ClaimService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class ClaimService extends BaseService implements ClaimServiceInterface\r\n",
                    "ClaimService",
                    "BaseService",
                    "ClaimServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getClaims",
                "createClaim",
                "updateClaim",
                "updateClaimStatus",
                "deleteClaim",
                "searchPolicies",
                "formatPolicyText",
                "suggestInsuranceType",
                "getClaimStatistics"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                "App\\Contracts\\Services\\ClaimServiceInterface",
                "App\\Http\\Requests\\StoreClaimRequest",
                "App\\Http\\Requests\\UpdateClaimRequest",
                "App\\Models\\Claim",
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Database\\Eloquent\\Builder",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Support\\Facades\\Log",
                "($request) {\r\n            // Get customer insurance details\r\n            $customerInsurance = CustomerInsurance::with('customer')->findOrFail($request->customer_insurance_id)",
                "($request, $claim) {\r\n            // Get customer insurance details if changed\r\n            if ($request->customer_insurance_id !== $claim->customer_insurance_id) {\r\n                $customerInsurance = CustomerInsurance::with('customer')->findOrFail($request->customer_insurance_id)",
                "($searchTerm) {\r\n            $query->where('policy_no', 'like', \"%{$searchTerm}%\")\r\n                  ->orWhere('registration_no', 'like', \"%{$searchTerm}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($searchTerm) {\r\n                      $customerQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('email', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$searchTerm}%\")"
            ],
            "line_count": 315,
            "size_bytes": 10846
        },
        {
            "file_path": "app/Services/ContentSecurityPolicyService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class ContentSecurityPolicyService",
                    "ContentSecurityPolicyService"
                ]
            ],
            "methods": [
                "__construct",
                "getNonce",
                "getContentSecurityPolicy",
                "getSecurityHeaders",
                "getCspHeaderName",
                "buildCspString",
                "getScriptSrc",
                "getStyleSrc",
                "getImageSrc",
                "getFontSrc",
                "getConnectSrc",
                "getHstsHeader",
                "getPermissionsPolicy",
                "isAdminPanel",
                "generateNonceForView",
                "isNonceValid",
                "logCspViolation"
            ],
            "method_count": 17,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Str"
            ],
            "line_count": 243,
            "size_bytes": 7594
        },
        {
            "file_path": "app/Services/CustomerInsuranceService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class CustomerInsuranceService extends BaseService implements CustomerInsuranceServiceInterface\r\n",
                    "CustomerInsuranceService",
                    "BaseService",
                    "CustomerInsuranceServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getCustomerInsurances",
                "getFormData",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getRenewalValidationRules",
                "prepareStorageData",
                "createCustomerInsurance",
                "updateCustomerInsurance",
                "deleteCustomerInsurance",
                "updateStatus",
                "handleFileUpload",
                "sendWhatsAppDocument",
                "sendRenewalReminderWhatsApp",
                "renewPolicy",
                "exportCustomerInsurances",
                "getCustomerPolicies",
                "sendPolicyWhatsApp",
                "getExpiringPolicies",
                "calculateCommissionBreakdown",
                "calculateCommissionFields",
                "prepareRenewalStorageData"
            ],
            "method_count": 22,
            "uses": [
                "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                "App\\Exports\\CustomerInsurancesExport",
                "App\\Models\\{Branch, Broker, Customer, CustomerInsurance, FuelType, InsuranceCompany, PolicyType, PremiumType, ReferenceUser, RelationshipManager}",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Support\\{Carbon, Facades\\DB, Facades\\Storage}",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "WhatsAppApiTrait",
                "($search) {\r\n                $q->where('registration_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('policy_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customers.name', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customers.mobile_number', 'LIKE', '%' . $search . '%')",
                "($data) {\r\n            // Calculate commission breakdown\r\n            $data = $this->calculateCommissionFields($data)",
                "($customerInsurance, $data) {\r\n            // Calculate commission breakdown\r\n            $data = $this->calculateCommissionFields($data)",
                "($customerInsurance) {\r\n            // Delete policy document if exists\r\n            if ($customerInsurance->policy_document_path && Storage::exists($customerInsurance->policy_document_path)) {\r\n                Storage::delete($customerInsurance->policy_document_path)",
                "($customerInsurance, $data) {\r\n            // Calculate commission breakdown for renewal data\r\n            $data = $this->calculateCommissionFields($data)"
            ],
            "line_count": 601,
            "size_bytes": 25994
        },
        {
            "file_path": "app/Services/CustomerService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class CustomerService extends BaseService implements CustomerServiceInterface\r\n",
                    "CustomerService",
                    "BaseService",
                    "CustomerServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "handleCustomerDocuments",
                "sendOnboardingMessage",
                "getActiveCustomersForSelection",
                "getCustomersByFamily",
                "getCustomersByType",
                "searchCustomers",
                "getCustomerStatistics",
                "customerExists",
                "findByEmail",
                "findByMobileNumber",
                "generateOnboardingMessage",
                "sendWelcomeEmailSync"
            ],
            "method_count": 18,
            "uses": [
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Contracts\\Services\\CustomerServiceInterface",
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Customer\\CustomerProfileUpdated",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "App\\Services\\FileUploadService",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Validator",
                "WhatsAppApiTrait",
                "a different email address.')",
                "($request) {\r\n            // Create customer with validated data\r\n            $customer = $this->customerRepository->create([\r\n                'name' => $request->name,\r\n                'email' => $request->email,\r\n                'mobile_number' => $request->mobile_number,\r\n                'status' => $request->status,\r\n                'wedding_anniversary_date' => $request->wedding_anniversary_date,\r\n                'engagement_anniversary_date' => $request->engagement_anniversary_date,\r\n                'date_of_birth' => $request->date_of_birth,\r\n                'type' => $request->type,\r\n                'pan_card_number' => $request->pan_card_number,\r\n                'aadhar_card_number' => $request->aadhar_card_number,\r\n                'gst_number' => $request->gst_number,\r\n            ])",
                "rollback if email sending fails\r\n            try {\r\n                $this->sendWelcomeEmailSync($customer)",
                "($request, $customer) {\r\n            // Capture original values for change tracking\r\n            $originalValues = $customer->only([\r\n                'name', 'email', 'mobile_number', 'status', 'type',\r\n                'pan_card_number', 'aadhar_card_number', 'gst_number'\r\n            ])",
                "($customer) {\r\n                $message->to($customer->email, $customer->name)\r\n                        ->subject('Welcome to ' . config('app.name') . ' - Your Customer Account is Ready!')"
            ],
            "line_count": 368,
            "size_bytes": 13697
        },
        {
            "file_path": "app/Services/ErrorTrackingService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class ErrorTrackingService",
                    "ErrorTrackingService"
                ]
            ],
            "methods": [
                "__construct",
                "trackError",
                "analyzeError",
                "categorizeError",
                "determineSeverity",
                "generateErrorFingerprint",
                "handleCriticalError",
                "checkErrorRateSpike",
                "updateErrorStatistics",
                "sendCriticalAlert",
                "sendErrorRateAlert",
                "getErrorStatistics",
                "clearStatistics"
            ],
            "method_count": 13,
            "uses": [
                "Illuminate\\Support\\Facades\\Log",
                "Illuminate\\Support\\Facades\\Mail",
                "Illuminate\\Support\\Facades\\Cache",
                "Throwable"
            ],
            "line_count": 352,
            "size_bytes": 12360
        },
        {
            "file_path": "app/Services/FamilyGroupService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class FamilyGroupService extends BaseService implements FamilyGroupServiceInterface\r\n",
                    "FamilyGroupService",
                    "BaseService",
                    "FamilyGroupServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getFamilyGroups",
                "getFamilyGroupWithMembers",
                "createFamilyGroup",
                "updateFamilyGroup",
                "deleteFamilyGroup",
                "updateFamilyGroupStatus",
                "addFamilyMember",
                "removeFamilyMember",
                "updateFamilyMember",
                "changeFamilyHead",
                "setupMemberPasswords",
                "sendPasswordNotifications",
                "getAvailableCustomers",
                "cleanupOrphanedRecords",
                "getFamilyGroupStatistics",
                "updateFamilyMembers",
                "getAllFamilyGroupsForExport",
                "removeFamilyMemberByObject"
            ],
            "method_count": 19,
            "uses": [
                "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                "App\\Models\\FamilyGroup",
                "App\\Models\\FamilyMember",
                "App\\Models\\Customer",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Support\\Facades\\Log",
                "($data) {\r\n            // Create family group\r\n            $familyGroup = $this->familyGroupRepository->create([\r\n                'name' => $data['name'],\r\n                'family_head_id' => $data['family_head_id'],\r\n                'status' => $data['status'] ?? true,\r\n                'created_by' => auth()->id(),\r\n            ])",
                "($familyGroup, $data) {\r\n            // Update basic family group data\r\n            $updated = $this->familyGroupRepository->update($familyGroup, [\r\n                'name' => $data['name'],\r\n                'status' => $data['status'] ?? $familyGroup->status,\r\n            ])",
                "($familyGroup) {\r\n            // Remove all family members\r\n            FamilyMember::where('family_group_id', $familyGroup->id)->delete()",
                "($familyGroupId, $memberData) {\r\n            // Update customer's family_group_id\r\n            Customer::where('id', $memberData['customer_id'])\r\n                ->update(['family_group_id' => $familyGroupId])",
                "($familyGroupId, $memberId) {\r\n            // Check if member is family head\r\n            $familyMember = FamilyMember::where('family_group_id', $familyGroupId)\r\n                ->where('customer_id', $memberId)\r\n                ->first()",
                "($familyGroupId, $newFamilyHeadId) {\r\n            return $this->familyGroupRepository->updateFamilyHead($familyGroupId, $newFamilyHeadId)",
                "($familyMember) {\r\n            // Prevent removing family head\r\n            if ($familyMember->is_head) {\r\n                throw new \\Exception('Cannot remove family head. Please change family head first or delete the entire family group.')"
            ],
            "line_count": 477,
            "size_bytes": 17532
        },
        {
            "file_path": "app/Services/FileUploadService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class FileUploadService",
                    "FileUploadService"
                ]
            ],
            "methods": [
                "uploadCustomerDocument",
                "deleteFile",
                "getFileUrl",
                "sanitizeFilename",
                "validateFileType",
                "validateFileSize",
                "uploadFile"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Http\\UploadedFile",
                "Illuminate\\Support\\Facades\\Storage"
            ],
            "line_count": 77,
            "size_bytes": 2488
        },
        {
            "file_path": "app/Services/FuelTypeService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class FuelTypeService extends BaseService",
                    "FuelTypeService",
                    "BaseService"
                ]
            ],
            "methods": [
                "createFuelType",
                "updateFuelType",
                "deleteFuelType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\FuelType"
            ],
            "line_count": 72,
            "size_bytes": 1624
        },
        {
            "file_path": "app/Services/HealthCheckService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class HealthCheckService",
                    "HealthCheckService"
                ]
            ],
            "methods": [
                "__construct",
                "runHealthChecks",
                "checkDatabase",
                "checkCache",
                "checkStorage",
                "checkQueue",
                "checkMemory",
                "checkDisk",
                "getMemoryLimit",
                "determineOverallStatus",
                "getSystemMetrics"
            ],
            "method_count": 11,
            "uses": [
                "Illuminate\\Support\\Facades\\Cache",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Storage",
                "Throwable"
            ],
            "line_count": 336,
            "size_bytes": 10765
        },
        {
            "file_path": "app/Services/InsuranceCompanyService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class InsuranceCompanyService extends BaseService implements InsuranceCompanyServiceInterface\r\n",
                    "InsuranceCompanyService",
                    "BaseService",
                    "InsuranceCompanyServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getInsuranceCompanies",
                "createInsuranceCompany",
                "updateInsuranceCompany",
                "deleteInsuranceCompany",
                "updateStatus",
                "exportInsuranceCompanies",
                "getActiveInsuranceCompanies"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                "App\\Exports\\InsuranceCompanyExport",
                "App\\Models\\InsuranceCompany",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 68,
            "size_bytes": 2286
        },
        {
            "file_path": "app/Services/LoggingService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class LoggingService",
                    "LoggingService"
                ]
            ],
            "methods": [
                "__construct",
                "logEvent",
                "logUserActivity",
                "logBusinessEvent",
                "logPerformanceMetric",
                "logDatabaseQuery",
                "logSecurityEvent",
                "logError",
                "logApiRequest",
                "logCacheOperation",
                "generateTraceId",
                "generateCorrelationId",
                "addContext",
                "withContext",
                "logSystemHealth"
            ],
            "method_count": 15,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Log",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Str",
                "Throwable"
            ],
            "line_count": 251,
            "size_bytes": 8390
        },
        {
            "file_path": "app/Services/MarketingWhatsAppService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class MarketingWhatsAppService extends BaseService implements MarketingWhatsAppServiceInterface\r\n",
                    "MarketingWhatsAppService",
                    "BaseService",
                    "MarketingWhatsAppServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getActiveCustomers",
                "getValidCustomersForMarketing",
                "sendMarketingCampaign",
                "previewCustomerList",
                "sendTextMessage",
                "sendImageMessage",
                "getMarketingStatistics",
                "logMarketingAttempt",
                "getLastCampaignDate",
                "getCampaignsThisMonth"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                "App\\Services\\FileUploadService",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Support\\Facades\\Log",
                "WhatsAppApiTrait",
                "($campaignData) {\r\n            $customers = $this->getValidCustomersForMarketing(\r\n                $campaignData['recipients'],\r\n                $campaignData['selected_customers'] ?? []\r\n            )"
            ],
            "line_count": 304,
            "size_bytes": 10586
        },
        {
            "file_path": "app/Services/PdfGenerationService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PdfGenerationService",
                    "PdfGenerationService"
                ]
            ],
            "methods": [
                "generateQuotationPdf",
                "generateQuotationPdfForWhatsApp",
                "generateComparisonPdf",
                "calculateSavings",
                "sanitizeFilename"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Quotation",
                "Barryvdh\\DomPDF\\Facade\\Pdf",
                "Illuminate\\Http\\Response"
            ],
            "line_count": 107,
            "size_bytes": 3716
        },
        {
            "file_path": "app/Services/PermissionService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PermissionService extends BaseService implements PermissionServiceInterface\r\n",
                    "PermissionService",
                    "BaseService",
                    "PermissionServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getPermissions",
                "createPermission",
                "updatePermission",
                "deletePermission",
                "getAllPermissions",
                "getPermissionsByRole",
                "searchPermissions",
                "getPermissionStatistics",
                "syncRolePermissions",
                "getPermissionsGroupedByModule"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "App\\Contracts\\Services\\PermissionServiceInterface",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission",
                "Spatie\\Permission\\Models\\Role",
                "($data) {\r\n            return $this->permissionRepository->create($data)",
                "($permission, $data) {\r\n            return $this->permissionRepository->update($permission, $data)",
                "($permission) {\r\n            // First remove the permission from all roles\r\n            $permission->roles()->detach()",
                "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)"
            ],
            "line_count": 95,
            "size_bytes": 3091
        },
        {
            "file_path": "app/Services/PolicyService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PolicyService extends BaseService implements PolicyServiceInterface\r\n",
                    "PolicyService",
                    "BaseService",
                    "PolicyServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "getCustomerPolicies",
                "getPoliciesDueForRenewal",
                "sendRenewalReminder",
                "getFamilyPolicies",
                "canCustomerViewPolicy",
                "getPolicyStatistics",
                "getPoliciesByCompany",
                "getActivePolicies",
                "getExpiredPolicies",
                "getPoliciesByType",
                "searchPolicies",
                "deletePolicy",
                "updatePolicyStatus",
                "getPolicyCountByStatus",
                "policyExists",
                "getPoliciesForRenewalProcessing",
                "sendBulkRenewalReminders",
                "generateRenewalReminderMessage"
            ],
            "method_count": 22,
            "uses": [
                "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                "App\\Contracts\\Services\\PolicyServiceInterface",
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Log",
                "WhatsAppApiTrait"
            ],
            "line_count": 273,
            "size_bytes": 8587
        },
        {
            "file_path": "app/Services/PolicyTypeService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PolicyTypeService extends BaseService",
                    "PolicyTypeService",
                    "BaseService"
                ]
            ],
            "methods": [
                "createPolicyType",
                "updatePolicyType",
                "deletePolicyType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\PolicyType"
            ],
            "line_count": 72,
            "size_bytes": 1680
        },
        {
            "file_path": "app/Services/PremiumTypeService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class PremiumTypeService extends BaseService",
                    "PremiumTypeService",
                    "BaseService"
                ]
            ],
            "methods": [
                "createPremiumType",
                "updatePremiumType",
                "deletePremiumType",
                "updateStatus",
                "validateVehicleAndLifeInsurance"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\PremiumType"
            ],
            "line_count": 92,
            "size_bytes": 2495
        },
        {
            "file_path": "app/Services/QuotationService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class QuotationService extends BaseService implements QuotationServiceInterface\r\n",
                    "QuotationService",
                    "BaseService",
                    "QuotationServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "createQuotation",
                "generateCompanyQuotes",
                "generateQuotesForSelectedCompanies",
                "generateCompanyQuote",
                "calculateBasePremium",
                "calculateAddonPremiums",
                "calculateAddonPremium",
                "setRecommendations",
                "sendQuotationViaWhatsApp",
                "generateWhatsAppMessageWithAttachment",
                "generatePdf",
                "calculateTotalIdv",
                "generateQuoteNumber",
                "getCompanyRatingFactor",
                "getBasicOdRate",
                "getAddonRates",
                "calculateRoadsideAssistance",
                "getCompanyBenefits",
                "getCompanyExclusions",
                "createManualCompanyQuotes",
                "processAddonBreakdown",
                "createManualCompanyQuote",
                "updateQuotationWithCompanies",
                "setRankings",
                "getQuotations",
                "deleteQuotation",
                "calculatePremium",
                "getQuotationFormData"
            ],
            "method_count": 29,
            "uses": [
                "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                "App\\Contracts\\Services\\QuotationServiceInterface",
                "App\\Events\\Quotation\\QuotationGenerated",
                "App\\Models\\Customer",
                "App\\Models\\InsuranceCompany",
                "App\\Models\\Quotation",
                "App\\Models\\QuotationCompany",
                "App\\Services\\PdfGenerationService",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "WhatsAppApiTrait",
                "($data) {\r\n            // Note: QuotationRequested event disabled - policy types handled at company level\r\n\r\n            $data['total_idv'] = $this->calculateTotalIdv($data)",
                "for commercial purposes.\""
            ],
            "line_count": 555,
            "size_bytes": 22368
        },
        {
            "file_path": "app/Services/ReferenceUserService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class ReferenceUserService extends BaseService",
                    "ReferenceUserService",
                    "BaseService"
                ]
            ],
            "methods": [
                "createReferenceUser",
                "updateReferenceUser",
                "deleteReferenceUser",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 72,
            "size_bytes": 1764
        },
        {
            "file_path": "app/Services/RelationshipManagerService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class RelationshipManagerService extends BaseService",
                    "RelationshipManagerService",
                    "BaseService"
                ]
            ],
            "methods": [
                "createRelationshipManager",
                "updateRelationshipManager",
                "deleteRelationshipManager",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 72,
            "size_bytes": 1932
        },
        {
            "file_path": "app/Services/ReportService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class ReportService implements ReportServiceInterface\n",
                    "ReportService",
                    "",
                    "ReportServiceInterface\n"
                ]
            ],
            "methods": [
                "__construct",
                "getInitialData",
                "generateCrossSellingReport",
                "generateCustomerInsuranceReport",
                "exportCrossSellingReport",
                "exportCustomerInsuranceReport",
                "saveUserReportColumns",
                "loadUserReportColumns",
                "analyzeCustomerCrossSellingData"
            ],
            "method_count": 9,
            "uses": [
                "App\\Contracts\\Services\\ReportServiceInterface",
                "App\\Exports\\CrossSellingExport",
                "App\\Exports\\CustomerInsurancesExport1",
                "App\\Models\\Branch",
                "App\\Models\\Broker",
                "App\\Models\\Customer",
                "App\\Models\\FuelType",
                "App\\Models\\InsuranceCompany",
                "App\\Models\\PolicyType",
                "App\\Models\\PremiumType",
                "App\\Models\\ReferenceUser",
                "App\\Models\\RelationshipManager",
                "App\\Models\\Report",
                "Illuminate\\Support\\Carbon",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Symfony\\Component\\HttpFoundation\\BinaryFileResponse",
                "($parameters) {\n                if (!empty($parameters['issue_start_date'])) {\n                    try {\n                        $startDate = Carbon::createFromFormat('d/m/Y', $parameters['issue_start_date'])->format('Y-m-d')",
                "($parameters) {\n                $query->where('broker_id', $parameters['broker_id'])",
                "($parameters) {\n                $query->where('relationship_manager_id', $parameters['relationship_manager_id'])",
                "($parameters) {\n                $query->where('insurance_company_id', $parameters['insurance_company_id'])",
                "($premiumTypes, $oneYearAgo, $hasDateFilter) {\n            $customerData = ['Customer Name' => $customer->name]",
                "($premiumType) {\n                    return $insurance->premiumType->id === $premiumType->id",
                "($premiumType) {\n                return $insurance->premiumType->id === $premiumType->id",
                "($oneYearAgo) {\n                    return $query->where('start_date', '>=', $oneYearAgo)",
                "($oneYearAgo) {\n                    return $query->where('actual_earnings', '>=', $oneYearAgo)"
            ],
            "line_count": 317,
            "size_bytes": 13605
        },
        {
            "file_path": "app/Services/RoleService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class RoleService extends BaseService implements RoleServiceInterface\r\n",
                    "RoleService",
                    "BaseService",
                    "RoleServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getRoles",
                "createRole",
                "updateRole",
                "deleteRole",
                "getAllRoles",
                "getRolesByUser",
                "searchRoles",
                "getRoleStatistics",
                "assignPermissionsToRole",
                "removePermissionsFromRole",
                "assignRoleToUser",
                "removeRoleFromUser",
                "getRoleWithPermissions",
                "getUsersCountByRole"
            ],
            "method_count": 15,
            "uses": [
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "App\\Contracts\\Repositories\\UserRepositoryInterface",
                "App\\Contracts\\Services\\RoleServiceInterface",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role",
                "($data) {\r\n            $role = $this->roleRepository->create([\r\n                'name' => $data['name'],\r\n                'guard_name' => $data['guard_name'] ?? 'web'\r\n            ])",
                "($role, $data) {\r\n            $updated = $this->roleRepository->update($role, [\r\n                'name' => $data['name'],\r\n                'guard_name' => $data['guard_name'] ?? $role->guard_name\r\n            ])",
                "($role) {\r\n            // First remove the role from all users\r\n            $role->users()->detach()",
                "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)",
                "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)",
                "($userId, $roleId) {\r\n            $user = $this->userRepository->findById($userId)",
                "($userId, $roleId) {\r\n            $user = $this->userRepository->findById($userId)"
            ],
            "line_count": 163,
            "size_bytes": 5086
        },
        {
            "file_path": "app/Services/SecurityService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class SecurityService",
                    "SecurityService"
                ]
            ],
            "methods": [
                "getContentSecurityPolicy",
                "getSecurityHeaders",
                "sanitizeInput",
                "validateFileUpload",
                "generateSecureToken",
                "logSecurityEvent"
            ],
            "method_count": 6,
            "uses": [],
            "line_count": 58,
            "size_bytes": 2205
        },
        {
            "file_path": "app/Services/UserService.php",
            "namespace": "App\\Services",
            "file_type": "service",
            "classes": [
                [
                    "class UserService extends BaseService implements UserServiceInterface\r\n",
                    "UserService",
                    "BaseService",
                    "UserServiceInterface\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "getUsers",
                "createUser",
                "updateUser",
                "deleteUser",
                "updateStatus",
                "assignRoles",
                "exportUsers",
                "getActiveUsers",
                "changePassword",
                "getUserWithRoles",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getPasswordValidationRules",
                "getRoles"
            ],
            "method_count": 15,
            "uses": [
                "App\\Contracts\\Services\\UserServiceInterface",
                "App\\Contracts\\Repositories\\UserRepositoryInterface",
                "App\\Exports\\UserExport",
                "App\\Models\\User",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Support\\Facades\\Hash",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Spatie\\Permission\\Models\\Role",
                "($data) {\r\n            if (isset($data['password'])) {\r\n                $data['password'] = Hash::make($data['password'])",
                "($user, $data) {\r\n            if (isset($data['password']) && !empty($data['password'])) {\r\n                $data['password'] = Hash::make($data['password'])",
                "($user, $roles) {\r\n            $user->syncRoles($roles)",
                "($user, $newPassword) {\r\n            $hashedPassword = Hash::make($newPassword)"
            ],
            "line_count": 151,
            "size_bytes": 4883
        },
        {
            "file_path": "app/Traits/ExportableTrait.php",
            "namespace": "App\\Traits",
            "file_type": "class",
            "classes": [
                [
                    "trait ExportableTrait",
                    "ExportableTrait"
                ],
                [
                    "class to",
                    "to"
                ],
                [
                    "class name",
                    "name"
                ],
                [
                    "class not",
                    "not"
                ]
            ],
            "methods": [
                "exportToExcel",
                "export"
            ],
            "method_count": 2,
            "uses": [
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Http\\Response",
                "* @param string $filename The filename for the export\n     * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse\n     */\n    public function exportToExcel(string $exportClass, string $filename = null): Response\n    {\n        if (!$filename) {\n            $filename = strtolower(class_basename($this)) . 's.xlsx'"
            ],
            "line_count": 61,
            "size_bytes": 1853
        },
        {
            "file_path": "app/Traits/HelperTrait.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait HelperTrait",
                    "HelperTrait"
                ]
            ],
            "methods": [
                "getUserActivityLogJSON",
                "isJson",
                "sentenceCase"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Http\\Response"
            ],
            "line_count": 71,
            "size_bytes": 2549
        },
        {
            "file_path": "app/Traits/TableRecordObserver.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait TableRecordObserver",
                    "TableRecordObserver"
                ]
            ],
            "methods": [
                "boot"
            ],
            "method_count": 1,
            "uses": [],
            "line_count": 27,
            "size_bytes": 726
        },
        {
            "file_path": "app/Traits/WhatsAppApiTrait.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait WhatsAppApiTrait",
                    "WhatsAppApiTrait"
                ]
            ],
            "methods": [
                "whatsAppSendMessage",
                "whatsAppSendMessageWithAttachment",
                "validateAndFormatMobileNumber",
                "newCustomerAdd",
                "insuranceAdded",
                "renewalReminder",
                "renewalReminderVehicle"
            ],
            "method_count": 7,
            "uses": [],
            "line_count": 244,
            "size_bytes": 10295
        }
    ],
    "repositories": {
        "implementations": [
            {
                "file_path": "app/Providers/RepositoryServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "repository",
                "classes": [
                    [
                        "class RepositoryServiceProvider extends ServiceProvider",
                        "RepositoryServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "register",
                    "boot"
                ],
                "method_count": 2,
                "uses": [
                    "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                    "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                    "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                    "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                    "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                    "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                    "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                    "App\\Contracts\\Repositories\\FuelTypeRepositoryInterface",
                    "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                    "App\\Contracts\\Repositories\\MarketingWhatsAppRepositoryInterface",
                    "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                    "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                    "App\\Contracts\\Repositories\\PolicyTypeRepositoryInterface",
                    "App\\Contracts\\Repositories\\PremiumTypeRepositoryInterface",
                    "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                    "App\\Contracts\\Repositories\\ReferenceUserRepositoryInterface",
                    "App\\Contracts\\Repositories\\RelationshipManagerRepositoryInterface",
                    "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                    "App\\Contracts\\Repositories\\UserRepositoryInterface",
                    "App\\Contracts\\Services\\AddonCoverServiceInterface",
                    "App\\Contracts\\Services\\BrokerServiceInterface",
                    "App\\Contracts\\Services\\ClaimServiceInterface",
                    "App\\Contracts\\Services\\CustomerServiceInterface",
                    "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                    "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                    "App\\Contracts\\Services\\FuelTypeServiceInterface",
                    "App\\Contracts\\Services\\BranchServiceInterface",
                    "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                    "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                    "App\\Contracts\\Services\\PermissionServiceInterface",
                    "App\\Contracts\\Services\\PolicyServiceInterface",
                    "App\\Contracts\\Services\\PolicyTypeServiceInterface",
                    "App\\Contracts\\Services\\PremiumTypeServiceInterface",
                    "App\\Contracts\\Services\\QuotationServiceInterface",
                    "App\\Contracts\\Services\\ReferenceUserServiceInterface",
                    "App\\Contracts\\Services\\RelationshipManagerServiceInterface",
                    "App\\Contracts\\Services\\ReportServiceInterface",
                    "App\\Contracts\\Services\\RoleServiceInterface",
                    "App\\Contracts\\Services\\UserServiceInterface",
                    "App\\Repositories\\AddonCoverRepository",
                    "App\\Repositories\\BranchRepository",
                    "App\\Repositories\\BrokerRepository",
                    "App\\Repositories\\ClaimRepository",
                    "App\\Repositories\\CustomerRepository",
                    "App\\Repositories\\CustomerInsuranceRepository",
                    "App\\Repositories\\FamilyGroupRepository",
                    "App\\Repositories\\FuelTypeRepository",
                    "App\\Repositories\\InsuranceCompanyRepository",
                    "App\\Repositories\\MarketingWhatsAppRepository",
                    "App\\Repositories\\PermissionRepository",
                    "App\\Repositories\\PolicyRepository",
                    "App\\Repositories\\PolicyTypeRepository",
                    "App\\Repositories\\PremiumTypeRepository",
                    "App\\Repositories\\QuotationRepository",
                    "App\\Repositories\\ReferenceUserRepository",
                    "App\\Repositories\\RelationshipManagerRepository",
                    "App\\Repositories\\RoleRepository",
                    "App\\Repositories\\UserRepository",
                    "App\\Services\\AddonCoverService",
                    "App\\Services\\BrokerService",
                    "App\\Services\\ClaimService",
                    "App\\Services\\CustomerService",
                    "App\\Services\\CustomerInsuranceService",
                    "App\\Services\\FamilyGroupService",
                    "App\\Services\\BranchService",
                    "App\\Services\\FuelTypeService",
                    "App\\Services\\InsuranceCompanyService",
                    "App\\Services\\MarketingWhatsAppService",
                    "App\\Services\\PermissionService",
                    "App\\Services\\PolicyService",
                    "App\\Services\\PolicyTypeService",
                    "App\\Services\\PremiumTypeService",
                    "App\\Services\\QuotationService",
                    "App\\Services\\ReferenceUserService",
                    "App\\Services\\RelationshipManagerService",
                    "App\\Services\\ReportService",
                    "App\\Services\\RoleService",
                    "App\\Services\\UserService",
                    "Illuminate\\Support\\ServiceProvider"
                ],
                "line_count": 143,
                "size_bytes": 7832
            },
            {
                "file_path": "app/Repositories/AbstractBaseRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "abstract class AbstractBaseRepository implements BaseRepositoryInterface\r\n",
                        "AbstractBaseRepository",
                        "",
                        "BaseRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getPaginated",
                    "create",
                    "update",
                    "delete",
                    "findById",
                    "updateStatus",
                    "getActive",
                    "getAllForExport"
                ],
                "method_count": 8,
                "uses": [
                    "App\\Contracts\\Repositories\\BaseRepositoryInterface",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "($search) {\r\n                foreach ($this->searchableFields as $field) {\r\n                    $q->orWhere($field, 'LIKE', '%' . $search . '%')"
                ],
                "line_count": 135,
                "size_bytes": 3181
            },
            {
                "file_path": "app/Repositories/AddonCoverRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class AddonCoverRepository extends AbstractBaseRepository implements AddonCoverRepositoryInterface\r\n",
                        "AddonCoverRepository",
                        "AbstractBaseRepository",
                        "AddonCoverRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                    "App\\Models\\AddonCover"
                ],
                "line_count": 33,
                "size_bytes": 922
            },
            {
                "file_path": "app/Repositories/BranchRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class BranchRepository extends AbstractBaseRepository implements BranchRepositoryInterface\r\n",
                        "BranchRepository",
                        "AbstractBaseRepository",
                        "BranchRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getBranchesWithFilters",
                    "getBranchesByStatus",
                    "getActiveBranches",
                    "getBranchWithInsurancesCount",
                    "searchBranches",
                    "getBranchStatistics"
                ],
                "method_count": 6,
                "uses": [
                    "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                    "App\\Models\\Branch",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('email', 'like', \"%{$search}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                    "($searchTerm) {\r\n                $query->where('name', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhere('email', 'like', \"%{$searchTerm}%\")"
                ],
                "line_count": 126,
                "size_bytes": 3752
            },
            {
                "file_path": "app/Repositories/BrokerRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class BrokerRepository extends AbstractBaseRepository implements BrokerRepositoryInterface\r\n",
                        "BrokerRepository",
                        "AbstractBaseRepository",
                        "BrokerRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                    "App\\Models\\Broker"
                ],
                "line_count": 33,
                "size_bytes": 910
            },
            {
                "file_path": "app/Repositories/ClaimRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class ClaimRepository extends AbstractBaseRepository implements ClaimRepositoryInterface\r\n",
                        "ClaimRepository",
                        "AbstractBaseRepository",
                        "ClaimRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getClaimsWithFilters",
                    "getClaimsByStatus",
                    "getClaimsByInsuranceType",
                    "getClaimsByDateRange",
                    "getClaimStatistics",
                    "searchClaims",
                    "getClaimsByCustomer",
                    "getClaimsByCustomerInsurance",
                    "generateClaimNumber"
                ],
                "method_count": 9,
                "uses": [
                    "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                    "App\\Models\\Claim",
                    "Illuminate\\Database\\Eloquent\\Builder",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "($search) {\r\n                $q->where('claim_number', 'like', \"%{$search}%\")\r\n                  ->orWhere('description', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($search) {\r\n                      $customerQuery->where('name', 'like', \"%{$search}%\")\r\n                                   ->orWhere('email', 'like', \"%{$search}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                    "($search) {\r\n                      $insuranceQuery->where('policy_no', 'like', \"%{$search}%\")\r\n                                    ->orWhere('registration_no', 'like', \"%{$search}%\")",
                    "($searchTerm) {\r\n                $query->where('claim_number', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhere('description', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhereHas('customer', function (Builder $customerQuery) use ($searchTerm) {\r\n                          $customerQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                       ->orWhere('email', 'like', \"%{$searchTerm}%\")\r\n                                       ->orWhere('mobile_number', 'like', \"%{$searchTerm}%\")"
                ],
                "line_count": 213,
                "size_bytes": 7654
            },
            {
                "file_path": "app/Repositories/CustomerInsuranceRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class CustomerInsuranceRepository extends AbstractBaseRepository implements CustomerInsuranceRepositoryInterface\r\n",
                        "CustomerInsuranceRepository",
                        "AbstractBaseRepository",
                        "CustomerInsuranceRepositoryInterface\r\n"
                    ]
                ],
                "methods": [
                    "getPaginated",
                    "findWithRelations",
                    "getByCustomerId",
                    "getAllForExport",
                    "getExpiringPolicies",
                    "getActiveCustomerInsurances"
                ],
                "method_count": 6,
                "uses": [
                    "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                    "App\\Models\\CustomerInsurance",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Carbon\\Carbon",
                    "($search) {\r\n                $q->where('customers.name', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customer_insurances.policy_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customer_insurances.registration_no', 'LIKE', '%' . $search . '%')"
                ],
                "line_count": 121,
                "size_bytes": 4617
            },
            {
                "file_path": "app/Repositories/CustomerRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class CustomerRepository extends AbstractBaseRepository implements CustomerRepositoryInterface\r\n",
                        "CustomerRepository",
                        "AbstractBaseRepository",
                        "CustomerRepositoryInterface\r\n"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ]
                ],
                "methods": [
                    "getAll",
                    "getPaginated",
                    "findByEmail",
                    "findByMobileNumber",
                    "update",
                    "delete",
                    "getByFamilyGroup",
                    "getByType",
                    "search",
                    "exists",
                    "count",
                    "getActiveCustomers",
                    "getCustomersWithValidMobileNumbers",
                    "getCustomersByIds"
                ],
                "method_count": 14,
                "uses": [
                    "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                    "App\\Models\\Customer",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "($searchTerm) {\r\n                $q->where('name', 'LIKE', $searchTerm)\r\n                  ->orWhere('email', 'LIKE', $searchTerm)\r\n                  ->orWhere('mobile_number', 'LIKE', $searchTerm)"
                ],
                "line_count": 172,
                "size_bytes": 5178
            },
            {
                "file_path": "app/Repositories/FamilyGroupRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class FamilyGroupRepository extends AbstractBaseRepository implements FamilyGroupRepositoryInterface\r\n",
                        "FamilyGroupRepository",
                        "AbstractBaseRepository",
                        "FamilyGroupRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getFamilyGroupsWithFilters",
                    "getFamilyGroupWithMembers",
                    "getFamilyGroupsByHead",
                    "getFamilyGroupsByCustomer",
                    "getAvailableCustomers",
                    "getAvailableCustomersForEdit",
                    "isCustomerInFamilyGroup",
                    "getFamilyMembers",
                    "updateFamilyHead",
                    "removeCustomerFromFamilyGroup",
                    "getFamilyGroupStatistics",
                    "searchFamilyGroups",
                    "getAllFamilyGroupsWithRelationships"
                ],
                "method_count": 13,
                "uses": [
                    "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                    "App\\Models\\FamilyGroup",
                    "App\\Models\\Customer",
                    "App\\Models\\FamilyMember",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('familyHead', function ($subQ) use ($search) {\r\n                      $subQ->where('name', 'like', \"%{$search}%\")\r\n                           ->orWhere('email', 'like', \"%{$search}%\")",
                    "($customerId) {\r\n                $query->where('customer_id', $customerId)",
                    "($familyGroupId) {\r\n                $query->whereNull('family_group_id')\r\n                      ->orWhere('family_group_id', $familyGroupId)",
                    "($familyGroupId) {\r\n                $query->where('family_group_id', '!=', $familyGroupId)",
                    "($searchTerm) {\r\n                $query->where('name', 'like', \"%{$searchTerm}%\")\r\n                      ->orWhereHas('familyHead', function ($subQuery) use ($searchTerm) {\r\n                          $subQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('email', 'like', \"%{$searchTerm}%\")"
                ],
                "line_count": 250,
                "size_bytes": 8523
            },
            {
                "file_path": "app/Repositories/FuelTypeRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class FuelTypeRepository extends AbstractBaseRepository implements FuelTypeRepositoryInterface\n",
                        "FuelTypeRepository",
                        "AbstractBaseRepository",
                        "FuelTypeRepositoryInterface\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\FuelTypeRepositoryInterface",
                    "App\\Models\\FuelType"
                ],
                "line_count": 34,
                "size_bytes": 849
            },
            {
                "file_path": "app/Repositories/InsuranceCompanyRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class InsuranceCompanyRepository extends AbstractBaseRepository implements InsuranceCompanyRepositoryInterface\r\n",
                        "InsuranceCompanyRepository",
                        "AbstractBaseRepository",
                        "InsuranceCompanyRepositoryInterface\r\n"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                    "App\\Models\\InsuranceCompany"
                ],
                "line_count": 18,
                "size_bytes": 600
            },
            {
                "file_path": "app/Repositories/MarketingWhatsAppRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class MarketingWhatsAppRepository extends AbstractBaseRepository implements MarketingWhatsAppRepositoryInterface\r\n",
                        "MarketingWhatsAppRepository",
                        "AbstractBaseRepository",
                        "MarketingWhatsAppRepositoryInterface\r\n"
                    ]
                ],
                "methods": [
                    "getMarketingMessagesWithFilters",
                    "getMarketingMessagesByStatus",
                    "getMarketingMessagesByType",
                    "getTodayMarketingMessages",
                    "getMarketingMessagesByDateRange",
                    "getMarketingMessageStatistics",
                    "searchMarketingMessages",
                    "getMarketingMessagesByPhoneNumber",
                    "getFailedMarketingMessages",
                    "getAllMarketingMessagesForExport",
                    "markMessageAsSent",
                    "markMessageAsFailed"
                ],
                "method_count": 12,
                "uses": [
                    "App\\Contracts\\Repositories\\MarketingWhatsAppRepositoryInterface",
                    "App\\Models\\MarketingWhatsApp",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "($search) {\r\n                foreach ($this->searchableFields as $field) {\r\n                    $q->orWhere($field, 'like', \"%{$search}%\")",
                    "($searchTerm) {\r\n            foreach ($this->searchableFields as $field) {\r\n                $q->orWhere($field, 'like', \"%{$searchTerm}%\")"
                ],
                "line_count": 176,
                "size_bytes": 6125
            },
            {
                "file_path": "app/Repositories/PermissionRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class PermissionRepository extends AbstractBaseRepository implements PermissionRepositoryInterface\r\n",
                        "PermissionRepository",
                        "AbstractBaseRepository",
                        "PermissionRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getPermissionsWithFilters",
                    "getPermissionWithRoles",
                    "getPermissionsWithRolesCount",
                    "searchPermissions",
                    "getPermissionsByGuard",
                    "getPermissionsByModule",
                    "getPermissionStatistics",
                    "getPermissionsByRole",
                    "getUnassignedPermissions"
                ],
                "method_count": 9,
                "uses": [
                    "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Spatie\\Permission\\Models\\Permission",
                    "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('guard_name', 'like', \"%{$search}%\")",
                    "($roleId) {\r\n            $query->where('id', $roleId)",
                    "($roleId) {\r\n                $query->where('id', $roleId)"
                ],
                "line_count": 166,
                "size_bytes": 5079
            },
            {
                "file_path": "app/Repositories/PolicyRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class PolicyRepository extends AbstractBaseRepository implements PolicyRepositoryInterface\r\n",
                        "PolicyRepository",
                        "AbstractBaseRepository",
                        "PolicyRepositoryInterface\r\n"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ]
                ],
                "methods": [
                    "getAll",
                    "getPaginated",
                    "findById",
                    "update",
                    "delete",
                    "getByCustomer",
                    "getByInsuranceCompany",
                    "getActive",
                    "getExpired",
                    "getDueForRenewal",
                    "getByFamilyGroup",
                    "getByPolicyType",
                    "search",
                    "getStatistics",
                    "exists",
                    "getCountByStatus"
                ],
                "method_count": 16,
                "uses": [
                    "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                    "App\\Models\\CustomerInsurance",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Carbon",
                    "($searchTerm) {\r\n                $q->where('policy_number', 'LIKE', $searchTerm)\r\n                  ->orWhereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                      $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                   ->orWhere('mobile_number', 'LIKE', $searchTerm)",
                    "($familyGroupId) {\r\n                                    $query->where('family_group_id', $familyGroupId)",
                    "($searchTerm) {\r\n                                    $q->where('policy_number', 'LIKE', $searchTerm)\r\n                                      ->orWhereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                                          $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                                       ->orWhere('mobile_number', 'LIKE', $searchTerm)"
                ],
                "line_count": 233,
                "size_bytes": 8927
            },
            {
                "file_path": "app/Repositories/PolicyTypeRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class PolicyTypeRepository extends AbstractBaseRepository implements PolicyTypeRepositoryInterface\n",
                        "PolicyTypeRepository",
                        "AbstractBaseRepository",
                        "PolicyTypeRepositoryInterface\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\PolicyTypeRepositoryInterface",
                    "App\\Models\\PolicyType"
                ],
                "line_count": 34,
                "size_bytes": 869
            },
            {
                "file_path": "app/Repositories/PremiumTypeRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class PremiumTypeRepository extends AbstractBaseRepository implements PremiumTypeRepositoryInterface\n",
                        "PremiumTypeRepository",
                        "AbstractBaseRepository",
                        "PremiumTypeRepositoryInterface\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\PremiumTypeRepositoryInterface",
                    "App\\Models\\PremiumType"
                ],
                "line_count": 34,
                "size_bytes": 879
            },
            {
                "file_path": "app/Repositories/QuotationRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class QuotationRepository extends AbstractBaseRepository implements QuotationRepositoryInterface\r\n",
                        "QuotationRepository",
                        "AbstractBaseRepository",
                        "QuotationRepositoryInterface\r\n"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ],
                    [
                        "interface signature",
                        "signature"
                    ]
                ],
                "methods": [
                    "getAll",
                    "getPaginated",
                    "findById",
                    "update",
                    "delete",
                    "getByCustomer",
                    "getByStatus",
                    "getRecent",
                    "search",
                    "getSentQuotations",
                    "getPendingQuotations",
                    "getCountByStatus",
                    "exists"
                ],
                "method_count": 13,
                "uses": [
                    "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                    "App\\Models\\Quotation",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "($searchTerm) {\r\n                $q->whereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                    $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                 ->orWhere('mobile_number', 'LIKE', $searchTerm)",
                    "($searchTerm) {\r\n                           $q->whereHas('customer', function ($customerQuery) use ($searchTerm) {\r\n                               $customerQuery->where('name', 'LIKE', $searchTerm)\r\n                                            ->orWhere('mobile_number', 'LIKE', $searchTerm)"
                ],
                "line_count": 174,
                "size_bytes": 6015
            },
            {
                "file_path": "app/Repositories/ReferenceUserRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class ReferenceUserRepository extends AbstractBaseRepository implements ReferenceUserRepositoryInterface\r\n",
                        "ReferenceUserRepository",
                        "AbstractBaseRepository",
                        "ReferenceUserRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\ReferenceUserRepositoryInterface",
                    "App\\Models\\ReferenceUser"
                ],
                "line_count": 33,
                "size_bytes": 983
            },
            {
                "file_path": "app/Repositories/RelationshipManagerRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class RelationshipManagerRepository extends AbstractBaseRepository implements RelationshipManagerRepositoryInterface\r\n",
                        "RelationshipManagerRepository",
                        "AbstractBaseRepository",
                        "RelationshipManagerRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [],
                "method_count": 0,
                "uses": [
                    "App\\Contracts\\Repositories\\RelationshipManagerRepositoryInterface",
                    "App\\Models\\RelationshipManager"
                ],
                "line_count": 33,
                "size_bytes": 1043
            },
            {
                "file_path": "app/Repositories/RoleRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class RoleRepository extends AbstractBaseRepository implements RoleRepositoryInterface\r\n",
                        "RoleRepository",
                        "AbstractBaseRepository",
                        "RoleRepositoryInterface\r\n"
                    ],
                    [
                        "class name",
                        "name"
                    ]
                ],
                "methods": [
                    "getRolesWithFilters",
                    "getRoleWithPermissions",
                    "getRolesWithPermissionsCount",
                    "searchRoles",
                    "getRolesByGuard",
                    "getRoleStatistics",
                    "getRolesByModel"
                ],
                "method_count": 7,
                "uses": [
                    "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Spatie\\Permission\\Models\\Role",
                    "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('guard_name', 'like', \"%{$search}%\")",
                    "($modelType, $modelId) {\r\n            $query->where('model_type', $modelType)\r\n                  ->where('model_id', $modelId)"
                ],
                "line_count": 130,
                "size_bytes": 3810
            },
            {
                "file_path": "app/Repositories/UserRepository.php",
                "namespace": "App\\Repositories",
                "file_type": "repository",
                "classes": [
                    [
                        "class UserRepository extends AbstractBaseRepository implements UserRepositoryInterface\r\n",
                        "UserRepository",
                        "AbstractBaseRepository",
                        "UserRepositoryInterface\r\n"
                    ]
                ],
                "methods": [
                    "findWithRoles",
                    "updatePassword",
                    "getAllForExport"
                ],
                "method_count": 3,
                "uses": [
                    "App\\Contracts\\Repositories\\UserRepositoryInterface",
                    "App\\Models\\User"
                ],
                "line_count": 42,
                "size_bytes": 1055
            }
        ],
        "interfaces": [],
        "count": 21
    },
    "services": {
        "implementations": [
            {
                "file_path": "app/Modules/Customer/Services/CustomerService.php",
                "namespace": "App\\Modules\\Customer\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class CustomerService implements CustomerServiceInterface\r\n",
                        "CustomerService",
                        "",
                        "CustomerServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getCustomers",
                    "createCustomer",
                    "updateCustomer",
                    "updateCustomerStatus",
                    "deleteCustomer",
                    "getActiveCustomersForSelection",
                    "getCustomersByFamily",
                    "getCustomersByType",
                    "searchCustomers",
                    "getCustomerStatistics",
                    "customerExists",
                    "findByEmail",
                    "findByMobileNumber",
                    "sendOnboardingMessage",
                    "handleCustomerDocuments",
                    "generateOnboardingMessage"
                ],
                "method_count": 17,
                "uses": [
                    "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                    "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                    "App\\Events\\Customer\\CustomerRegistered",
                    "App\\Events\\Customer\\CustomerProfileUpdated",
                    "App\\Http\\Requests\\StoreCustomerRequest",
                    "App\\Http\\Requests\\UpdateCustomerRequest",
                    "App\\Models\\Customer",
                    "App\\Services\\FileUploadService",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Facades\\Validator",
                    "WhatsAppApiTrait"
                ],
                "line_count": 300,
                "size_bytes": 10035
            },
            {
                "file_path": "app/Modules/ModuleServiceProvider.php",
                "namespace": "App\\Modules",
                "file_type": "service",
                "classes": [
                    [
                        "class ModuleServiceProvider extends ServiceProvider",
                        "ModuleServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "register",
                    "boot",
                    "registerModuleServices",
                    "registerModuleRepositories",
                    "registerModuleEvents",
                    "loadModuleRoutes",
                    "loadModuleMigrations",
                    "registerModuleEventListeners",
                    "registerCustomerModuleEvents",
                    "registerQuotationModuleEvents",
                    "registerNotificationModuleEvents"
                ],
                "method_count": 11,
                "uses": [
                    "Illuminate\\Support\\ServiceProvider",
                    "Illuminate\\Support\\Facades\\Route",
                    "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                    "App\\Modules\\Customer\\Services\\CustomerService",
                    "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                    "App\\Modules\\Quotation\\Services\\QuotationService",
                    "App\\Modules\\Notification\\Contracts\\NotificationServiceInterface",
                    "App\\Modules\\Notification\\Services\\NotificationService",
                    "App\\Modules\\Policy\\Contracts\\PolicyServiceInterface",
                    "App\\Modules\\Policy\\Services\\PolicyService",
                    "the existing global repositories\r\n    }\r\n\r\n    /**\r\n     * Register module event system\r\n     */\r\n    private function registerModuleEvents(): void\r\n    {\r\n        // Cross-module event handlers will be registered here\r\n        $this->registerCustomerModuleEvents()"
                ],
                "line_count": 184,
                "size_bytes": 6094
            },
            {
                "file_path": "app/Modules/Policy/Services/PolicyService.php",
                "namespace": "App\\Modules\\Policy\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PolicyService implements PolicyServiceInterface\r\n",
                        "PolicyService",
                        "",
                        "PolicyServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "getPolicies",
                    "createPolicy",
                    "updatePolicy",
                    "renewPolicy",
                    "cancelPolicy",
                    "getPolicyById",
                    "getActivePolicies",
                    "getExpiringPolicies",
                    "calculatePremium",
                    "calculateCommission",
                    "getPolicyStatistics",
                    "searchPolicies",
                    "getCustomerPolicies",
                    "generatePolicyNumber",
                    "generateRenewalPolicyNumber"
                ],
                "method_count": 15,
                "uses": [
                    "App\\Modules\\Policy\\Contracts\\PolicyServiceInterface",
                    "App\\Models\\CustomerInsurance",
                    "App\\Events\\Insurance\\PolicyCreated",
                    "App\\Events\\Insurance\\PolicyRenewed",
                    "App\\Events\\Insurance\\PolicyExpiringWarning",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Facades\\Log",
                    "Carbon\\Carbon",
                    "($search) {\r\n                $q->where('name', 'like', \"%{$search}%\")\r\n                  ->orWhere('email', 'like', \"%{$search}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                    "($query) {\r\n                $q->where('name', 'like', \"%{$query}%\")\r\n                  ->orWhere('email', 'like', \"%{$query}%\")\r\n                  ->orWhere('mobile_number', 'like', \"%{$query}%\")"
                ],
                "line_count": 382,
                "size_bytes": 13886
            },
            {
                "file_path": "app/Modules/Quotation/Services/QuotationService.php",
                "namespace": "App\\Modules\\Quotation\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class QuotationService implements QuotationServiceInterface\r\n",
                        "QuotationService",
                        "",
                        "QuotationServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getQuotations",
                    "createQuotation",
                    "updateQuotation",
                    "deleteQuotation",
                    "generateCompanyQuotes",
                    "getQuotationStatistics",
                    "findById",
                    "getActiveQuotations",
                    "calculateTotalIdv",
                    "generateCompanyQuote",
                    "calculateBasePremium",
                    "calculateAddonPremiums",
                    "calculateAddonPremium",
                    "setRecommendations",
                    "createManualCompanyQuotes",
                    "createManualCompanyQuote",
                    "setRankings",
                    "generateQuoteNumber",
                    "getCompanyRatingFactor",
                    "getBasicOdRate",
                    "getAddonRates",
                    "calculateRoadsideAssistance",
                    "getCompanyBenefits",
                    "getCompanyExclusions"
                ],
                "method_count": 25,
                "uses": [
                    "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                    "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                    "App\\Events\\Quotation\\QuotationRequested",
                    "App\\Events\\Quotation\\QuotationGenerated",
                    "App\\Models\\Customer",
                    "App\\Models\\InsuranceCompany",
                    "App\\Models\\Quotation",
                    "App\\Models\\QuotationCompany",
                    "App\\Models\\PolicyType",
                    "App\\Services\\PdfGenerationService",
                    "App\\Traits\\WhatsAppApiTrait",
                    "App\\Http\\Requests\\StoreQuotationRequest",
                    "App\\Http\\Requests\\UpdateQuotationRequest",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "WhatsAppApiTrait",
                    "for commercial purposes.\""
                ],
                "line_count": 397,
                "size_bytes": 14531
            },
            {
                "file_path": "app/Providers/AppServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class AppServiceProvider extends ServiceProvider",
                        "AppServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "register",
                    "boot"
                ],
                "method_count": 2,
                "uses": [
                    "App\\Models\\{Customer, CustomerInsurance, Broker, InsuranceCompany}",
                    "App\\Observers\\CacheInvalidationObserver",
                    "Illuminate\\Pagination\\Paginator",
                    "Illuminate\\Support\\Facades\\{Schema, URL}",
                    "Illuminate\\Support\\ServiceProvider"
                ],
                "line_count": 39,
                "size_bytes": 909
            },
            {
                "file_path": "app/Providers/AuthServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class AuthServiceProvider extends ServiceProvider",
                        "AuthServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "boot"
                ],
                "method_count": 1,
                "uses": [
                    "Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider",
                    "Illuminate\\Support\\Facades\\Gate"
                ],
                "line_count": 30,
                "size_bytes": 584
            },
            {
                "file_path": "app/Providers/BroadcastServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class BroadcastServiceProvider extends ServiceProvider",
                        "BroadcastServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "boot"
                ],
                "method_count": 1,
                "uses": [
                    "Illuminate\\Support\\Facades\\Broadcast",
                    "Illuminate\\Support\\ServiceProvider"
                ],
                "line_count": 22,
                "size_bytes": 401
            },
            {
                "file_path": "app/Providers/EventServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class EventServiceProvider extends ServiceProvider",
                        "EventServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "boot"
                ],
                "method_count": 1,
                "uses": [
                    "Illuminate\\Auth\\Events\\Registered",
                    "Illuminate\\Auth\\Listeners\\SendEmailVerificationNotification",
                    "Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider as ServiceProvider",
                    "Illuminate\\Support\\Facades\\Event"
                ],
                "line_count": 90,
                "size_bytes": 2956
            },
            {
                "file_path": "app/Providers/HelpersServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class HelpersServiceProvider extends ServiceProvider",
                        "HelpersServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "register",
                    "boot"
                ],
                "method_count": 2,
                "uses": [
                    "Illuminate\\Support\\ServiceProvider"
                ],
                "line_count": 28,
                "size_bytes": 436
            },
            {
                "file_path": "app/Providers/RouteServiceProvider.php",
                "namespace": "App\\Providers",
                "file_type": "service",
                "classes": [
                    [
                        "class RouteServiceProvider extends ServiceProvider",
                        "RouteServiceProvider",
                        "ServiceProvider"
                    ]
                ],
                "methods": [
                    "boot",
                    "configureRateLimiting"
                ],
                "method_count": 2,
                "uses": [
                    "Illuminate\\Cache\\RateLimiting\\Limit",
                    "Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider as ServiceProvider",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\RateLimiter",
                    "Illuminate\\Support\\Facades\\Route"
                ],
                "line_count": 70,
                "size_bytes": 2013
            },
            {
                "file_path": "app/Services/AddonCoverService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class AddonCoverService extends BaseService implements AddonCoverServiceInterface\r\n",
                        "AddonCoverService",
                        "BaseService",
                        "AddonCoverServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getAddonCovers",
                    "createAddonCover",
                    "updateAddonCover",
                    "deleteAddonCover",
                    "updateStatus",
                    "exportAddonCovers",
                    "getActiveAddonCovers",
                    "getStoreValidationRules",
                    "getUpdateValidationRules"
                ],
                "method_count": 10,
                "uses": [
                    "App\\Contracts\\Services\\AddonCoverServiceInterface",
                    "App\\Contracts\\Repositories\\AddonCoverRepositoryInterface",
                    "App\\Exports\\AddonCoverExport",
                    "App\\Models\\AddonCover",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Maatwebsite\\Excel\\Facades\\Excel"
                ],
                "line_count": 88,
                "size_bytes": 2782
            },
            {
                "file_path": "app/Services/BaseService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "abstract class BaseService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "executeInTransaction",
                    "createInTransaction",
                    "updateInTransaction",
                    "deleteInTransaction",
                    "executeMultipleInTransaction"
                ],
                "method_count": 5,
                "uses": [
                    "Illuminate\\Support\\Facades\\DB",
                    "($callbacks) {\r\n            $results = []"
                ],
                "line_count": 100,
                "size_bytes": 3213
            },
            {
                "file_path": "app/Services/BranchService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class BranchService extends BaseService implements BranchServiceInterface\r\n",
                        "BranchService",
                        "BaseService",
                        "BranchServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getBranches",
                    "createBranch",
                    "updateBranch",
                    "deleteBranch",
                    "updateBranchStatus",
                    "getActiveBranches",
                    "getBranchWithInsurancesCount",
                    "searchBranches",
                    "getBranchStatistics",
                    "getAllBranchesForExport"
                ],
                "method_count": 11,
                "uses": [
                    "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                    "App\\Contracts\\Services\\BranchServiceInterface",
                    "App\\Models\\Branch",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "($data) {\r\n            return $this->branchRepository->create($data)",
                    "($branch, $data) {\r\n            return $this->branchRepository->update($branch, $data)",
                    "($branch) {\r\n            return $this->branchRepository->delete($branch)",
                    "($branchId, $status) {\r\n            $branch = $this->branchRepository->findById($branchId)"
                ],
                "line_count": 79,
                "size_bytes": 2521
            },
            {
                "file_path": "app/Services/BrokerService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class BrokerService extends BaseService implements BrokerServiceInterface\r\n",
                        "BrokerService",
                        "BaseService",
                        "BrokerServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getBrokers",
                    "createBroker",
                    "updateBroker",
                    "deleteBroker",
                    "updateStatus",
                    "exportBrokers",
                    "getActiveBrokers"
                ],
                "method_count": 8,
                "uses": [
                    "App\\Contracts\\Services\\BrokerServiceInterface",
                    "App\\Contracts\\Repositories\\BrokerRepositoryInterface",
                    "App\\Exports\\BrokerExport",
                    "App\\Models\\Broker",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Maatwebsite\\Excel\\Facades\\Excel"
                ],
                "line_count": 68,
                "size_bytes": 1968
            },
            {
                "file_path": "app/Services/CacheService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class CacheService",
                        "CacheService"
                    ]
                ],
                "methods": [
                    "getInsuranceCompanies",
                    "getBrokers",
                    "getPolicyTypes",
                    "getPremiumTypes",
                    "getFuelTypes",
                    "getActiveUsers",
                    "invalidateInsuranceCompanies",
                    "invalidateBrokers",
                    "invalidatePolicyTypes",
                    "invalidatePremiumTypes",
                    "invalidateFuelTypes",
                    "invalidateUsers",
                    "invalidateAll",
                    "clearApplicationCache",
                    "warmupCache",
                    "cacheCustomerStatistics",
                    "invalidateCustomerStatistics",
                    "cacheQuery",
                    "cacheReport",
                    "invalidateQueryPattern",
                    "invalidateReportPattern",
                    "getCacheStatistics",
                    "warmupCriticalCaches",
                    "cacheRecentCustomers",
                    "cacheExpiringPolicies",
                    "generateQueryKey",
                    "generateReportKey",
                    "getKeysByPattern",
                    "clearPerformanceCaches",
                    "invalidateModelCache"
                ],
                "method_count": 30,
                "uses": [
                    "Illuminate\\Support\\Facades\\Cache"
                ],
                "line_count": 346,
                "size_bytes": 11797
            },
            {
                "file_path": "app/Services/ClaimService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class ClaimService extends BaseService implements ClaimServiceInterface\r\n",
                        "ClaimService",
                        "BaseService",
                        "ClaimServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getClaims",
                    "createClaim",
                    "updateClaim",
                    "updateClaimStatus",
                    "deleteClaim",
                    "searchPolicies",
                    "formatPolicyText",
                    "suggestInsuranceType",
                    "getClaimStatistics"
                ],
                "method_count": 10,
                "uses": [
                    "App\\Contracts\\Repositories\\ClaimRepositoryInterface",
                    "App\\Contracts\\Services\\ClaimServiceInterface",
                    "App\\Http\\Requests\\StoreClaimRequest",
                    "App\\Http\\Requests\\UpdateClaimRequest",
                    "App\\Models\\Claim",
                    "App\\Models\\CustomerInsurance",
                    "Illuminate\\Database\\Eloquent\\Builder",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Support\\Facades\\Log",
                    "($request) {\r\n            // Get customer insurance details\r\n            $customerInsurance = CustomerInsurance::with('customer')->findOrFail($request->customer_insurance_id)",
                    "($request, $claim) {\r\n            // Get customer insurance details if changed\r\n            if ($request->customer_insurance_id !== $claim->customer_insurance_id) {\r\n                $customerInsurance = CustomerInsurance::with('customer')->findOrFail($request->customer_insurance_id)",
                    "($searchTerm) {\r\n            $query->where('policy_no', 'like', \"%{$searchTerm}%\")\r\n                  ->orWhere('registration_no', 'like', \"%{$searchTerm}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($searchTerm) {\r\n                      $customerQuery->where('name', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('email', 'like', \"%{$searchTerm}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$searchTerm}%\")"
                ],
                "line_count": 315,
                "size_bytes": 10846
            },
            {
                "file_path": "app/Services/ContentSecurityPolicyService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class ContentSecurityPolicyService",
                        "ContentSecurityPolicyService"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getNonce",
                    "getContentSecurityPolicy",
                    "getSecurityHeaders",
                    "getCspHeaderName",
                    "buildCspString",
                    "getScriptSrc",
                    "getStyleSrc",
                    "getImageSrc",
                    "getFontSrc",
                    "getConnectSrc",
                    "getHstsHeader",
                    "getPermissionsPolicy",
                    "isAdminPanel",
                    "generateNonceForView",
                    "isNonceValid",
                    "logCspViolation"
                ],
                "method_count": 17,
                "uses": [
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Str"
                ],
                "line_count": 243,
                "size_bytes": 7594
            },
            {
                "file_path": "app/Services/CustomerInsuranceService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class CustomerInsuranceService extends BaseService implements CustomerInsuranceServiceInterface\r\n",
                        "CustomerInsuranceService",
                        "BaseService",
                        "CustomerInsuranceServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getCustomerInsurances",
                    "getFormData",
                    "getStoreValidationRules",
                    "getUpdateValidationRules",
                    "getRenewalValidationRules",
                    "prepareStorageData",
                    "createCustomerInsurance",
                    "updateCustomerInsurance",
                    "deleteCustomerInsurance",
                    "updateStatus",
                    "handleFileUpload",
                    "sendWhatsAppDocument",
                    "sendRenewalReminderWhatsApp",
                    "renewPolicy",
                    "exportCustomerInsurances",
                    "getCustomerPolicies",
                    "sendPolicyWhatsApp",
                    "getExpiringPolicies",
                    "calculateCommissionBreakdown",
                    "calculateCommissionFields",
                    "prepareRenewalStorageData"
                ],
                "method_count": 22,
                "uses": [
                    "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                    "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                    "App\\Exports\\CustomerInsurancesExport",
                    "App\\Models\\{Branch, Broker, Customer, CustomerInsurance, FuelType, InsuranceCompany, PolicyType, PremiumType, ReferenceUser, RelationshipManager}",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Support\\{Carbon, Facades\\DB, Facades\\Storage}",
                    "Maatwebsite\\Excel\\Facades\\Excel",
                    "WhatsAppApiTrait",
                    "($search) {\r\n                $q->where('registration_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('policy_no', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customers.name', 'LIKE', '%' . $search . '%')\r\n                  ->orWhere('customers.mobile_number', 'LIKE', '%' . $search . '%')",
                    "($data) {\r\n            // Calculate commission breakdown\r\n            $data = $this->calculateCommissionFields($data)",
                    "($customerInsurance, $data) {\r\n            // Calculate commission breakdown\r\n            $data = $this->calculateCommissionFields($data)",
                    "($customerInsurance) {\r\n            // Delete policy document if exists\r\n            if ($customerInsurance->policy_document_path && Storage::exists($customerInsurance->policy_document_path)) {\r\n                Storage::delete($customerInsurance->policy_document_path)",
                    "($customerInsurance, $data) {\r\n            // Calculate commission breakdown for renewal data\r\n            $data = $this->calculateCommissionFields($data)"
                ],
                "line_count": 601,
                "size_bytes": 25994
            },
            {
                "file_path": "app/Services/CustomerService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class CustomerService extends BaseService implements CustomerServiceInterface\r\n",
                        "CustomerService",
                        "BaseService",
                        "CustomerServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getCustomers",
                    "createCustomer",
                    "updateCustomer",
                    "updateCustomerStatus",
                    "deleteCustomer",
                    "handleCustomerDocuments",
                    "sendOnboardingMessage",
                    "getActiveCustomersForSelection",
                    "getCustomersByFamily",
                    "getCustomersByType",
                    "searchCustomers",
                    "getCustomerStatistics",
                    "customerExists",
                    "findByEmail",
                    "findByMobileNumber",
                    "generateOnboardingMessage",
                    "sendWelcomeEmailSync"
                ],
                "method_count": 18,
                "uses": [
                    "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                    "App\\Contracts\\Services\\CustomerServiceInterface",
                    "App\\Events\\Customer\\CustomerRegistered",
                    "App\\Events\\Customer\\CustomerProfileUpdated",
                    "App\\Http\\Requests\\StoreCustomerRequest",
                    "App\\Http\\Requests\\UpdateCustomerRequest",
                    "App\\Models\\Customer",
                    "App\\Services\\FileUploadService",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Facades\\Validator",
                    "WhatsAppApiTrait",
                    "a different email address.')",
                    "($request) {\r\n            // Create customer with validated data\r\n            $customer = $this->customerRepository->create([\r\n                'name' => $request->name,\r\n                'email' => $request->email,\r\n                'mobile_number' => $request->mobile_number,\r\n                'status' => $request->status,\r\n                'wedding_anniversary_date' => $request->wedding_anniversary_date,\r\n                'engagement_anniversary_date' => $request->engagement_anniversary_date,\r\n                'date_of_birth' => $request->date_of_birth,\r\n                'type' => $request->type,\r\n                'pan_card_number' => $request->pan_card_number,\r\n                'aadhar_card_number' => $request->aadhar_card_number,\r\n                'gst_number' => $request->gst_number,\r\n            ])",
                    "rollback if email sending fails\r\n            try {\r\n                $this->sendWelcomeEmailSync($customer)",
                    "($request, $customer) {\r\n            // Capture original values for change tracking\r\n            $originalValues = $customer->only([\r\n                'name', 'email', 'mobile_number', 'status', 'type',\r\n                'pan_card_number', 'aadhar_card_number', 'gst_number'\r\n            ])",
                    "($customer) {\r\n                $message->to($customer->email, $customer->name)\r\n                        ->subject('Welcome to ' . config('app.name') . ' - Your Customer Account is Ready!')"
                ],
                "line_count": 368,
                "size_bytes": 13697
            },
            {
                "file_path": "app/Services/ErrorTrackingService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class ErrorTrackingService",
                        "ErrorTrackingService"
                    ]
                ],
                "methods": [
                    "__construct",
                    "trackError",
                    "analyzeError",
                    "categorizeError",
                    "determineSeverity",
                    "generateErrorFingerprint",
                    "handleCriticalError",
                    "checkErrorRateSpike",
                    "updateErrorStatistics",
                    "sendCriticalAlert",
                    "sendErrorRateAlert",
                    "getErrorStatistics",
                    "clearStatistics"
                ],
                "method_count": 13,
                "uses": [
                    "Illuminate\\Support\\Facades\\Log",
                    "Illuminate\\Support\\Facades\\Mail",
                    "Illuminate\\Support\\Facades\\Cache",
                    "Throwable"
                ],
                "line_count": 352,
                "size_bytes": 12360
            },
            {
                "file_path": "app/Services/FamilyGroupService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class FamilyGroupService extends BaseService implements FamilyGroupServiceInterface\r\n",
                        "FamilyGroupService",
                        "BaseService",
                        "FamilyGroupServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getFamilyGroups",
                    "getFamilyGroupWithMembers",
                    "createFamilyGroup",
                    "updateFamilyGroup",
                    "deleteFamilyGroup",
                    "updateFamilyGroupStatus",
                    "addFamilyMember",
                    "removeFamilyMember",
                    "updateFamilyMember",
                    "changeFamilyHead",
                    "setupMemberPasswords",
                    "sendPasswordNotifications",
                    "getAvailableCustomers",
                    "cleanupOrphanedRecords",
                    "getFamilyGroupStatistics",
                    "updateFamilyMembers",
                    "getAllFamilyGroupsForExport",
                    "removeFamilyMemberByObject"
                ],
                "method_count": 19,
                "uses": [
                    "App\\Contracts\\Repositories\\FamilyGroupRepositoryInterface",
                    "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                    "App\\Models\\FamilyGroup",
                    "App\\Models\\FamilyMember",
                    "App\\Models\\Customer",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Support\\Facades\\Log",
                    "($data) {\r\n            // Create family group\r\n            $familyGroup = $this->familyGroupRepository->create([\r\n                'name' => $data['name'],\r\n                'family_head_id' => $data['family_head_id'],\r\n                'status' => $data['status'] ?? true,\r\n                'created_by' => auth()->id(),\r\n            ])",
                    "($familyGroup, $data) {\r\n            // Update basic family group data\r\n            $updated = $this->familyGroupRepository->update($familyGroup, [\r\n                'name' => $data['name'],\r\n                'status' => $data['status'] ?? $familyGroup->status,\r\n            ])",
                    "($familyGroup) {\r\n            // Remove all family members\r\n            FamilyMember::where('family_group_id', $familyGroup->id)->delete()",
                    "($familyGroupId, $memberData) {\r\n            // Update customer's family_group_id\r\n            Customer::where('id', $memberData['customer_id'])\r\n                ->update(['family_group_id' => $familyGroupId])",
                    "($familyGroupId, $memberId) {\r\n            // Check if member is family head\r\n            $familyMember = FamilyMember::where('family_group_id', $familyGroupId)\r\n                ->where('customer_id', $memberId)\r\n                ->first()",
                    "($familyGroupId, $newFamilyHeadId) {\r\n            return $this->familyGroupRepository->updateFamilyHead($familyGroupId, $newFamilyHeadId)",
                    "($familyMember) {\r\n            // Prevent removing family head\r\n            if ($familyMember->is_head) {\r\n                throw new \\Exception('Cannot remove family head. Please change family head first or delete the entire family group.')"
                ],
                "line_count": 477,
                "size_bytes": 17532
            },
            {
                "file_path": "app/Services/FileUploadService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class FileUploadService",
                        "FileUploadService"
                    ]
                ],
                "methods": [
                    "uploadCustomerDocument",
                    "deleteFile",
                    "getFileUrl",
                    "sanitizeFilename",
                    "validateFileType",
                    "validateFileSize",
                    "uploadFile"
                ],
                "method_count": 7,
                "uses": [
                    "Illuminate\\Http\\UploadedFile",
                    "Illuminate\\Support\\Facades\\Storage"
                ],
                "line_count": 77,
                "size_bytes": 2488
            },
            {
                "file_path": "app/Services/FuelTypeService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class FuelTypeService extends BaseService",
                        "FuelTypeService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "createFuelType",
                    "updateFuelType",
                    "deleteFuelType",
                    "updateStatus"
                ],
                "method_count": 4,
                "uses": [
                    "App\\Models\\FuelType"
                ],
                "line_count": 72,
                "size_bytes": 1624
            },
            {
                "file_path": "app/Services/HealthCheckService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class HealthCheckService",
                        "HealthCheckService"
                    ]
                ],
                "methods": [
                    "__construct",
                    "runHealthChecks",
                    "checkDatabase",
                    "checkCache",
                    "checkStorage",
                    "checkQueue",
                    "checkMemory",
                    "checkDisk",
                    "getMemoryLimit",
                    "determineOverallStatus",
                    "getSystemMetrics"
                ],
                "method_count": 11,
                "uses": [
                    "Illuminate\\Support\\Facades\\Cache",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Facades\\Storage",
                    "Throwable"
                ],
                "line_count": 336,
                "size_bytes": 10765
            },
            {
                "file_path": "app/Services/InsuranceCompanyService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class InsuranceCompanyService extends BaseService implements InsuranceCompanyServiceInterface\r\n",
                        "InsuranceCompanyService",
                        "BaseService",
                        "InsuranceCompanyServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getInsuranceCompanies",
                    "createInsuranceCompany",
                    "updateInsuranceCompany",
                    "deleteInsuranceCompany",
                    "updateStatus",
                    "exportInsuranceCompanies",
                    "getActiveInsuranceCompanies"
                ],
                "method_count": 8,
                "uses": [
                    "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                    "App\\Contracts\\Repositories\\InsuranceCompanyRepositoryInterface",
                    "App\\Exports\\InsuranceCompanyExport",
                    "App\\Models\\InsuranceCompany",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Maatwebsite\\Excel\\Facades\\Excel"
                ],
                "line_count": 68,
                "size_bytes": 2286
            },
            {
                "file_path": "app/Services/LoggingService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class LoggingService",
                        "LoggingService"
                    ]
                ],
                "methods": [
                    "__construct",
                    "logEvent",
                    "logUserActivity",
                    "logBusinessEvent",
                    "logPerformanceMetric",
                    "logDatabaseQuery",
                    "logSecurityEvent",
                    "logError",
                    "logApiRequest",
                    "logCacheOperation",
                    "generateTraceId",
                    "generateCorrelationId",
                    "addContext",
                    "withContext",
                    "logSystemHealth"
                ],
                "method_count": 15,
                "uses": [
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\Log",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Str",
                    "Throwable"
                ],
                "line_count": 251,
                "size_bytes": 8390
            },
            {
                "file_path": "app/Services/MarketingWhatsAppService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class MarketingWhatsAppService extends BaseService implements MarketingWhatsAppServiceInterface\r\n",
                        "MarketingWhatsAppService",
                        "BaseService",
                        "MarketingWhatsAppServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getActiveCustomers",
                    "getValidCustomersForMarketing",
                    "sendMarketingCampaign",
                    "previewCustomerList",
                    "sendTextMessage",
                    "sendImageMessage",
                    "getMarketingStatistics",
                    "logMarketingAttempt",
                    "getLastCampaignDate",
                    "getCampaignsThisMonth"
                ],
                "method_count": 11,
                "uses": [
                    "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                    "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                    "App\\Services\\FileUploadService",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Support\\Facades\\Log",
                    "WhatsAppApiTrait",
                    "($campaignData) {\r\n            $customers = $this->getValidCustomersForMarketing(\r\n                $campaignData['recipients'],\r\n                $campaignData['selected_customers'] ?? []\r\n            )"
                ],
                "line_count": 304,
                "size_bytes": 10586
            },
            {
                "file_path": "app/Services/PdfGenerationService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PdfGenerationService",
                        "PdfGenerationService"
                    ]
                ],
                "methods": [
                    "generateQuotationPdf",
                    "generateQuotationPdfForWhatsApp",
                    "generateComparisonPdf",
                    "calculateSavings",
                    "sanitizeFilename"
                ],
                "method_count": 5,
                "uses": [
                    "App\\Models\\Quotation",
                    "Barryvdh\\DomPDF\\Facade\\Pdf",
                    "Illuminate\\Http\\Response"
                ],
                "line_count": 107,
                "size_bytes": 3716
            },
            {
                "file_path": "app/Services/PermissionService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PermissionService extends BaseService implements PermissionServiceInterface\r\n",
                        "PermissionService",
                        "BaseService",
                        "PermissionServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getPermissions",
                    "createPermission",
                    "updatePermission",
                    "deletePermission",
                    "getAllPermissions",
                    "getPermissionsByRole",
                    "searchPermissions",
                    "getPermissionStatistics",
                    "syncRolePermissions",
                    "getPermissionsGroupedByModule"
                ],
                "method_count": 11,
                "uses": [
                    "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                    "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                    "App\\Contracts\\Services\\PermissionServiceInterface",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Spatie\\Permission\\Models\\Permission",
                    "Spatie\\Permission\\Models\\Role",
                    "($data) {\r\n            return $this->permissionRepository->create($data)",
                    "($permission, $data) {\r\n            return $this->permissionRepository->update($permission, $data)",
                    "($permission) {\r\n            // First remove the permission from all roles\r\n            $permission->roles()->detach()",
                    "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)"
                ],
                "line_count": 95,
                "size_bytes": 3091
            },
            {
                "file_path": "app/Services/PolicyService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PolicyService extends BaseService implements PolicyServiceInterface\r\n",
                        "PolicyService",
                        "BaseService",
                        "PolicyServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getPolicies",
                    "createPolicy",
                    "updatePolicy",
                    "getCustomerPolicies",
                    "getPoliciesDueForRenewal",
                    "sendRenewalReminder",
                    "getFamilyPolicies",
                    "canCustomerViewPolicy",
                    "getPolicyStatistics",
                    "getPoliciesByCompany",
                    "getActivePolicies",
                    "getExpiredPolicies",
                    "getPoliciesByType",
                    "searchPolicies",
                    "deletePolicy",
                    "updatePolicyStatus",
                    "getPolicyCountByStatus",
                    "policyExists",
                    "getPoliciesForRenewalProcessing",
                    "sendBulkRenewalReminders",
                    "generateRenewalReminderMessage"
                ],
                "method_count": 22,
                "uses": [
                    "App\\Contracts\\Repositories\\PolicyRepositoryInterface",
                    "App\\Contracts\\Services\\PolicyServiceInterface",
                    "App\\Models\\Customer",
                    "App\\Models\\CustomerInsurance",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "Illuminate\\Support\\Facades\\Log",
                    "WhatsAppApiTrait"
                ],
                "line_count": 273,
                "size_bytes": 8587
            },
            {
                "file_path": "app/Services/PolicyTypeService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PolicyTypeService extends BaseService",
                        "PolicyTypeService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "createPolicyType",
                    "updatePolicyType",
                    "deletePolicyType",
                    "updateStatus"
                ],
                "method_count": 4,
                "uses": [
                    "App\\Models\\PolicyType"
                ],
                "line_count": 72,
                "size_bytes": 1680
            },
            {
                "file_path": "app/Services/PremiumTypeService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class PremiumTypeService extends BaseService",
                        "PremiumTypeService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "createPremiumType",
                    "updatePremiumType",
                    "deletePremiumType",
                    "updateStatus",
                    "validateVehicleAndLifeInsurance"
                ],
                "method_count": 5,
                "uses": [
                    "App\\Models\\PremiumType"
                ],
                "line_count": 92,
                "size_bytes": 2495
            },
            {
                "file_path": "app/Services/QuotationService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class QuotationService extends BaseService implements QuotationServiceInterface\r\n",
                        "QuotationService",
                        "BaseService",
                        "QuotationServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "createQuotation",
                    "generateCompanyQuotes",
                    "generateQuotesForSelectedCompanies",
                    "generateCompanyQuote",
                    "calculateBasePremium",
                    "calculateAddonPremiums",
                    "calculateAddonPremium",
                    "setRecommendations",
                    "sendQuotationViaWhatsApp",
                    "generateWhatsAppMessageWithAttachment",
                    "generatePdf",
                    "calculateTotalIdv",
                    "generateQuoteNumber",
                    "getCompanyRatingFactor",
                    "getBasicOdRate",
                    "getAddonRates",
                    "calculateRoadsideAssistance",
                    "getCompanyBenefits",
                    "getCompanyExclusions",
                    "createManualCompanyQuotes",
                    "processAddonBreakdown",
                    "createManualCompanyQuote",
                    "updateQuotationWithCompanies",
                    "setRankings",
                    "getQuotations",
                    "deleteQuotation",
                    "calculatePremium",
                    "getQuotationFormData"
                ],
                "method_count": 29,
                "uses": [
                    "App\\Contracts\\Repositories\\QuotationRepositoryInterface",
                    "App\\Contracts\\Services\\QuotationServiceInterface",
                    "App\\Events\\Quotation\\QuotationGenerated",
                    "App\\Models\\Customer",
                    "App\\Models\\InsuranceCompany",
                    "App\\Models\\Quotation",
                    "App\\Models\\QuotationCompany",
                    "App\\Services\\PdfGenerationService",
                    "App\\Traits\\WhatsAppApiTrait",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Support\\Facades\\DB",
                    "WhatsAppApiTrait",
                    "($data) {\r\n            // Note: QuotationRequested event disabled - policy types handled at company level\r\n\r\n            $data['total_idv'] = $this->calculateTotalIdv($data)",
                    "for commercial purposes.\""
                ],
                "line_count": 555,
                "size_bytes": 22368
            },
            {
                "file_path": "app/Services/ReferenceUserService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class ReferenceUserService extends BaseService",
                        "ReferenceUserService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "createReferenceUser",
                    "updateReferenceUser",
                    "deleteReferenceUser",
                    "updateStatus"
                ],
                "method_count": 4,
                "uses": [
                    "App\\Models\\ReferenceUser"
                ],
                "line_count": 72,
                "size_bytes": 1764
            },
            {
                "file_path": "app/Services/RelationshipManagerService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class RelationshipManagerService extends BaseService",
                        "RelationshipManagerService",
                        "BaseService"
                    ]
                ],
                "methods": [
                    "createRelationshipManager",
                    "updateRelationshipManager",
                    "deleteRelationshipManager",
                    "updateStatus"
                ],
                "method_count": 4,
                "uses": [
                    "App\\Models\\RelationshipManager"
                ],
                "line_count": 72,
                "size_bytes": 1932
            },
            {
                "file_path": "app/Services/ReportService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class ReportService implements ReportServiceInterface\n",
                        "ReportService",
                        "",
                        "ReportServiceInterface\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getInitialData",
                    "generateCrossSellingReport",
                    "generateCustomerInsuranceReport",
                    "exportCrossSellingReport",
                    "exportCustomerInsuranceReport",
                    "saveUserReportColumns",
                    "loadUserReportColumns",
                    "analyzeCustomerCrossSellingData"
                ],
                "method_count": 9,
                "uses": [
                    "App\\Contracts\\Services\\ReportServiceInterface",
                    "App\\Exports\\CrossSellingExport",
                    "App\\Exports\\CustomerInsurancesExport1",
                    "App\\Models\\Branch",
                    "App\\Models\\Broker",
                    "App\\Models\\Customer",
                    "App\\Models\\FuelType",
                    "App\\Models\\InsuranceCompany",
                    "App\\Models\\PolicyType",
                    "App\\Models\\PremiumType",
                    "App\\Models\\ReferenceUser",
                    "App\\Models\\RelationshipManager",
                    "App\\Models\\Report",
                    "Illuminate\\Support\\Carbon",
                    "Maatwebsite\\Excel\\Facades\\Excel",
                    "Symfony\\Component\\HttpFoundation\\BinaryFileResponse",
                    "($parameters) {\n                if (!empty($parameters['issue_start_date'])) {\n                    try {\n                        $startDate = Carbon::createFromFormat('d/m/Y', $parameters['issue_start_date'])->format('Y-m-d')",
                    "($parameters) {\n                $query->where('broker_id', $parameters['broker_id'])",
                    "($parameters) {\n                $query->where('relationship_manager_id', $parameters['relationship_manager_id'])",
                    "($parameters) {\n                $query->where('insurance_company_id', $parameters['insurance_company_id'])",
                    "($premiumTypes, $oneYearAgo, $hasDateFilter) {\n            $customerData = ['Customer Name' => $customer->name]",
                    "($premiumType) {\n                    return $insurance->premiumType->id === $premiumType->id",
                    "($premiumType) {\n                return $insurance->premiumType->id === $premiumType->id",
                    "($oneYearAgo) {\n                    return $query->where('start_date', '>=', $oneYearAgo)",
                    "($oneYearAgo) {\n                    return $query->where('actual_earnings', '>=', $oneYearAgo)"
                ],
                "line_count": 317,
                "size_bytes": 13605
            },
            {
                "file_path": "app/Services/RoleService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class RoleService extends BaseService implements RoleServiceInterface\r\n",
                        "RoleService",
                        "BaseService",
                        "RoleServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getRoles",
                    "createRole",
                    "updateRole",
                    "deleteRole",
                    "getAllRoles",
                    "getRolesByUser",
                    "searchRoles",
                    "getRoleStatistics",
                    "assignPermissionsToRole",
                    "removePermissionsFromRole",
                    "assignRoleToUser",
                    "removeRoleFromUser",
                    "getRoleWithPermissions",
                    "getUsersCountByRole"
                ],
                "method_count": 15,
                "uses": [
                    "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                    "App\\Contracts\\Repositories\\UserRepositoryInterface",
                    "App\\Contracts\\Services\\RoleServiceInterface",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Pagination\\LengthAwarePaginator",
                    "Spatie\\Permission\\Models\\Role",
                    "($data) {\r\n            $role = $this->roleRepository->create([\r\n                'name' => $data['name'],\r\n                'guard_name' => $data['guard_name'] ?? 'web'\r\n            ])",
                    "($role, $data) {\r\n            $updated = $this->roleRepository->update($role, [\r\n                'name' => $data['name'],\r\n                'guard_name' => $data['guard_name'] ?? $role->guard_name\r\n            ])",
                    "($role) {\r\n            // First remove the role from all users\r\n            $role->users()->detach()",
                    "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)",
                    "($roleId, $permissionIds) {\r\n            $role = $this->roleRepository->findById($roleId)",
                    "($userId, $roleId) {\r\n            $user = $this->userRepository->findById($userId)",
                    "($userId, $roleId) {\r\n            $user = $this->userRepository->findById($userId)"
                ],
                "line_count": 163,
                "size_bytes": 5086
            },
            {
                "file_path": "app/Services/SecurityService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class SecurityService",
                        "SecurityService"
                    ]
                ],
                "methods": [
                    "getContentSecurityPolicy",
                    "getSecurityHeaders",
                    "sanitizeInput",
                    "validateFileUpload",
                    "generateSecureToken",
                    "logSecurityEvent"
                ],
                "method_count": 6,
                "uses": [],
                "line_count": 58,
                "size_bytes": 2205
            },
            {
                "file_path": "app/Services/UserService.php",
                "namespace": "App\\Services",
                "file_type": "service",
                "classes": [
                    [
                        "class UserService extends BaseService implements UserServiceInterface\r\n",
                        "UserService",
                        "BaseService",
                        "UserServiceInterface\r\n"
                    ]
                ],
                "methods": [
                    "__construct",
                    "getUsers",
                    "createUser",
                    "updateUser",
                    "deleteUser",
                    "updateStatus",
                    "assignRoles",
                    "exportUsers",
                    "getActiveUsers",
                    "changePassword",
                    "getUserWithRoles",
                    "getStoreValidationRules",
                    "getUpdateValidationRules",
                    "getPasswordValidationRules",
                    "getRoles"
                ],
                "method_count": 15,
                "uses": [
                    "App\\Contracts\\Services\\UserServiceInterface",
                    "App\\Contracts\\Repositories\\UserRepositoryInterface",
                    "App\\Exports\\UserExport",
                    "App\\Models\\User",
                    "Illuminate\\Http\\Request",
                    "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                    "Illuminate\\Database\\Eloquent\\Collection",
                    "Illuminate\\Support\\Facades\\Hash",
                    "Maatwebsite\\Excel\\Facades\\Excel",
                    "Spatie\\Permission\\Models\\Role",
                    "($data) {\r\n            if (isset($data['password'])) {\r\n                $data['password'] = Hash::make($data['password'])",
                    "($user, $data) {\r\n            if (isset($data['password']) && !empty($data['password'])) {\r\n                $data['password'] = Hash::make($data['password'])",
                    "($user, $roles) {\r\n            $user->syncRoles($roles)",
                    "($user, $newPassword) {\r\n            $hashedPassword = Hash::make($newPassword)"
                ],
                "line_count": 151,
                "size_bytes": 4883
            }
        ],
        "interfaces": [],
        "count": 39
    },
    "models": [
        {
            "file_path": "app/Models/AddonCover.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class AddonCover extends Authenticatable",
                    "AddonCover",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "booted",
                "handleSmartOrdering",
                "getNextAvailableOrder",
                "getOrdered",
                "getActivitylogOptions"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 133,
            "size_bytes": 4415
        },
        {
            "file_path": "app/Models/Branch.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Branch extends Authenticatable",
                    "Branch",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 3985
        },
        {
            "file_path": "app/Models/Broker.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Broker extends Authenticatable",
                    "Broker",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 85,
            "size_bytes": 3992
        },
        {
            "file_path": "app/Models/Claim.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Claim extends Model",
                    "Claim",
                    "Model"
                ]
            ],
            "methods": [
                "customer",
                "customerInsurance",
                "stages",
                "currentStage",
                "documents",
                "liabilityDetail",
                "generateClaimNumber",
                "createDefaultDocuments",
                "createInitialStage",
                "getActivitylogOptions",
                "isActive",
                "getIncidentDateFormattedAttribute",
                "setIncidentDateAttribute",
                "getDocumentCompletionPercentage",
                "getRequiredDocumentCompletionPercentage",
                "getWhatsAppNumber",
                "getHealthInsuranceDocumentListMessage",
                "getVehicleInsuranceDocumentListMessage",
                "getPendingDocumentsMessage",
                "getClaimNumberNotificationMessage",
                "sendDocumentListWhatsApp",
                "sendPendingDocumentsWhatsApp",
                "sendClaimNumberWhatsApp",
                "sendStageUpdateWhatsApp",
                "sendEmailNotification",
                "sendClaimCreatedNotification",
                "sendStageUpdateNotification",
                "sendClaimNumberAssignedNotification",
                "sendDocumentRequestNotification",
                "sendClaimClosureNotification"
            ],
            "method_count": 30,
            "uses": [
                "App\\Mail\\ClaimNotificationMail",
                "App\\Traits\\TableRecordObserver",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Illuminate\\Database\\Eloquent\\Relations\\HasOne",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Support\\Facades\\Mail",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity, WhatsAppApiTrait"
            ],
            "line_count": 609,
            "size_bytes": 20948
        },
        {
            "file_path": "app/Models/ClaimDocument.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimDocument extends Model",
                    "ClaimDocument",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "markAsSubmitted",
                "markAsNotSubmitted",
                "getActivitylogOptions",
                "getSubmittedDateFormattedAttribute",
                "getStatusBadgeClass",
                "getStatusText",
                "hasFile",
                "getDocumentUrl"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 149,
            "size_bytes": 3937
        },
        {
            "file_path": "app/Models/ClaimLiabilityDetail.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimLiabilityDetail extends Model",
                    "ClaimLiabilityDetail",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "isCashless",
                "isReimbursement",
                "getFacilityName",
                "getFacilityAddress",
                "getFormattedEstimatedAmount",
                "getFormattedApprovedAmount",
                "getFormattedFinalAmount",
                "getActivitylogOptions"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 144,
            "size_bytes": 3944
        },
        {
            "file_path": "app/Models/ClaimStage.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ClaimStage extends Model",
                    "ClaimStage",
                    "Model"
                ]
            ],
            "methods": [
                "claim",
                "setAsCurrent",
                "getActivitylogOptions",
                "getStageDateFormattedAttribute",
                "setStageDateAttribute"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasApiTokens, HasFactory, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 107,
            "size_bytes": 2956
        },
        {
            "file_path": "app/Models/CommissionType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CommissionType extends Model",
                    "CommissionType",
                    "Model"
                ]
            ],
            "methods": [
                "customerInsurances",
                "scopeActive",
                "scopeOrdered"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes",
                "this commission type\r\n     */\r\n    public function customerInsurances()\r\n    {\r\n        return $this->hasMany(CustomerInsurance::class, 'commission_type_id')"
            ],
            "line_count": 53,
            "size_bytes": 1152
        },
        {
            "file_path": "app/Models/Customer.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Customer extends Authenticatable",
                    "Customer",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "boot",
                "insurance",
                "quotations",
                "claims",
                "familyGroup",
                "customerType",
                "familyMember",
                "familyMembers",
                "familyInsurance",
                "hasFamily",
                "isFamilyHead",
                "getViewableInsurance",
                "isInSameFamilyAs",
                "getPrivacySafeData",
                "maskEmail",
                "maskMobile",
                "canViewSensitiveDataOf",
                "auditLogs",
                "getActivitylogOptions",
                "isActive",
                "isRetailCustomer",
                "isCorporateCustomer",
                "panCardPath",
                "aadharCardPath",
                "gstPath",
                "generateDefaultPassword",
                "setDefaultPassword",
                "setCustomPassword",
                "changePassword",
                "needsPasswordChange",
                "hasVerifiedEmail",
                "generateEmailVerificationToken",
                "verifyEmail",
                "generatePasswordResetToken",
                "verifyPasswordResetToken",
                "clearPasswordResetToken",
                "getMaskedPanNumber",
                "validateFamilyGroupId",
                "getDateOfBirthFormattedAttribute",
                "setDateOfBirthAttribute",
                "getWeddingAnniversaryDateFormattedAttribute",
                "setWeddingAnniversaryDateAttribute",
                "getEngagementAnniversaryDateFormattedAttribute",
                "setEngagementAnniversaryDateAttribute"
            ],
            "method_count": 44,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Models\\Quotation",
                "App\\Models\\Claim",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Database\\Eloquent\\Casts\\Attribute",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasOne",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Str",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, LogsActivity",
                "($familyGroupId) {\r\n                $query->where('family_group_id', '=', $familyGroupId)",
                "($familyGroupId) {\r\n                $query->where('family_group_id', '=', $familyGroupId)"
            ],
            "line_count": 686,
            "size_bytes": 23383
        },
        {
            "file_path": "app/Models/CustomerAuditLog.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerAuditLog extends Model",
                    "CustomerAuditLog",
                    "Model"
                ]
            ],
            "methods": [
                "customer",
                "logAction",
                "logPolicyAction",
                "logFailure"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "HasFactory"
            ],
            "line_count": 104,
            "size_bytes": 3058
        },
        {
            "file_path": "app/Models/CustomerInsurance.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerInsurance extends Model",
                    "CustomerInsurance",
                    "Model"
                ]
            ],
            "methods": [
                "branch",
                "broker",
                "relationshipManager",
                "customer",
                "insuranceCompany",
                "premiumType",
                "policyType",
                "fuelType",
                "commissionType",
                "claims",
                "getActivitylogOptions",
                "getIssueDateFormattedAttribute",
                "setIssueDateAttribute",
                "getStartDateFormattedAttribute",
                "setStartDateAttribute",
                "getExpiredDateFormattedAttribute",
                "setExpiredDateAttribute",
                "getTpExpiryDateFormattedAttribute",
                "setTpExpiryDateAttribute",
                "getMaturityDateFormattedAttribute",
                "setMaturityDateAttribute"
            ],
            "method_count": 21,
            "uses": [
                "App\\Models\\Branch",
                "App\\Models\\Broker",
                "App\\Models\\Customer",
                "App\\Models\\Claim",
                "App\\Models\\FuelType",
                "App\\Models\\PolicyType",
                "App\\Models\\PremiumType",
                "App\\Models\\InsuranceCompany",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Models\\RelationshipManager",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "HasFactory, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 319,
            "size_bytes": 14917
        },
        {
            "file_path": "app/Models/CustomerType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class CustomerType extends Model",
                    "CustomerType",
                    "Model"
                ]
            ],
            "methods": [
                "customers",
                "scopeActive",
                "scopeOrdered"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes"
            ],
            "line_count": 53,
            "size_bytes": 1111
        },
        {
            "file_path": "app/Models/FamilyGroup.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FamilyGroup extends Model",
                    "FamilyGroup",
                    "Model"
                ]
            ],
            "methods": [
                "familyHead",
                "familyMembers",
                "members",
                "customers",
                "isActive",
                "getActivitylogOptions"
            ],
            "method_count": 6,
            "uses": [
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "HasFactory, LogsActivity"
            ],
            "line_count": 76,
            "size_bytes": 1727
        },
        {
            "file_path": "app/Models/FamilyMember.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FamilyMember extends Model",
                    "FamilyMember",
                    "Model"
                ]
            ],
            "methods": [
                "familyGroup",
                "customer",
                "isFamilyHead",
                "isActive",
                "getActivitylogOptions"
            ],
            "method_count": 5,
            "uses": [
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "HasFactory, LogsActivity"
            ],
            "line_count": 70,
            "size_bytes": 1565
        },
        {
            "file_path": "app/Models/FuelType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class FuelType extends Authenticatable",
                    "FuelType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 78,
            "size_bytes": 3740
        },
        {
            "file_path": "app/Models/InsuranceCompany.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class InsuranceCompany extends Authenticatable",
                    "InsuranceCompany",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 90,
            "size_bytes": 4436
        },
        {
            "file_path": "app/Models/PolicyType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class PolicyType extends Authenticatable",
                    "PolicyType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 79,
            "size_bytes": 3783
        },
        {
            "file_path": "app/Models/PremiumType.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class PremiumType extends Authenticatable",
                    "PremiumType",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 4146
        },
        {
            "file_path": "app/Models/Quotation.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Quotation extends Model",
                    "Quotation",
                    "Model"
                ]
            ],
            "methods": [
                "boot",
                "customer",
                "quotationCompanies",
                "quotationStatus",
                "recommendedQuote",
                "bestQuote",
                "getActivitylogOptions",
                "isVehicleInsurance",
                "getQuoteReference"
            ],
            "method_count": 9,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Illuminate\\Database\\Eloquent\\Relations\\HasMany",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "HasFactory, TableRecordObserver, LogsActivity"
            ],
            "line_count": 116,
            "size_bytes": 3432
        },
        {
            "file_path": "app/Models/QuotationCompany.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class QuotationCompany extends Model",
                    "QuotationCompany",
                    "Model"
                ]
            ],
            "methods": [
                "quotation",
                "insuranceCompany",
                "getActivitylogOptions",
                "calculateSavings",
                "getFormattedPremium"
            ],
            "method_count": 5,
            "uses": [
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\Relations\\BelongsTo",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "HasFactory, TableRecordObserver, LogsActivity"
            ],
            "line_count": 102,
            "size_bytes": 2935
        },
        {
            "file_path": "app/Models/QuotationStatus.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class QuotationStatus extends Model",
                    "QuotationStatus",
                    "Model"
                ]
            ],
            "methods": [
                "quotations",
                "scopeActive",
                "scopeFinal",
                "scopeNonFinal",
                "scopeOrdered",
                "getColorAttribute"
            ],
            "method_count": 6,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "HasFactory, SoftDeletes"
            ],
            "line_count": 80,
            "size_bytes": 1743
        },
        {
            "file_path": "app/Models/ReferenceUser.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class ReferenceUser extends Authenticatable",
                    "ReferenceUser",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 86,
            "size_bytes": 4149
        },
        {
            "file_path": "app/Models/RelationshipManager.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class RelationshipManager extends Authenticatable",
                    "RelationshipManager",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "customerInsurances",
                "getActivitylogOptions"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 90,
            "size_bytes": 4502
        },
        {
            "file_path": "app/Models/Report.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class Report extends Authenticatable",
                    "Report",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "getActivitylogOptions",
                "user",
                "getInsuranceReport"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\TableRecordObserver",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "Illuminate\\Support\\Carbon",
                "Spatie\\Activitylog\\LogOptions",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Spatie\\Permission\\Traits\\HasRoles",
                "HasRoles, SoftDeletes, TableRecordObserver, LogsActivity",
                "($filters) {\r\n                $startDate = \\App\\Helpers\\DateHelper::isValidDatabaseFormat($filters['record_creation_start_date']) \r\n                    ? $filters['record_creation_start_date'] \r\n                    : formatDateForDatabase($filters['record_creation_start_date'])",
                "($filters) {\r\n                $endDate = \\App\\Helpers\\DateHelper::isValidDatabaseFormat($filters['record_creation_end_date']) \r\n                    ? $filters['record_creation_end_date'] \r\n                    : formatDateForDatabase($filters['record_creation_end_date'])",
                "($filters) {\r\n                try {\r\n                    $startDate = Carbon::createFromFormat('d/m/Y', $filters['issue_start_date'])->format('Y-m-d')",
                "($filters) {\r\n                try {\r\n                    $endDate = Carbon::createFromFormat('d/m/Y', $filters['issue_end_date'])->format('Y-m-d')",
                "($filters) {\r\n                return $query->whereHas('broker', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['broker_id'])",
                "($filters) {\r\n                return $query->whereHas('relationshipManager', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['relationship_manager_id'])",
                "($filters) {\r\n                return $query->whereHas('insuranceCompany', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['insurance_company_id'])",
                "($filters) {\r\n                return $query->whereHas('policyType', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['policy_type_id'])",
                "($filters) {\r\n                return $query->whereHas('fuelType', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['fuel_type_id'])",
                "($filters) {\r\n                return $query->whereHas('premiumType', function ($query) use ($filters) {\r\n                    if (is_array($filters['premium_type_id'])) {\r\n                        $query->whereIn('id', $filters['premium_type_id'])",
                "($filters) {\r\n                return $query->whereHas('customer', function ($query) use ($filters) {\r\n                    $query->where('id', $filters['customer_id'])",
                "($filters) {\r\n                // Due dates can be in m/Y or mm/Y format, handle both\r\n                try {\r\n                    $dateStr = $filters['due_start_date']",
                "($filters) {\r\n                // Due dates can be in m/Y or mm/Y format, handle both\r\n                try {\r\n                    $dateStr = $filters['due_end_date']",
                "($filters) {\r\n                if ($filters['status'] === 'active') {\r\n                    return $query->where('status', 1)",
                "($filters) {\r\n                return $query->where('final_premium_with_gst', '>=', $filters['premium_amount_min'])",
                "($filters) {\r\n                return $query->where('final_premium_with_gst', '<=', $filters['premium_amount_max'])"
            ],
            "line_count": 225,
            "size_bytes": 11216
        },
        {
            "file_path": "app/Models/User.php",
            "namespace": "App\\Models",
            "file_type": "model",
            "classes": [
                [
                    "class User extends Authenticatable",
                    "User",
                    "Authenticatable"
                ]
            ],
            "methods": [
                "getFullNameAttribute",
                "getActivitylogOptions",
                "reports"
            ],
            "method_count": 3,
            "uses": [
                "Laravel\\Sanctum\\HasApiTokens",
                "Spatie\\Activitylog\\LogOptions",
                "App\\Traits\\TableRecordObserver",
                "Spatie\\Permission\\Traits\\HasRoles",
                "Illuminate\\Notifications\\Notifiable",
                "Spatie\\Activitylog\\Traits\\LogsActivity",
                "Illuminate\\Database\\Eloquent\\SoftDeletes",
                "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "HasApiTokens, HasFactory, Notifiable, HasRoles, SoftDeletes, TableRecordObserver, LogsActivity"
            ],
            "line_count": 137,
            "size_bytes": 5577
        }
    ],
    "controllers": [
        {
            "file_path": "app/Http/Controllers/AbstractBaseCrudController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "abstract class AbstractBaseCrudController extends Controller",
                    "AbstractBaseCrudController",
                    "Controller"
                ]
            ],
            "methods": [
                "setupPermissionMiddleware",
                "setupCustomPermissionMiddleware",
                "setupAuthMiddleware",
                "setupGuestMiddleware",
                "getSuccessMessage",
                "getErrorMessage",
                "redirectWithSuccess",
                "redirectWithError",
                "redirectWithValidationErrors"
            ],
            "method_count": 9,
            "uses": [],
            "line_count": 144,
            "size_bytes": 5111
        },
        {
            "file_path": "app/Http/Controllers/AddonCoverController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class AddonCoverController extends AbstractBaseCrudController",
                    "AddonCoverController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importAddonCovers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\AddonCoverServiceInterface",
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 181,
            "size_bytes": 5614
        },
        {
            "file_path": "app/Http/Controllers/Auth/ConfirmPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ConfirmPasswordController extends Controller",
                    "ConfirmPasswordController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ],
                [
                    "trait and",
                    "and"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\ConfirmsPasswords",
                "ConfirmsPasswords"
            ],
            "line_count": 41,
            "size_bytes": 1064
        },
        {
            "file_path": "app/Http/Controllers/Auth/CustomerAuthController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerAuthController extends Controller",
                    "CustomerAuthController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "showLoginForm",
                "login",
                "validateLogin",
                "attemptLogin",
                "credentials",
                "sendLoginResponse",
                "sendFailedLoginResponse",
                "redirectPath",
                "logout",
                "dashboard",
                "username",
                "showChangePasswordForm",
                "changePassword",
                "showEmailVerificationNotice",
                "verifyEmail",
                "resendVerification",
                "showPasswordResetForm",
                "sendPasswordResetLink",
                "showPasswordResetFormWithToken",
                "resetPassword",
                "showProfile",
                "showFamilyMemberProfile",
                "showFamilyMemberPasswordForm",
                "updateFamilyMemberPassword",
                "showPolicies",
                "showPolicyDetail",
                "downloadPolicy",
                "showQuotations",
                "showQuotationDetail",
                "downloadQuotation",
                "showClaims",
                "showClaimDetail"
            ],
            "method_count": 33,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Models\\Customer",
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\Foundation\\Auth\\ThrottlesLogins",
                "ThrottlesLogins",
                "($thirtyDaysFromNow) {\r\n                    if (!$policy->expired_date) {\r\n                        return false",
                "($customer) {\r\n                            $query->where('family_group_id', $customer->family_group_id)",
                "the regular password change form for your own account.')",
                "the regular password change form for your own account.')",
                "($customer) {\r\n                            $query->where('family_group_id', $customer->family_group_id)"
            ],
            "line_count": 1250,
            "size_bytes": 50378
        },
        {
            "file_path": "app/Http/Controllers/Auth/ForgotPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ForgotPasswordController extends Controller",
                    "ForgotPasswordController",
                    "Controller"
                ],
                [
                    "trait which",
                    "which"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails",
                "SendsPasswordResetEmails"
            ],
            "line_count": 23,
            "size_bytes": 689
        },
        {
            "file_path": "app/Http/Controllers/Auth/LoginController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class LoginController extends Controller",
                    "LoginController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\AuthenticatesUsers",
                "AuthenticatesUsers"
            ],
            "line_count": 41,
            "size_bytes": 1042
        },
        {
            "file_path": "app/Http/Controllers/Auth/RegisterController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class RegisterController extends Controller",
                    "RegisterController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ]
            ],
            "methods": [
                "__construct",
                "validator",
                "create"
            ],
            "method_count": 3,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "App\\Models\\User",
                "Illuminate\\Foundation\\Auth\\RegistersUsers",
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Support\\Facades\\Validator",
                "RegistersUsers"
            ],
            "line_count": 74,
            "size_bytes": 2037
        },
        {
            "file_path": "app/Http/Controllers/Auth/ResetPasswordController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class ResetPasswordController extends Controller",
                    "ResetPasswordController",
                    "Controller"
                ],
                [
                    "trait to",
                    "to"
                ],
                [
                    "trait and",
                    "and"
                ]
            ],
            "methods": [
                "rules"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\ResetsPasswords",
                "ResetsPasswords"
            ],
            "line_count": 40,
            "size_bytes": 1085
        },
        {
            "file_path": "app/Http/Controllers/Auth/VerificationController.php",
            "namespace": "App\\Http\\Controllers\\Auth",
            "file_type": "controller",
            "classes": [
                [
                    "class VerificationController extends Controller",
                    "VerificationController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Providers\\RouteServiceProvider",
                "Illuminate\\Foundation\\Auth\\VerifiesEmails",
                "VerifiesEmails"
            ],
            "line_count": 43,
            "size_bytes": 1172
        },
        {
            "file_path": "app/Http/Controllers/BranchController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class BranchController extends AbstractBaseCrudController",
                    "BranchController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "edit",
                "update",
                "updateStatus",
                "export"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\BranchRepositoryInterface",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\BranchesExport"
            ],
            "line_count": 141,
            "size_bytes": 4060
        },
        {
            "file_path": "app/Http/Controllers/BrokerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class BrokerController extends AbstractBaseCrudController",
                    "BrokerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importBrokers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\BrokerServiceInterface",
                "App\\Http\\Requests\\StoreBrokerRequest",
                "App\\Http\\Requests\\UpdateBrokerRequest",
                "App\\Models\\Broker",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\BrokersExport"
            ],
            "line_count": 156,
            "size_bytes": 4590
        },
        {
            "file_path": "app/Http/Controllers/ClaimController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ClaimController extends AbstractBaseCrudController",
                    "ClaimController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "updateStatus",
                "delete",
                "export",
                "searchPolicies",
                "getStatistics",
                "sendDocumentListWhatsApp",
                "sendPendingDocumentsWhatsApp",
                "sendClaimNumberWhatsApp",
                "getWhatsAppPreview",
                "updateDocumentStatus",
                "addStage",
                "updateClaimNumber",
                "updateLiabilityDetails"
            ],
            "method_count": 20,
            "uses": [
                "App\\Http\\Requests\\StoreClaimRequest",
                "App\\Http\\Requests\\UpdateClaimRequest",
                "App\\Models\\Claim",
                "App\\Services\\ClaimService",
                "App\\Contracts\\Repositories\\CustomerInsuranceRepositoryInterface",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\ClaimsExport",
                "web guard for admin\n        $this->setupCustomPermissionMiddleware([\n            ['permission' => 'claim-list|claim-create|claim-edit|claim-delete', 'only' => ['index']],\n            ['permission' => 'claim-create', 'only' => ['create', 'store', 'updateStatus']],\n            ['permission' => 'claim-edit', 'only' => ['edit', 'update']],\n            ['permission' => 'claim-delete', 'only' => ['delete']]\n        ])"
            ],
            "line_count": 505,
            "size_bytes": 17189
        },
        {
            "file_path": "app/Http/Controllers/CommonController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CommonController extends Controller",
                    "CommonController",
                    "Controller"
                ]
            ],
            "methods": [
                "refreshCaptchaImage",
                "deleteCommon",
                "activeInactiveCommon",
                "getImage",
                "getImage1"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Http\\Request",
                "Mail"
            ],
            "line_count": 70,
            "size_bytes": 2645
        },
        {
            "file_path": "app/Http/Controllers/Controller.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class Controller extends BaseController",
                    "Controller",
                    "BaseController"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests",
                "Illuminate\\Foundation\\Bus\\DispatchesJobs",
                "Illuminate\\Foundation\\Validation\\ValidatesRequests",
                "Illuminate\\Routing\\Controller as BaseController",
                "AuthorizesRequests, DispatchesJobs, ValidatesRequests"
            ],
            "line_count": 14,
            "size_bytes": 374
        },
        {
            "file_path": "app/Http/Controllers/CustomerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerController extends AbstractBaseCrudController",
                    "CustomerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importCustomers",
                "export",
                "resendOnBoardingWA"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Services\\CustomerServiceInterface",
                "App\\Exports\\CustomersExport",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\View\\View",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 208,
            "size_bytes": 6610
        },
        {
            "file_path": "app/Http/Controllers/CustomerInsuranceController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerInsuranceController extends AbstractBaseCrudController",
                    "CustomerInsuranceController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "sendWADocument",
                "sendRenewalReminderWA",
                "update",
                "delete",
                "importCustomerInsurances",
                "export",
                "renew",
                "storeRenew"
            ],
            "method_count": 14,
            "uses": [
                "App\\Contracts\\Services\\CustomerInsuranceServiceInterface",
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "WhatsAppApiTrait"
            ],
            "line_count": 275,
            "size_bytes": 10385
        },
        {
            "file_path": "app/Http/Controllers/FamilyGroupController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class FamilyGroupController extends AbstractBaseCrudController",
                    "FamilyGroupController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy",
                "updateStatus",
                "export",
                "removeMember"
            ],
            "method_count": 11,
            "uses": [
                "App\\Contracts\\Services\\FamilyGroupServiceInterface",
                "App\\Contracts\\Repositories\\CustomerRepositoryInterface",
                "App\\Models\\FamilyGroup",
                "App\\Models\\FamilyMember",
                "App\\Models\\Customer",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Illuminate\\Support\\Facades\\DB",
                "($familyGroups) {\r\n                $file = fopen('php://output', 'w')"
            ],
            "line_count": 308,
            "size_bytes": 11313
        },
        {
            "file_path": "app/Http/Controllers/FuelTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class FuelTypeController extends AbstractBaseCrudController",
                    "FuelTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importFuelTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Exports\\FuelTypesExport",
                "App\\Models\\FuelType",
                "App\\Services\\FuelTypeService",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Maatwebsite\\Excel\\Facades\\Excel"
            ],
            "line_count": 175,
            "size_bytes": 5160
        },
        {
            "file_path": "app/Http/Controllers/HealthController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class HealthController extends Controller",
                    "HealthController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "health",
                "detailed",
                "metrics",
                "liveness",
                "readiness",
                "performance",
                "resources",
                "logs",
                "getSystemUptime"
            ],
            "method_count": 10,
            "uses": [
                "App\\Services\\HealthCheckService",
                "App\\Services\\LoggingService",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 216,
            "size_bytes": 6814
        },
        {
            "file_path": "app/Http/Controllers/HomeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class HomeController extends AbstractBaseCrudController",
                    "HomeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "prepareDashboardData",
                "getCustomerStatistics",
                "getFinancialStatistics",
                "getMonthlyFinancialData",
                "getRenewalStatistics",
                "getExpiringInsurancesCount",
                "getFinancialYearChartData",
                "getFinancialYearDates",
                "groupDataByMonth",
                "getCompressionData",
                "getSumColumns",
                "getFinancialDataForPeriod",
                "getFinancialDataForDate",
                "getQuarterlyData",
                "getQuarterDates",
                "getProfile",
                "updateProfile",
                "updateUserProfile",
                "changePassword",
                "updateUserPassword"
            ],
            "method_count": 22,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Models\\User",
                "App\\Rules\\MatchOldPassword",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Carbon",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\Support\\Facades\\Hash"
            ],
            "line_count": 436,
            "size_bytes": 14770
        },
        {
            "file_path": "app/Http/Controllers/InsuranceCompanyController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class InsuranceCompanyController extends AbstractBaseCrudController",
                    "InsuranceCompanyController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importInsuranceCompanys",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Contracts\\Services\\InsuranceCompanyServiceInterface",
                "App\\Models\\InsuranceCompany",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 161,
            "size_bytes": 5242
        },
        {
            "file_path": "app/Http/Controllers/MarketingWhatsAppController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class MarketingWhatsAppController extends AbstractBaseCrudController",
                    "MarketingWhatsAppController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "send",
                "preview"
            ],
            "method_count": 4,
            "uses": [
                "App\\Contracts\\Services\\MarketingWhatsAppServiceInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 103,
            "size_bytes": 3876
        },
        {
            "file_path": "app/Http/Controllers/PermissionsController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PermissionsController extends AbstractBaseCrudController",
                    "PermissionsController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB"
            ],
            "line_count": 182,
            "size_bytes": 5643
        },
        {
            "file_path": "app/Http/Controllers/PolicyTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PolicyTypeController extends AbstractBaseCrudController",
                    "PolicyTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importPolicyTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\PolicyType",
                "App\\Services\\PolicyTypeService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\PolicyTypesExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 177,
            "size_bytes": 5318
        },
        {
            "file_path": "app/Http/Controllers/PremiumTypeController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class PremiumTypeController extends AbstractBaseCrudController",
                    "PremiumTypeController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importPremiumTypes",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\PremiumType",
                "App\\Services\\PremiumTypeService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\PremiumTypesExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 186,
            "size_bytes": 5908
        },
        {
            "file_path": "app/Http/Controllers/QuotationController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class QuotationController extends AbstractBaseCrudController",
                    "QuotationController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "generateQuotes",
                "sendToWhatsApp",
                "downloadPdf",
                "getQuoteFormHtml",
                "delete"
            ],
            "method_count": 12,
            "uses": [
                "App\\Contracts\\Services\\QuotationServiceInterface",
                "App\\Http\\Requests\\CreateQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "Illuminate\\Http\\RedirectResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB",
                "Illuminate\\View\\View"
            ],
            "line_count": 162,
            "size_bytes": 6022
        },
        {
            "file_path": "app/Http/Controllers/ReferenceUsersController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ReferenceUsersController extends AbstractBaseCrudController",
                    "ReferenceUsersController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importReferenceUsers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "Illuminate\\Http\\Request",
                "App\\Models\\ReferenceUser",
                "App\\Services\\ReferenceUserService",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Exports\\ReferenceUsersExport",
                "Illuminate\\Support\\Facades\\Validator",
                "Throwable"
            ],
            "line_count": 184,
            "size_bytes": 5636
        },
        {
            "file_path": "app/Http/Controllers/RelationshipManagerController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class RelationshipManagerController extends AbstractBaseCrudController",
                    "RelationshipManagerController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importRelationshipManagers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\RelationshipManager",
                "App\\Services\\RelationshipManagerService",
                "Illuminate\\Http\\Request",
                "App\\Exports\\RelationshipManagersExport",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Support\\Facades\\Validator"
            ],
            "line_count": 178,
            "size_bytes": 6156
        },
        {
            "file_path": "app/Http/Controllers/ReportController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class ReportController extends AbstractBaseCrudController",
                    "ReportController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "export",
                "saveColumns",
                "loadColumns"
            ],
            "method_count": 5,
            "uses": [
                "App\\Contracts\\Services\\ReportServiceInterface",
                "App\\Models\\Report",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 100,
            "size_bytes": 4002
        },
        {
            "file_path": "app/Http/Controllers/RolesController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class RolesController extends AbstractBaseCrudController",
                    "RolesController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "show",
                "edit",
                "update",
                "destroy"
            ],
            "method_count": 8,
            "uses": [
                "App\\Contracts\\Repositories\\RoleRepositoryInterface",
                "App\\Contracts\\Repositories\\PermissionRepositoryInterface",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\DB"
            ],
            "line_count": 204,
            "size_bytes": 6080
        },
        {
            "file_path": "app/Http/Controllers/UserController.php",
            "namespace": "App\\Http\\Controllers",
            "file_type": "controller",
            "classes": [
                [
                    "class UserController extends AbstractBaseCrudController",
                    "UserController",
                    "AbstractBaseCrudController"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "create",
                "store",
                "updateStatus",
                "edit",
                "update",
                "delete",
                "importUsers",
                "export"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\User",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Validator",
                "Maatwebsite\\Excel\\Facades\\Excel",
                "App\\Contracts\\Services\\UserServiceInterface"
            ],
            "line_count": 217,
            "size_bytes": 6702
        },
        {
            "file_path": "app/Modules/Customer/Http/Controllers/Api/CustomerApiController.php",
            "namespace": "App\\Modules\\Customer\\Http\\Controllers\\Api",
            "file_type": "controller",
            "classes": [
                [
                    "class CustomerApiController extends Controller",
                    "CustomerApiController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "store",
                "show",
                "update",
                "destroy",
                "updateStatus",
                "search",
                "getByType",
                "getByFamily",
                "getStatistics",
                "sendOnboardingMessage",
                "getActiveForSelection"
            ],
            "method_count": 13,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Modules\\Customer\\Contracts\\CustomerServiceInterface",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Response"
            ],
            "line_count": 350,
            "size_bytes": 12761
        },
        {
            "file_path": "app/Modules/Quotation/Http/Controllers/Api/QuotationApiController.php",
            "namespace": "App\\Modules\\Quotation\\Http\\Controllers\\Api",
            "file_type": "controller",
            "classes": [
                [
                    "class QuotationApiController extends Controller",
                    "QuotationApiController",
                    "Controller"
                ]
            ],
            "methods": [
                "__construct",
                "index",
                "store",
                "show",
                "update",
                "destroy",
                "generateCompanyQuotes",
                "getCompanyQuotes",
                "updateCompanyQuotes",
                "generatePdf",
                "sendViaWhatsApp",
                "calculatePremium",
                "getStatistics",
                "getActiveQuotations",
                "getFormData"
            ],
            "method_count": 15,
            "uses": [
                "App\\Http\\Controllers\\Controller",
                "App\\Modules\\Quotation\\Contracts\\QuotationServiceInterface",
                "App\\Http\\Requests\\StoreQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "App\\Models\\Customer",
                "App\\Models\\InsuranceCompany",
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\JsonResponse",
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Response"
            ],
            "line_count": 441,
            "size_bytes": 16968
        }
    ],
    "providers": [],
    "middleware": [],
    "migrations": [],
    "other_components": [
        {
            "file_path": "app/Console/Commands/SendRenewalReminders.php",
            "namespace": "App\\Console\\Commands",
            "file_type": "class",
            "classes": [
                [
                    "class SendRenewalReminders extends Command",
                    "SendRenewalReminders",
                    "Command"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Traits\\WhatsAppApiTrait",
                "Carbon\\Carbon",
                "Illuminate\\Console\\Command",
                "WhatsAppApiTrait",
                "($dates) {\r\n            $query->whereDate('expired_date', $dates['5_days'])\r\n                ->orWhereDate('expired_date', $dates['10_days'])\r\n                ->orWhereDate('expired_date', $dates['15_days'])\r\n                ->orWhereDate('expired_date', $dates['30_days'])"
            ],
            "line_count": 57,
            "size_bytes": 2069
        },
        {
            "file_path": "app/Console/Kernel.php",
            "namespace": "App\\Console",
            "file_type": "class",
            "classes": [
                [
                    "class Kernel extends ConsoleKernel",
                    "Kernel",
                    "ConsoleKernel"
                ]
            ],
            "methods": [
                "schedule",
                "commands"
            ],
            "method_count": 2,
            "uses": [
                "Illuminate\\Console\\Scheduling\\Schedule",
                "Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel"
            ],
            "line_count": 33,
            "size_bytes": 713
        },
        {
            "file_path": "app/Contracts/Repositories/AddonCoverRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface AddonCoverRepositoryInterface extends BaseRepositoryInterface",
                    "AddonCoverRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\AddonCover"
            ],
            "line_count": 17,
            "size_bytes": 493
        },
        {
            "file_path": "app/Contracts/Repositories/BaseRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface eliminates",
                    "eliminates"
                ],
                [
                    "interface BaseRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getPaginated",
                "create",
                "update",
                "delete",
                "findById",
                "updateStatus",
                "getActive",
                "getAllForExport"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Model",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 84,
            "size_bytes": 1924
        },
        {
            "file_path": "app/Contracts/Repositories/BranchRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface BranchRepositoryInterface extends BaseRepositoryInterface",
                    "BranchRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getBranchesWithFilters",
                "getBranchesByStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 65,
            "size_bytes": 1652
        },
        {
            "file_path": "app/Contracts/Repositories/BrokerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface BrokerRepositoryInterface extends BaseRepositoryInterface",
                    "BrokerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\Broker"
            ],
            "line_count": 17,
            "size_bytes": 471
        },
        {
            "file_path": "app/Contracts/Repositories/ClaimRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface ClaimRepositoryInterface extends BaseRepositoryInterface",
                    "ClaimRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getClaimsWithFilters",
                "getClaimsByStatus",
                "getClaimsByInsuranceType",
                "getClaimsByDateRange",
                "getClaimStatistics",
                "searchClaims",
                "getClaimsByCustomer",
                "getClaimsByCustomerInsurance",
                "generateClaimNumber"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 90,
            "size_bytes": 2320
        },
        {
            "file_path": "app/Contracts/Repositories/CustomerInsuranceRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerInsuranceRepositoryInterface extends BaseRepositoryInterface",
                    "CustomerInsuranceRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getByCustomerId",
                "getExpiringPolicies",
                "findWithRelations",
                "getActiveCustomerInsurances"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 35,
            "size_bytes": 1000
        },
        {
            "file_path": "app/Contracts/Repositories/CustomerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerRepositoryInterface extends BaseRepositoryInterface",
                    "CustomerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "findByEmail",
                "findByMobileNumber",
                "getByFamilyGroup",
                "getByType",
                "search",
                "exists",
                "count",
                "getActiveCustomers",
                "getCustomersWithValidMobileNumbers",
                "getCustomersByIds"
            ],
            "method_count": 11,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 77,
            "size_bytes": 1838
        },
        {
            "file_path": "app/Contracts/Repositories/FamilyGroupRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface FamilyGroupRepositoryInterface extends BaseRepositoryInterface",
                    "FamilyGroupRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getFamilyGroupsWithFilters",
                "getFamilyGroupWithMembers",
                "getFamilyGroupsByHead",
                "getFamilyGroupsByCustomer",
                "getAvailableCustomers",
                "getAvailableCustomersForEdit",
                "isCustomerInFamilyGroup",
                "getFamilyMembers",
                "updateFamilyHead",
                "removeCustomerFromFamilyGroup",
                "getFamilyGroupStatistics",
                "searchFamilyGroups",
                "getAllFamilyGroupsWithRelationships"
            ],
            "method_count": 13,
            "uses": [
                "App\\Models\\FamilyGroup",
                "App\\Models\\Customer",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 124,
            "size_bytes": 3396
        },
        {
            "file_path": "app/Contracts/Repositories/FuelTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface FuelTypeRepositoryInterface extends BaseRepositoryInterface",
                    "FuelTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\FuelType"
            ],
            "line_count": 18,
            "size_bytes": 468
        },
        {
            "file_path": "app/Contracts/Repositories/InsuranceCompanyRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface InsuranceCompanyRepositoryInterface extends BaseRepositoryInterface",
                    "InsuranceCompanyRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\InsuranceCompany"
            ],
            "line_count": 17,
            "size_bytes": 523
        },
        {
            "file_path": "app/Contracts/Repositories/MarketingWhatsAppRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface MarketingWhatsAppRepositoryInterface extends BaseRepositoryInterface",
                    "MarketingWhatsAppRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getMarketingMessagesWithFilters",
                "getMarketingMessagesByStatus",
                "getMarketingMessagesByType",
                "getTodayMarketingMessages",
                "getMarketingMessagesByDateRange",
                "getMarketingMessageStatistics",
                "searchMarketingMessages",
                "getMarketingMessagesByPhoneNumber",
                "getFailedMarketingMessages",
                "getAllMarketingMessagesForExport",
                "markMessageAsSent",
                "markMessageAsFailed"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\MarketingWhatsApp",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 114,
            "size_bytes": 3122
        },
        {
            "file_path": "app/Contracts/Repositories/PermissionRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PermissionRepositoryInterface extends BaseRepositoryInterface",
                    "PermissionRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getPermissionsWithFilters",
                "getPermissionWithRoles",
                "getPermissionsWithRolesCount",
                "searchPermissions",
                "getPermissionsByGuard",
                "getPermissionsByModule",
                "getPermissionStatistics",
                "getPermissionsByRole",
                "getUnassignedPermissions"
            ],
            "method_count": 9,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission"
            ],
            "line_count": 90,
            "size_bytes": 2422
        },
        {
            "file_path": "app/Contracts/Repositories/PolicyRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyRepositoryInterface extends BaseRepositoryInterface",
                    "PolicyRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "getByCustomer",
                "getByInsuranceCompany",
                "getExpired",
                "getDueForRenewal",
                "getByFamilyGroup",
                "getByPolicyType",
                "search",
                "getStatistics",
                "exists",
                "getCountByStatus"
            ],
            "method_count": 11,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 70,
            "size_bytes": 1717
        },
        {
            "file_path": "app/Contracts/Repositories/PolicyTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyTypeRepositoryInterface extends BaseRepositoryInterface",
                    "PolicyTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\PolicyType"
            ],
            "line_count": 18,
            "size_bytes": 478
        },
        {
            "file_path": "app/Contracts/Repositories/PremiumTypeRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface PremiumTypeRepositoryInterface extends BaseRepositoryInterface",
                    "PremiumTypeRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\PremiumType"
            ],
            "line_count": 18,
            "size_bytes": 483
        },
        {
            "file_path": "app/Contracts/Repositories/QuotationRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationRepositoryInterface extends BaseRepositoryInterface",
                    "QuotationRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getAll",
                "getByCustomer",
                "getByStatus",
                "getRecent",
                "search",
                "getSentQuotations",
                "getPendingQuotations",
                "getCountByStatus",
                "exists"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 60,
            "size_bytes": 1463
        },
        {
            "file_path": "app/Contracts/Repositories/ReferenceUserRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReferenceUserRepositoryInterface extends BaseRepositoryInterface",
                    "ReferenceUserRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 17,
            "size_bytes": 508
        },
        {
            "file_path": "app/Contracts/Repositories/RelationshipManagerRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface RelationshipManagerRepositoryInterface extends BaseRepositoryInterface",
                    "RelationshipManagerRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 17,
            "size_bytes": 538
        },
        {
            "file_path": "app/Contracts/Repositories/RoleRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface RoleRepositoryInterface extends BaseRepositoryInterface",
                    "RoleRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "getRolesWithFilters",
                "getRoleWithPermissions",
                "getRolesWithPermissionsCount",
                "searchRoles",
                "getRolesByGuard",
                "getRoleStatistics",
                "getRolesByModel"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role"
            ],
            "line_count": 74,
            "size_bytes": 1903
        },
        {
            "file_path": "app/Contracts/Repositories/UserRepositoryInterface.php",
            "namespace": "App\\Contracts\\Repositories",
            "file_type": "interface",
            "classes": [
                [
                    "interface UserRepositoryInterface extends BaseRepositoryInterface",
                    "UserRepositoryInterface",
                    "BaseRepositoryInterface"
                ]
            ],
            "methods": [
                "findWithRoles",
                "updatePassword"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\User"
            ],
            "line_count": 24,
            "size_bytes": 568
        },
        {
            "file_path": "app/Contracts/Services/AddonCoverServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface AddonCoverServiceInterface",
                    "AddonCoverServiceInterface"
                ]
            ],
            "methods": [
                "getAddonCovers",
                "createAddonCover",
                "updateAddonCover",
                "deleteAddonCover",
                "updateStatus",
                "exportAddonCovers",
                "getActiveAddonCovers",
                "getStoreValidationRules",
                "getUpdateValidationRules"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\AddonCover",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 28,
            "size_bytes": 942
        },
        {
            "file_path": "app/Contracts/Services/BranchServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface BranchServiceInterface",
                    "BranchServiceInterface"
                ]
            ],
            "methods": [
                "getBranches",
                "createBranch",
                "updateBranch",
                "deleteBranch",
                "updateBranchStatus",
                "getActiveBranches",
                "getBranchWithInsurancesCount",
                "searchBranches",
                "getBranchStatistics",
                "getAllBranchesForExport"
            ],
            "method_count": 10,
            "uses": [
                "App\\Models\\Branch",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 98,
            "size_bytes": 2305
        },
        {
            "file_path": "app/Contracts/Services/BrokerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface BrokerServiceInterface",
                    "BrokerServiceInterface"
                ]
            ],
            "methods": [
                "getBrokers",
                "createBroker",
                "updateBroker",
                "deleteBroker",
                "updateStatus",
                "exportBrokers",
                "getActiveBrokers"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\Broker",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 24,
            "size_bytes": 737
        },
        {
            "file_path": "app/Contracts/Services/ClaimServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ClaimServiceInterface",
                    "ClaimServiceInterface"
                ]
            ],
            "methods": [
                "getClaims",
                "createClaim",
                "updateClaim",
                "updateClaimStatus",
                "deleteClaim",
                "searchPolicies",
                "getClaimStatistics"
            ],
            "method_count": 7,
            "uses": [
                "App\\Http\\Requests\\StoreClaimRequest",
                "App\\Http\\Requests\\UpdateClaimRequest",
                "App\\Models\\Claim",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 75,
            "size_bytes": 1883
        },
        {
            "file_path": "app/Contracts/Services/CustomerInsuranceServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerInsuranceServiceInterface",
                    "CustomerInsuranceServiceInterface"
                ]
            ],
            "methods": [
                "getCustomerInsurances",
                "getFormData",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getRenewalValidationRules",
                "prepareStorageData",
                "createCustomerInsurance",
                "updateCustomerInsurance",
                "deleteCustomerInsurance",
                "updateStatus",
                "renewPolicy",
                "handleFileUpload",
                "sendWhatsAppDocument",
                "sendRenewalReminderWhatsApp",
                "exportCustomerInsurances",
                "getCustomerPolicies",
                "getExpiringPolicies",
                "calculateCommissionBreakdown"
            ],
            "method_count": 18,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection"
            ],
            "line_count": 101,
            "size_bytes": 3003
        },
        {
            "file_path": "app/Contracts/Services/CustomerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerServiceInterface",
                    "CustomerServiceInterface"
                ]
            ],
            "methods": [
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "handleCustomerDocuments",
                "sendOnboardingMessage",
                "getActiveCustomersForSelection"
            ],
            "method_count": 8,
            "uses": [
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "App\\Models\\Customer",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 52,
            "size_bytes": 1559
        },
        {
            "file_path": "app/Contracts/Services/FamilyGroupServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface FamilyGroupServiceInterface",
                    "FamilyGroupServiceInterface"
                ]
            ],
            "methods": [
                "getFamilyGroups",
                "getFamilyGroupWithMembers",
                "createFamilyGroup",
                "updateFamilyGroup",
                "deleteFamilyGroup",
                "updateFamilyGroupStatus",
                "addFamilyMember",
                "removeFamilyMember",
                "removeFamilyMemberByObject",
                "updateFamilyMember",
                "changeFamilyHead",
                "setupMemberPasswords",
                "sendPasswordNotifications",
                "getAvailableCustomers",
                "cleanupOrphanedRecords",
                "getFamilyGroupStatistics",
                "getAllFamilyGroupsForExport"
            ],
            "method_count": 17,
            "uses": [
                "App\\Models\\FamilyGroup",
                "App\\Models\\FamilyMember",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 158,
            "size_bytes": 4366
        },
        {
            "file_path": "app/Contracts/Services/FuelTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface FuelTypeServiceInterface",
                    "FuelTypeServiceInterface"
                ]
            ],
            "methods": [
                "createFuelType",
                "updateFuelType",
                "deleteFuelType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\FuelType"
            ],
            "line_count": 46,
            "size_bytes": 997
        },
        {
            "file_path": "app/Contracts/Services/InsuranceCompanyServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface InsuranceCompanyServiceInterface",
                    "InsuranceCompanyServiceInterface"
                ]
            ],
            "methods": [
                "getInsuranceCompanies",
                "createInsuranceCompany",
                "updateInsuranceCompany",
                "deleteInsuranceCompany",
                "updateStatus",
                "exportInsuranceCompanies",
                "getActiveInsuranceCompanies"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\InsuranceCompany",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 24,
            "size_bytes": 890
        },
        {
            "file_path": "app/Contracts/Services/MarketingWhatsAppServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface MarketingWhatsAppServiceInterface",
                    "MarketingWhatsAppServiceInterface"
                ]
            ],
            "methods": [
                "getActiveCustomers",
                "getValidCustomersForMarketing",
                "sendMarketingCampaign",
                "previewCustomerList",
                "sendTextMessage",
                "sendImageMessage",
                "getMarketingStatistics",
                "logMarketingAttempt"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 87,
            "size_bytes": 2475
        },
        {
            "file_path": "app/Contracts/Services/PermissionServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PermissionServiceInterface",
                    "PermissionServiceInterface"
                ]
            ],
            "methods": [
                "getPermissions",
                "createPermission",
                "updatePermission",
                "deletePermission",
                "getAllPermissions",
                "getPermissionsByRole",
                "searchPermissions",
                "getPermissionStatistics",
                "syncRolePermissions",
                "getPermissionsGroupedByModule"
            ],
            "method_count": 10,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Permission"
            ],
            "line_count": 98,
            "size_bytes": 2417
        },
        {
            "file_path": "app/Contracts/Services/PolicyServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyServiceInterface",
                    "PolicyServiceInterface"
                ]
            ],
            "methods": [
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "getCustomerPolicies",
                "getPoliciesDueForRenewal",
                "sendRenewalReminder",
                "getFamilyPolicies",
                "canCustomerViewPolicy",
                "getPolicyStatistics"
            ],
            "method_count": 9,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 56,
            "size_bytes": 1608
        },
        {
            "file_path": "app/Contracts/Services/PolicyTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyTypeServiceInterface",
                    "PolicyTypeServiceInterface"
                ]
            ],
            "methods": [
                "createPolicyType",
                "updatePolicyType",
                "deletePolicyType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\PolicyType"
            ],
            "line_count": 46,
            "size_bytes": 1039
        },
        {
            "file_path": "app/Contracts/Services/PremiumTypeServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface PremiumTypeServiceInterface",
                    "PremiumTypeServiceInterface"
                ]
            ],
            "methods": [
                "createPremiumType",
                "updatePremiumType",
                "deletePremiumType",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\PremiumType"
            ],
            "line_count": 46,
            "size_bytes": 1060
        },
        {
            "file_path": "app/Contracts/Services/QuotationServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationServiceInterface",
                    "QuotationServiceInterface"
                ]
            ],
            "methods": [
                "getQuotations",
                "createQuotation",
                "updateQuotationWithCompanies",
                "generateCompanyQuotes",
                "generateQuotesForSelectedCompanies",
                "sendQuotationViaWhatsApp",
                "generatePdf",
                "deleteQuotation",
                "calculatePremium",
                "getQuotationFormData"
            ],
            "method_count": 10,
            "uses": [
                "App\\Http\\Requests\\CreateQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "App\\Models\\Quotation",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 62,
            "size_bytes": 1695
        },
        {
            "file_path": "app/Contracts/Services/ReferenceUserServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReferenceUserServiceInterface",
                    "ReferenceUserServiceInterface"
                ]
            ],
            "methods": [
                "createReferenceUser",
                "updateReferenceUser",
                "deleteReferenceUser",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\ReferenceUser"
            ],
            "line_count": 46,
            "size_bytes": 1102
        },
        {
            "file_path": "app/Contracts/Services/RelationshipManagerServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface RelationshipManagerServiceInterface",
                    "RelationshipManagerServiceInterface"
                ]
            ],
            "methods": [
                "createRelationshipManager",
                "updateRelationshipManager",
                "deleteRelationshipManager",
                "updateStatus"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\RelationshipManager"
            ],
            "line_count": 46,
            "size_bytes": 1228
        },
        {
            "file_path": "app/Contracts/Services/ReportServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface ReportServiceInterface",
                    "ReportServiceInterface"
                ]
            ],
            "methods": [
                "getInitialData",
                "generateCrossSellingReport",
                "generateCustomerInsuranceReport",
                "exportCrossSellingReport",
                "exportCustomerInsuranceReport",
                "saveUserReportColumns",
                "loadUserReportColumns"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Http\\Request",
                "Symfony\\Component\\HttpFoundation\\BinaryFileResponse"
            ],
            "line_count": 44,
            "size_bytes": 1235
        },
        {
            "file_path": "app/Contracts/Services/RoleServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface RoleServiceInterface",
                    "RoleServiceInterface"
                ]
            ],
            "methods": [
                "getRoles",
                "createRole",
                "updateRole",
                "deleteRole",
                "getAllRoles",
                "getRolesByUser",
                "searchRoles",
                "getRoleStatistics",
                "assignPermissionsToRole",
                "removePermissionsFromRole",
                "assignRoleToUser",
                "removeRoleFromUser",
                "getRoleWithPermissions",
                "getUsersCountByRole"
            ],
            "method_count": 14,
            "uses": [
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request",
                "Illuminate\\Pagination\\LengthAwarePaginator",
                "Spatie\\Permission\\Models\\Role"
            ],
            "line_count": 134,
            "size_bytes": 3077
        },
        {
            "file_path": "app/Contracts/Services/UserServiceInterface.php",
            "namespace": "App\\Contracts\\Services",
            "file_type": "interface",
            "classes": [
                [
                    "interface UserServiceInterface",
                    "UserServiceInterface"
                ]
            ],
            "methods": [
                "getUsers",
                "createUser",
                "updateUser",
                "deleteUser",
                "updateStatus",
                "assignRoles",
                "exportUsers",
                "getActiveUsers",
                "changePassword",
                "getUserWithRoles",
                "getStoreValidationRules",
                "getUpdateValidationRules",
                "getPasswordValidationRules",
                "getRoles"
            ],
            "method_count": 14,
            "uses": [
                "App\\Models\\User",
                "Illuminate\\Http\\Request",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator"
            ],
            "line_count": 38,
            "size_bytes": 1204
        },
        {
            "file_path": "app/Events/Audit/CustomerActionLogged.php",
            "namespace": "App\\Events\\Audit",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerActionLogged",
                    "CustomerActionLogged"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isSecurityRelevant",
                "isHighRisk",
                "shouldAlertSecurity",
                "shouldQueue",
                "getQueueName"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 86,
            "size_bytes": 2764
        },
        {
            "file_path": "app/Events/Customer/CustomerEmailVerified.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerEmailVerified",
                    "CustomerEmailVerified"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "shouldQueue"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 40,
            "size_bytes": 1118
        },
        {
            "file_path": "app/Events/Customer/CustomerProfileUpdated.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerProfileUpdated",
                    "CustomerProfileUpdated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "hasSignificantChanges",
                "shouldQueue"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 49,
            "size_bytes": 1480
        },
        {
            "file_path": "app/Events/Customer/CustomerRegistered.php",
            "namespace": "App\\Events\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerRegistered",
                    "CustomerRegistered"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "shouldQueue"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 42,
            "size_bytes": 1217
        },
        {
            "file_path": "app/Events/CustomerCreated.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerCreated",
                    "CustomerCreated"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 17,
            "size_bytes": 372
        },
        {
            "file_path": "app/Events/Document/PDFGenerationRequested.php",
            "namespace": "App\\Events\\Document",
            "file_type": "class",
            "classes": [
                [
                    "class PDFGenerationRequested",
                    "PDFGenerationRequested"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isQuotation",
                "isPolicy",
                "isHighPriority",
                "getExpectedFilePath",
                "shouldQueue",
                "getQueueName"
            ],
            "method_count": 8,
            "uses": [
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 102,
            "size_bytes": 3058
        },
        {
            "file_path": "app/Events/Insurance/PolicyCreated.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyCreated",
                    "PolicyCreated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValuePolicy",
                "isPremiumPolicy",
                "getDaysToExpiry",
                "shouldQueue"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 72,
            "size_bytes": 2314
        },
        {
            "file_path": "app/Events/Insurance/PolicyExpiringWarning.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyExpiringWarning",
                    "PolicyExpiringWarning"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isUrgent",
                "isHighValue",
                "shouldSendWhatsApp",
                "shouldSendEmail",
                "shouldQueue"
            ],
            "method_count": 7,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 76,
            "size_bytes": 2431
        },
        {
            "file_path": "app/Events/Insurance/PolicyRenewed.php",
            "namespace": "App\\Events\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyRenewed",
                    "PolicyRenewed"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isPremiumIncrease",
                "getCoverageIncrease",
                "getDaysBeforeExpiry",
                "shouldQueue"
            ],
            "method_count": 6,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 80,
            "size_bytes": 2755
        },
        {
            "file_path": "app/Events/PolicyExpiring.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyExpiring",
                    "PolicyExpiring"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 18,
            "size_bytes": 422
        },
        {
            "file_path": "app/Events/Quotation/QuotationGenerated.php",
            "namespace": "App\\Events\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationGenerated",
                    "QuotationGenerated"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValueQuotation",
                "hasMultipleOptions",
                "shouldQueue"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 67,
            "size_bytes": 2243
        },
        {
            "file_path": "app/Events/Quotation/QuotationRequested.php",
            "namespace": "App\\Events\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationRequested",
                    "QuotationRequested"
                ]
            ],
            "methods": [
                "__construct",
                "getEventData",
                "isHighValue",
                "shouldQueue"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\PolicyType",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 61,
            "size_bytes": 1913
        },
        {
            "file_path": "app/Events/QuotationGenerated.php",
            "namespace": "App\\Events",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationGenerated",
                    "QuotationGenerated"
                ]
            ],
            "methods": [
                "__construct"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Quotation",
                "Illuminate\\Broadcasting\\InteractsWithSockets",
                "Illuminate\\Foundation\\Events\\Dispatchable",
                "Illuminate\\Queue\\SerializesModels",
                "Dispatchable, InteractsWithSockets, SerializesModels"
            ],
            "line_count": 17,
            "size_bytes": 378
        },
        {
            "file_path": "app/Exceptions/Handler.php",
            "namespace": "App\\Exceptions",
            "file_type": "class",
            "classes": [
                [
                    "class Handler extends ExceptionHandler",
                    "Handler",
                    "ExceptionHandler"
                ]
            ],
            "methods": [
                "register",
                "render"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Auth\\Access\\AuthorizationException",
                "Illuminate\\Database\\QueryException",
                "Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response",
                "Throwable"
            ],
            "line_count": 56,
            "size_bytes": 1267
        },
        {
            "file_path": "app/Exports/AddonCoversExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class AddonCoversExport implements FromCollection\r\n",
                    "AddonCoversExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\AddonCover",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 17,
            "size_bytes": 316
        },
        {
            "file_path": "app/Exports/BranchesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class BranchesExport implements FromCollection, WithHeadings, WithMapping\r\n",
                    "BranchesExport",
                    "",
                    "FromCollection, WithHeadings, WithMapping\r\n"
                ]
            ],
            "methods": [
                "collection",
                "headings",
                "map"
            ],
            "method_count": 3,
            "uses": [
                "App\\Models\\Branch",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMapping"
            ],
            "line_count": 40,
            "size_bytes": 1007
        },
        {
            "file_path": "app/Exports/BrokersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class BrokersExport implements FromCollection\r\n",
                    "BrokersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Broker",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 306
        },
        {
            "file_path": "app/Exports/ClaimsExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class ClaimsExport implements FromQuery, WithHeadings, WithMapping, WithStyles, ShouldAutoSize\r\n",
                    "ClaimsExport",
                    "",
                    "FromQuery, WithHeadings, WithMapping, WithStyles, ShouldAutoSize\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "query",
                "headings",
                "map",
                "styles"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Database\\Eloquent\\Builder",
                "Maatwebsite\\Excel\\Concerns\\FromQuery",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMapping",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "($search) {\r\n                $q->where('claim_number', 'like', \"%{$search}%\")\r\n                  ->orWhere('description', 'like', \"%{$search}%\")\r\n                  ->orWhereHas('customer', function (Builder $customerQuery) use ($search) {\r\n                      $customerQuery->where('name', 'like', \"%{$search}%\")\r\n                                   ->orWhere('email', 'like', \"%{$search}%\")\r\n                                   ->orWhere('mobile_number', 'like', \"%{$search}%\")",
                "($search) {\r\n                      $insuranceQuery->where('policy_no', 'like', \"%{$search}%\")\r\n                                    ->orWhere('registration_no', 'like', \"%{$search}%\")"
            ],
            "line_count": 134,
            "size_bytes": 4702
        },
        {
            "file_path": "app/Exports/CrossSellingExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CrossSellingExport implements WithMultipleSheets\r\n",
                    "CrossSellingExport",
                    "",
                    "WithMultipleSheets\r\n"
                ],
                [
                    "class CrossSellingSummarySheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "CrossSellingSummarySheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ],
                [
                    "class CrossSellingDataSheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "CrossSellingDataSheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "sheets",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\PremiumType",
                "Illuminate\\Support\\Carbon",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithMultipleSheets",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "Maatwebsite\\Excel\\Concerns\\WithEvents",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "PhpOffice\\PhpSpreadsheet\\Style\\Fill",
                "PhpOffice\\PhpSpreadsheet\\Style\\Border",
                "PhpOffice\\PhpSpreadsheet\\Style\\Alignment",
                "($premiumType) {\r\n                return $customer->insurance->contains('premium_type_id', $premiumType->id)",
                "($premiumType) {\r\n                return $customer->insurance->where('premium_type_id', $premiumType->id)->sum('final_premium_with_gst')",
                "($premiumTypes, $oneYearAgo, $hasDateFilter) {\r\n            $customerData = ['customer_name' => $customer->name]",
                "($premiumType) {\r\n                    return $insurance->premiumType->id === $premiumType->id"
            ],
            "line_count": 325,
            "size_bytes": 13581
        },
        {
            "file_path": "app/Exports/CustomerInsurancesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsurancesExport implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles\r\n",
                    "CustomerInsurancesExport",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles\r\n"
                ]
            ],
            "methods": [
                "collection",
                "headings",
                "styles",
                "applyFilter",
                "registerEvents"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet"
            ],
            "line_count": 173,
            "size_bytes": 6455
        },
        {
            "file_path": "app/Exports/CustomerInsurancesExport1.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsurancesExport1 implements WithMultipleSheets\r\n",
                    "CustomerInsurancesExport1",
                    "",
                    "WithMultipleSheets\r\n"
                ],
                [
                    "class InsuranceSummarySheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "InsuranceSummarySheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ],
                [
                    "class InsuranceDataSheet implements FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n",
                    "InsuranceDataSheet",
                    "",
                    "FromCollection, WithHeadings, ShouldAutoSize, WithStyles, WithEvents\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "sheets",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents",
                "__construct",
                "collection",
                "headings",
                "styles",
                "registerEvents"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "App\\Models\\Report",
                "Carbon\\Carbon",
                "Maatwebsite\\Excel\\Events\\AfterSheet",
                "Maatwebsite\\Excel\\Concerns\\WithStyles",
                "Maatwebsite\\Excel\\Concerns\\WithHeadings",
                "Maatwebsite\\Excel\\Concerns\\FromCollection",
                "Maatwebsite\\Excel\\Concerns\\ShouldAutoSize",
                "Maatwebsite\\Excel\\Concerns\\WithMultipleSheets",
                "Maatwebsite\\Excel\\Concerns\\WithEvents",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\PageSetup",
                "PhpOffice\\PhpSpreadsheet\\Worksheet\\Worksheet",
                "PhpOffice\\PhpSpreadsheet\\Style\\Fill",
                "PhpOffice\\PhpSpreadsheet\\Style\\Border",
                "PhpOffice\\PhpSpreadsheet\\Style\\Alignment"
            ],
            "line_count": 301,
            "size_bytes": 12776
        },
        {
            "file_path": "app/Exports/CustomersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class CustomersExport implements FromCollection\r\n",
                    "CustomersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\Customer",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 312
        },
        {
            "file_path": "app/Exports/FuelTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class FuelTypesExport implements FromCollection\r\n",
                    "FuelTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\FuelType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 312
        },
        {
            "file_path": "app/Exports/InsuranceCompanyExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class InsuranceCompanyExport implements FromCollection\r\n",
                    "InsuranceCompanyExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\InsuranceCompany",
                "App\\Models\\RelationshipManager",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 19,
            "size_bytes": 372
        },
        {
            "file_path": "app/Exports/PolicyTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class PolicyTypesExport implements FromCollection\r\n",
                    "PolicyTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\PolicyType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 318
        },
        {
            "file_path": "app/Exports/PremiumTypesExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class PremiumTypesExport implements FromCollection\r\n",
                    "PremiumTypesExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\PremiumType",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 321
        },
        {
            "file_path": "app/Exports/ReferenceUsersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class ReferenceUsersExport implements FromCollection\r\n",
                    "ReferenceUsersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\ReferenceUser",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 327
        },
        {
            "file_path": "app/Exports/RelationshipManagersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class RelationshipManagersExport implements FromCollection\r\n",
                    "RelationshipManagersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\RelationshipManager",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 345
        },
        {
            "file_path": "app/Exports/UsersExport.php",
            "namespace": "App\\Exports",
            "file_type": "class",
            "classes": [
                [
                    "class UsersExport implements FromCollection\r\n",
                    "UsersExport",
                    "",
                    "FromCollection\r\n"
                ]
            ],
            "methods": [
                "collection"
            ],
            "method_count": 1,
            "uses": [
                "App\\Models\\User",
                "Maatwebsite\\Excel\\Concerns\\FromCollection"
            ],
            "line_count": 18,
            "size_bytes": 300
        },
        {
            "file_path": "app/Helpers/DateHelper.php",
            "namespace": "App\\Helpers",
            "file_type": "class",
            "classes": [
                [
                    "class DateHelper",
                    "DateHelper"
                ]
            ],
            "methods": [
                "toUiFormat",
                "toDatabaseFormat",
                "toUiDateTimeFormat",
                "currentUiDate",
                "currentDatabaseDate",
                "isValidUiFormat",
                "isValidDatabaseFormat"
            ],
            "method_count": 7,
            "uses": [
                "Carbon\\Carbon",
                "InvalidArgumentException"
            ],
            "line_count": 128,
            "size_bytes": 3619
        },
        {
            "file_path": "app/helpers.php",
            "namespace": "",
            "file_type": "unknown",
            "classes": [],
            "methods": [],
            "method_count": 0,
            "uses": [],
            "line_count": 64,
            "size_bytes": 1534
        },
        {
            "file_path": "app/Http/Kernel.php",
            "namespace": "App\\Http",
            "file_type": "class",
            "classes": [
                [
                    "class Kernel extends HttpKernel",
                    "Kernel",
                    "HttpKernel"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Kernel as HttpKernel"
            ],
            "line_count": 77,
            "size_bytes": 3286
        },
        {
            "file_path": "app/Http/Middleware/Authenticate.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class Authenticate extends Middleware",
                    "Authenticate",
                    "Middleware"
                ]
            ],
            "methods": [
                "redirectTo"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Auth\\Middleware\\Authenticate as Middleware"
            ],
            "line_count": 27,
            "size_bytes": 665
        },
        {
            "file_path": "app/Http/Middleware/CustomerAuth.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerAuth",
                    "CustomerAuth"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 49,
            "size_bytes": 1746
        },
        {
            "file_path": "app/Http/Middleware/CustomerSessionTimeout.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerSessionTimeout",
                    "CustomerSessionTimeout"
                ]
            ],
            "methods": [
                "handle",
                "shouldSkipTimeoutCheck"
            ],
            "method_count": 2,
            "uses": [
                "App\\Models\\CustomerAuditLog",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 190,
            "size_bytes": 7671
        },
        {
            "file_path": "app/Http/Middleware/EncryptCookies.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class EncryptCookies extends Middleware",
                    "EncryptCookies",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Cookie\\Middleware\\EncryptCookies as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 324
        },
        {
            "file_path": "app/Http/Middleware/PreventRequestsDuringMaintenance.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class PreventRequestsDuringMaintenance extends Middleware",
                    "PreventRequestsDuringMaintenance",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 383
        },
        {
            "file_path": "app/Http/Middleware/RedirectIfAuthenticated.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class RedirectIfAuthenticated",
                    "RedirectIfAuthenticated"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Providers\\RouteServiceProvider",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth"
            ],
            "line_count": 38,
            "size_bytes": 1149
        },
        {
            "file_path": "app/Http/Middleware/SecureSession.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class SecureSession",
                    "SecureSession"
                ]
            ],
            "methods": [
                "handle",
                "enforceSecureSession",
                "checkSessionTimeout",
                "validateSessionIntegrity",
                "setSecureHeaders",
                "updateLastActivity"
            ],
            "method_count": 6,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 153,
            "size_bytes": 5408
        },
        {
            "file_path": "app/Http/Middleware/SecurityHeadersMiddleware.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class SecurityHeadersMiddleware",
                    "SecurityHeadersMiddleware"
                ]
            ],
            "methods": [
                "__construct",
                "handle",
                "shouldSkipSecurityHeaders"
            ],
            "method_count": 3,
            "uses": [
                "App\\Services\\ContentSecurityPolicyService",
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\View",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 77,
            "size_bytes": 2358
        },
        {
            "file_path": "app/Http/Middleware/TrimStrings.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrimStrings extends Middleware",
                    "TrimStrings",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings as Middleware"
            ],
            "line_count": 20,
            "size_bytes": 400
        },
        {
            "file_path": "app/Http/Middleware/TrustHosts.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrustHosts extends Middleware",
                    "TrustHosts",
                    "Middleware"
                ]
            ],
            "methods": [
                "hosts"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Middleware\\TrustHosts as Middleware"
            ],
            "line_count": 21,
            "size_bytes": 392
        },
        {
            "file_path": "app/Http/Middleware/TrustProxies.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class TrustProxies extends Middleware",
                    "TrustProxies",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Http\\Middleware\\TrustProxies as Middleware",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 29,
            "size_bytes": 677
        },
        {
            "file_path": "app/Http/Middleware/VerifyCsrfToken.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class VerifyCsrfToken extends Middleware",
                    "VerifyCsrfToken",
                    "Middleware"
                ]
            ],
            "methods": [],
            "method_count": 0,
            "uses": [
                "Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken as Middleware"
            ],
            "line_count": 18,
            "size_bytes": 337
        },
        {
            "file_path": "app/Http/Middleware/VerifyFamilyAccess.php",
            "namespace": "App\\Http\\Middleware",
            "file_type": "class",
            "classes": [
                [
                    "class VerifyFamilyAccess",
                    "VerifyFamilyAccess"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "Closure",
                "Illuminate\\Http\\Request",
                "Illuminate\\Support\\Facades\\Auth",
                "Illuminate\\Support\\Facades\\Log",
                "Symfony\\Component\\HttpFoundation\\Response"
            ],
            "line_count": 84,
            "size_bytes": 3478
        },
        {
            "file_path": "app/Http/Requests/CreateQuotationRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class CreateQuotationRequest extends FormRequest",
                    "CreateQuotationRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 113,
            "size_bytes": 6331
        },
        {
            "file_path": "app/Http/Requests/StoreBrokerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreBrokerRequest extends FormRequest",
                    "StoreBrokerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 44,
            "size_bytes": 1309
        },
        {
            "file_path": "app/Http/Requests/StoreClaimRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreClaimRequest extends FormRequest",
                    "StoreClaimRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages",
                "attributes"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 94,
            "size_bytes": 3274
        },
        {
            "file_path": "app/Http/Requests/StoreCustomerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class StoreCustomerRequest extends FormRequest",
                    "StoreCustomerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 96,
            "size_bytes": 3845
        },
        {
            "file_path": "app/Http/Requests/UpdateBrokerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateBrokerRequest extends FormRequest",
                    "UpdateBrokerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 44,
            "size_bytes": 1310
        },
        {
            "file_path": "app/Http/Requests/UpdateClaimRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateClaimRequest extends FormRequest",
                    "UpdateClaimRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages",
                "attributes"
            ],
            "method_count": 5,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 94,
            "size_bytes": 3275
        },
        {
            "file_path": "app/Http/Requests/UpdateCustomerRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateCustomerRequest extends FormRequest",
                    "UpdateCustomerRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "prepareForValidation",
                "rules",
                "messages"
            ],
            "method_count": 4,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 98,
            "size_bytes": 3925
        },
        {
            "file_path": "app/Http/Requests/UpdateQuotationRequest.php",
            "namespace": "App\\Http\\Requests",
            "file_type": "class",
            "classes": [
                [
                    "class UpdateQuotationRequest extends FormRequest",
                    "UpdateQuotationRequest",
                    "FormRequest"
                ]
            ],
            "methods": [
                "authorize",
                "rules",
                "messages"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Foundation\\Http\\FormRequest"
            ],
            "line_count": 130,
            "size_bytes": 7282
        },
        {
            "file_path": "app/Http/Resources/BrokerResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class BrokerResource extends JsonResource",
                    "BrokerResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 44,
            "size_bytes": 1897
        },
        {
            "file_path": "app/Http/Resources/CustomerInsuranceResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerInsuranceResource extends JsonResource",
                    "CustomerInsuranceResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 101,
            "size_bytes": 4705
        },
        {
            "file_path": "app/Http/Resources/CustomerResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerResource extends JsonResource",
                    "CustomerResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 29,
            "size_bytes": 1087
        },
        {
            "file_path": "app/Http/Resources/InsuranceCompanyResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class InsuranceCompanyResource extends JsonResource",
                    "InsuranceCompanyResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 39,
            "size_bytes": 1488
        },
        {
            "file_path": "app/Http/Resources/QuotationCompanyResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationCompanyResource extends JsonResource",
                    "QuotationCompanyResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 43,
            "size_bytes": 1870
        },
        {
            "file_path": "app/Http/Resources/QuotationResource.php",
            "namespace": "App\\Http\\Resources",
            "file_type": "class",
            "classes": [
                [
                    "class QuotationResource extends JsonResource",
                    "QuotationResource",
                    "JsonResource"
                ]
            ],
            "methods": [
                "toArray"
            ],
            "method_count": 1,
            "uses": [
                "Illuminate\\Http\\Request",
                "Illuminate\\Http\\Resources\\Json\\JsonResource"
            ],
            "line_count": 66,
            "size_bytes": 2625
        },
        {
            "file_path": "app/Listeners/Customer/CreateCustomerAuditLog.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class CreateCustomerAuditLog implements ShouldQueue\r\n",
                    "CreateCustomerAuditLog",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "prepareAuditData",
                "failed"
            ],
            "method_count": 3,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Customer\\CustomerProfileUpdated",
                "App\\Events\\Customer\\CustomerEmailVerified",
                "App\\Events\\Quotation\\QuotationRequested",
                "App\\Models\\CustomerAuditLog",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 115,
            "size_bytes": 4587
        },
        {
            "file_path": "app/Listeners/Customer/NotifyAdminOfRegistration.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class NotifyAdminOfRegistration implements ShouldQueue\r\n",
                    "NotifyAdminOfRegistration",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Communication\\EmailQueued",
                "App\\Models\\User",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 55,
            "size_bytes": 1980
        },
        {
            "file_path": "app/Listeners/Customer/SendWelcomeEmail.php",
            "namespace": "App\\Listeners\\Customer",
            "file_type": "class",
            "classes": [
                [
                    "class SendWelcomeEmail implements ShouldQueue\r\n",
                    "SendWelcomeEmail",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Customer\\CustomerRegistered",
                "App\\Events\\Communication\\EmailQueued",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 50,
            "size_bytes": 1655
        },
        {
            "file_path": "app/Listeners/Insurance/SendPolicyRenewalReminder.php",
            "namespace": "App\\Listeners\\Insurance",
            "file_type": "class",
            "classes": [
                [
                    "class SendPolicyRenewalReminder implements ShouldQueue\r\n",
                    "SendPolicyRenewalReminder",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "sendEmailReminder",
                "sendWhatsAppReminder",
                "getEmailSubject",
                "getEmailMessage",
                "getWhatsAppMessage",
                "failed"
            ],
            "method_count": 7,
            "uses": [
                "Illuminate\\Support\\Facades\\Mail",
                "App\\Events\\Insurance\\PolicyExpiringWarning",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue",
                "($customer, $subject) {\r\n                $mail->to($customer->email)\r\n                     ->subject($subject)"
            ],
            "line_count": 116,
            "size_bytes": 4460
        },
        {
            "file_path": "app/Listeners/Quotation/GenerateQuotationPDF.php",
            "namespace": "App\\Listeners\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class GenerateQuotationPDF implements ShouldQueue\r\n",
                    "GenerateQuotationPDF",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "failed"
            ],
            "method_count": 2,
            "uses": [
                "App\\Events\\Document\\PDFGenerationRequested",
                "App\\Events\\Quotation\\QuotationGenerated",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 55,
            "size_bytes": 1855
        },
        {
            "file_path": "app/Listeners/Quotation/SendQuotationWhatsApp.php",
            "namespace": "App\\Listeners\\Quotation",
            "file_type": "class",
            "classes": [
                [
                    "class SendQuotationWhatsApp implements ShouldQueue\r\n",
                    "SendQuotationWhatsApp",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle",
                "prepareWhatsAppMessage",
                "failed"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Support\\Facades\\Mail",
                "App\\Events\\Quotation\\QuotationGenerated",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Queue\\InteractsWithQueue",
                "InteractsWithQueue"
            ],
            "line_count": 61,
            "size_bytes": 2291
        },
        {
            "file_path": "app/Listeners/SendPolicyReminderNotification.php",
            "namespace": "App\\Listeners",
            "file_type": "class",
            "classes": [
                [
                    "class SendPolicyReminderNotification implements ShouldQueue\r\n",
                    "SendPolicyReminderNotification",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Events\\PolicyExpiring",
                "App\\Mail\\PolicyExpiryReminderMail",
                "App\\Traits\\WhatsAppApiTrait",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Support\\Facades\\Mail",
                "WhatsAppApiTrait"
            ],
            "line_count": 31,
            "size_bytes": 1009
        },
        {
            "file_path": "app/Listeners/SendWelcomeEmail.php",
            "namespace": "App\\Listeners",
            "file_type": "class",
            "classes": [
                [
                    "class SendWelcomeEmail implements ShouldQueue\r\n",
                    "SendWelcomeEmail",
                    "",
                    "ShouldQueue\r\n"
                ]
            ],
            "methods": [
                "handle"
            ],
            "method_count": 1,
            "uses": [
                "App\\Events\\CustomerCreated",
                "App\\Mail\\CustomerWelcomeMail",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Support\\Facades\\Mail"
            ],
            "line_count": 18,
            "size_bytes": 461
        },
        {
            "file_path": "app/Logging/BusinessLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class BusinessLogFormatter extends JsonFormatter",
                    "BusinessLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 46,
            "size_bytes": 1783
        },
        {
            "file_path": "app/Logging/ErrorLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class ErrorLogFormatter extends JsonFormatter",
                    "ErrorLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 50,
            "size_bytes": 1779
        },
        {
            "file_path": "app/Logging/PerformanceLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class PerformanceLogFormatter extends JsonFormatter",
                    "PerformanceLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 40,
            "size_bytes": 1228
        },
        {
            "file_path": "app/Logging/SecurityLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class SecurityLogFormatter extends JsonFormatter",
                    "SecurityLogFormatter",
                    "JsonFormatter"
                ]
            ],
            "methods": [
                "format",
                "__invoke"
            ],
            "method_count": 2,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger",
                "Monolog\\LogRecord"
            ],
            "line_count": 45,
            "size_bytes": 1663
        },
        {
            "file_path": "app/Logging/StructuredLogFormatter.php",
            "namespace": "App\\Logging",
            "file_type": "class",
            "classes": [
                [
                    "class StructuredLogFormatter",
                    "StructuredLogFormatter"
                ]
            ],
            "methods": [
                "__invoke"
            ],
            "method_count": 1,
            "uses": [
                "Monolog\\Formatter\\JsonFormatter",
                "Monolog\\Logger"
            ],
            "line_count": 19,
            "size_bytes": 424
        },
        {
            "file_path": "app/Mail/ClaimNotificationMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class ClaimNotificationMail extends Mailable implements ShouldQueue\n",
                    "ClaimNotificationMail",
                    "Mailable",
                    "ShouldQueue\n"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments",
                "getSubject"
            ],
            "method_count": 5,
            "uses": [
                "App\\Models\\Claim",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 91,
            "size_bytes": 2516
        },
        {
            "file_path": "app/Mail/CustomerEmailVerificationMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerEmailVerificationMail extends Mailable",
                    "CustomerEmailVerificationMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 68,
            "size_bytes": 1629
        },
        {
            "file_path": "app/Mail/CustomerPasswordResetMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerPasswordResetMail extends Mailable",
                    "CustomerPasswordResetMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 68,
            "size_bytes": 1658
        },
        {
            "file_path": "app/Mail/FamilyLoginCredentialsMail.php",
            "namespace": "App\\Mail",
            "file_type": "class",
            "classes": [
                [
                    "class FamilyLoginCredentialsMail extends Mailable",
                    "FamilyLoginCredentialsMail",
                    "Mailable"
                ]
            ],
            "methods": [
                "__construct",
                "envelope",
                "content",
                "attachments"
            ],
            "method_count": 4,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\FamilyGroup",
                "Illuminate\\Bus\\Queueable",
                "Illuminate\\Contracts\\Queue\\ShouldQueue",
                "Illuminate\\Mail\\Mailable",
                "Illuminate\\Mail\\Mailables\\Content",
                "Illuminate\\Mail\\Mailables\\Envelope",
                "Illuminate\\Queue\\SerializesModels",
                "Queueable, SerializesModels"
            ],
            "line_count": 78,
            "size_bytes": 2066
        },
        {
            "file_path": "app/Modules/Customer/Contracts/CustomerServiceInterface.php",
            "namespace": "App\\Modules\\Customer\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface CustomerServiceInterface",
                    "CustomerServiceInterface"
                ]
            ],
            "methods": [
                "getCustomers",
                "createCustomer",
                "updateCustomer",
                "updateCustomerStatus",
                "deleteCustomer",
                "getActiveCustomersForSelection",
                "getCustomersByFamily",
                "getCustomersByType",
                "searchCustomers",
                "getCustomerStatistics",
                "customerExists",
                "findByEmail",
                "findByMobileNumber",
                "sendOnboardingMessage"
            ],
            "method_count": 14,
            "uses": [
                "App\\Models\\Customer",
                "App\\Http\\Requests\\StoreCustomerRequest",
                "App\\Http\\Requests\\UpdateCustomerRequest",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 41,
            "size_bytes": 1407
        },
        {
            "file_path": "app/Modules/Policy/Contracts/PolicyServiceInterface.php",
            "namespace": "App\\Modules\\Policy\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface PolicyServiceInterface",
                    "PolicyServiceInterface"
                ]
            ],
            "methods": [
                "getPolicies",
                "createPolicy",
                "updatePolicy",
                "renewPolicy",
                "cancelPolicy",
                "getPolicyById",
                "getActivePolicies",
                "getExpiringPolicies",
                "calculatePremium",
                "calculateCommission",
                "getPolicyStatistics",
                "searchPolicies",
                "getCustomerPolicies"
            ],
            "method_count": 13,
            "uses": [
                "App\\Models\\CustomerInsurance",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Database\\Eloquent\\Collection",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 37,
            "size_bytes": 1237
        },
        {
            "file_path": "app/Modules/Quotation/Contracts/QuotationServiceInterface.php",
            "namespace": "App\\Modules\\Quotation\\Contracts",
            "file_type": "interface",
            "classes": [
                [
                    "interface QuotationServiceInterface",
                    "QuotationServiceInterface"
                ]
            ],
            "methods": [
                "getQuotations",
                "createQuotation",
                "updateQuotation",
                "deleteQuotation",
                "generateCompanyQuotes",
                "getQuotationStatistics",
                "findById",
                "getActiveQuotations"
            ],
            "method_count": 8,
            "uses": [
                "App\\Models\\Quotation",
                "App\\Http\\Requests\\StoreQuotationRequest",
                "App\\Http\\Requests\\UpdateQuotationRequest",
                "Illuminate\\Contracts\\Pagination\\LengthAwarePaginator",
                "Illuminate\\Http\\Request"
            ],
            "line_count": 28,
            "size_bytes": 936
        },
        {
            "file_path": "app/Policies/CustomerPolicy.php",
            "namespace": "App\\Policies",
            "file_type": "class",
            "classes": [
                [
                    "class CustomerPolicy",
                    "CustomerPolicy"
                ]
            ],
            "methods": [
                "viewAny",
                "view",
                "viewPolicy",
                "downloadPolicy",
                "viewFamilyData",
                "viewAllFamilyPolicies",
                "changePassword",
                "create",
                "update",
                "delete",
                "restore",
                "forceDelete"
            ],
            "method_count": 12,
            "uses": [
                "App\\Models\\Customer",
                "App\\Models\\CustomerInsurance",
                "App\\Models\\User",
                "Illuminate\\Auth\\Access\\Response"
            ],
            "line_count": 110,
            "size_bytes": 2811
        },
        {
            "file_path": "app/Rules/MatchOldPassword.php",
            "namespace": "App\\Rules",
            "file_type": "class",
            "classes": [
                [
                    "class MatchOldPassword implements Rule\r\n",
                    "MatchOldPassword",
                    "",
                    "Rule\r\n"
                ]
            ],
            "methods": [
                "__construct",
                "passes",
                "message"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Support\\Facades\\Hash",
                "Illuminate\\Contracts\\Validation\\Rule"
            ],
            "line_count": 42,
            "size_bytes": 800
        },
        {
            "file_path": "app/Traits/ExportableTrait.php",
            "namespace": "App\\Traits",
            "file_type": "class",
            "classes": [
                [
                    "trait ExportableTrait",
                    "ExportableTrait"
                ],
                [
                    "class to",
                    "to"
                ],
                [
                    "class name",
                    "name"
                ],
                [
                    "class not",
                    "not"
                ]
            ],
            "methods": [
                "exportToExcel",
                "export"
            ],
            "method_count": 2,
            "uses": [
                "Maatwebsite\\Excel\\Facades\\Excel",
                "Illuminate\\Http\\Response",
                "* @param string $filename The filename for the export\n     * @return \\Symfony\\Component\\HttpFoundation\\BinaryFileResponse\n     */\n    public function exportToExcel(string $exportClass, string $filename = null): Response\n    {\n        if (!$filename) {\n            $filename = strtolower(class_basename($this)) . 's.xlsx'"
            ],
            "line_count": 61,
            "size_bytes": 1853
        },
        {
            "file_path": "app/Traits/HelperTrait.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait HelperTrait",
                    "HelperTrait"
                ]
            ],
            "methods": [
                "getUserActivityLogJSON",
                "isJson",
                "sentenceCase"
            ],
            "method_count": 3,
            "uses": [
                "Illuminate\\Http\\Response"
            ],
            "line_count": 71,
            "size_bytes": 2549
        },
        {
            "file_path": "app/Traits/TableRecordObserver.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait TableRecordObserver",
                    "TableRecordObserver"
                ]
            ],
            "methods": [
                "boot"
            ],
            "method_count": 1,
            "uses": [],
            "line_count": 27,
            "size_bytes": 726
        },
        {
            "file_path": "app/Traits/WhatsAppApiTrait.php",
            "namespace": "App\\Traits",
            "file_type": "trait",
            "classes": [
                [
                    "trait WhatsAppApiTrait",
                    "WhatsAppApiTrait"
                ]
            ],
            "methods": [
                "whatsAppSendMessage",
                "whatsAppSendMessageWithAttachment",
                "validateAndFormatMobileNumber",
                "newCustomerAdd",
                "insuranceAdded",
                "renewalReminder",
                "renewalReminderVehicle"
            ],
            "method_count": 7,
            "uses": [],
            "line_count": 244,
            "size_bytes": 10295
        }
    ]
}